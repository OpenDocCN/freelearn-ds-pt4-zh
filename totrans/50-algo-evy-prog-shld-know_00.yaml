- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the realm of computing, from foundational theories to hands-on applications,
    algorithms are the driving force. In this updated edition, we delve even further
    into the dynamic world of algorithms, broadening our scope to tackle pressing,
    real-world issues. Starting with the rudiments of algorithms, we journey through
    a myriad of design techniques, leading to intricate areas like linear programming,
    page ranking, graphs, and a more profound exploration of machine learning. To
    ensure we’re at the forefront of technological advancements, we’ve incorporated
    substantial discussions on sequential networks, LLMs, LSTM, GRUs, and now, cryptography
    and the deployment of large-scale algorithms in cloud computing environments.
  prefs: []
  type: TYPE_NORMAL
- en: The significance of algorithms in recommendation systems, a pivotal element
    in today’s digital age, is also meticulously detailed. To effectively wield these
    algorithms, understanding their underlying math and logic is paramount. Our hands-on
    case studies, ranging from weather forecasts and tweet analyses to film recommendations
    and delving into the nuances of LLMs, exemplify their practical applications.
  prefs: []
  type: TYPE_NORMAL
- en: Equipped with the insights from this book, our goal is to bolster your confidence
    in deploying algorithms to tackle modern computational challenges. Step into this
    expanded journey of deciphering and leveraging algorithms in today’s evolving
    digital landscape.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you’re a programmer or developer keen on harnessing algorithms to solve problems
    and craft efficient code, this book is for you. From classic, widely-used algorithms
    to the latest in data science, machine learning, and cryptography, this guide
    covers a comprehensive spectrum. While familiarity with Python programming is
    beneficial, it’s not mandatory.
  prefs: []
  type: TYPE_NORMAL
- en: A foundation in any programming language will serve you well. Moreover, even
    if you’re not a programmer but have some technical inclination, you’ll gain insights
    into the expansive world of problem-solving algorithms from this book.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Section 1: Fundamentals and Core Algorithms**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Chapter 1*, *Overview of Algorithms*, provides insight into the fundamentals
    of algorithms. It starts with the basic concepts of algorithms, how people started
    using algorithms to formulate problems, and the limitations of different algorithms.
    As Python is used in this book to write the algorithms, how to set up a Python
    environment to run the examples is explained. We will then look at how an algorithm’s
    performance can be quantified and compared against other algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 2*, *Data Structures Used in Algorithms*, discusses data structures
    in the context of algorithms. As we are using Python in this book, this chapter
    focuses on Python data structures, but the concepts presented can be used in other
    languages such as Java and C++. This chapter will show you how Python handles
    complex data structures and which structures should be used for certain types
    of data.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 3*, *Sorting and Searching Algorithms*, starts by presenting different
    types of sorting algorithms and various approaches for designing them. Then, following
    practical examples, searching algorithms are also discussed.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 4*, *Designing Algorithms*, covers the choices available to us when
    designing algorithms, discussing the importance of characterizing the problem
    that we are trying to solve. Next, it uses the famous **Traveling Salesperson
    Problem** (**TSP**) as a use case and applies the design techniques that we will
    be presenting. It also introduces linear programming and discusses its applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 5*, *Graph Algorithms*, covers the ways we can capture graphs to represent
    data structures. It covers some foundational theories, techniques, and methods
    relating to graph algorithms, such as network theory analysis and graph traversals.
    We will investigate a case study using graph algorithms to delve into fraud analytics.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Section 2: Machine Learning Algorithms**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Chapter 6*, *Unsupervised* *Machine Learning Algorithms*, explains how unsupervised
    learning can be applied to real-world problems. We will learn about its basic
    algorithms and methodologies, such as clustering algorithms, dimensionality reduction,
    and association rule mining.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 7*, *Traditional Supervised Learning Algorithms*, delves into the
    essentials of supervised machine learning, featuring classi­fiers and regressors.
    We will explore their capabilities using real-world problems as case studies.
    Six distinct classification algorithms are presented, followed by three regression
    techniques. Lastly, we’ll compare their results to encapsulate the key takeaways
    from this discussion.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 8*, *Neural Network Algorithms*, introduces the main concepts and
    components of a typical neural network. It then presents the various types of
    neural networks and the activation functions used in them. The backpropagation
    algorithm is discussed in detail, which is the most widely used algorithm for
    training a neural network. Finally, we will learn how to use deep learning to
    flag fraudulent documents by way of a real-world example application.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 9*, *Algorithms for Natural Language Processing*, introduces algorithms
    for **natural language processing** (**NLP**). It introduces the fundamentals
    of NLP and how to prepare data for NLP tasks. After that, it explains the concepts
    of vectorizing textual data and word embeddings. Finally, we present a detailed
    use case.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 10*, *Understanding Sequential Models*, looks into training neural
    networks for sequential data. It covers the core principles of sequential models,
    providing an introductory overview of their techniques and methodologies. It will
    then consider how deep learning can improve NLP techniques.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 11*, *Advanced Sequential Modeling Algorithms*, considers the limitations
    of sequential models and how sequential modeling has evolved to overcome these
    limitations. It delves deeper into the advanced aspects of sequential models to
    understand the creation of complex configurations. It starts by breaking down
    key elements, such as autoencoders and **Sequence-to-Sequence** (**Seq2Seq**)
    models. Next, it looks into attention mechanism and transformers, which are pivotal
    in the development of **Large Language Models** (**LLMs**), which we will then
    study.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Section 3: Advanced Topics**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Chapter 12*, *Recommendation Engines*, covers the main types of recommendation
    engines and the inner workings of each. These systems are adept at suggesting
    tailored items or products to users, but they’re not without their challenges.
    We’ll discuss both their strengths and the limitations they present. Finally,
    we will learn how to use recommendation engines to solve a real-world problem.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 13*, *Algorithmic Strategies for Data Handling*, introduces data algorithms
    and the basic concepts behind the classification of data. We will look at the
    data storage and data compression algorithms used to efficiently manage data,
    helping us to understand the trade-offs involved in designing and implementing
    data-centric algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 14*, *Cryptography*, introduces you to algorithms related to cryptography.
    We will start by presenting the background of cryptography before discussing symmetric
    encryption algorithms. We will learn about the **Message-Digest 5** (**MD5**)
    algorithm and the **Secure Hash Algorithm** (**SHA**), presenting the limitations
    and weaknesses of each. Then, we will discuss asymmetric encryption algorithms
    and how they are used to create digital certificates. Finally, we will present
    a practical example that summarizes all of these techniques.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 15*, *Large-Scale Algorithms*, starts by introducing large-scale algorithms
    and the efficient infrastructure required to support them. We will explore various
    strategies for managing multi-resource processing. We will examine the limitations
    of parallel processing, as outlined by Amdahl’s law, and investigate the use of
    **Graphics Processing Units** (**GPUs**). Upon completing this chapter, you will
    have gained a solid foundation in the fundamental strategies essential for designing
    large-scale algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 16,* *Practical Considerations*, presents the issues around the explainability
    of an algorithm, which is the degree to which the internal mechanics of an algorithm
    can be explained in understandable terms. Then, we will present the ethics of
    using an algorithm and the possibility of creating biases when implementing them.
    Next, the techniques for handling NP-hard problems will be discussed. Finally,
    we will investigate factors that should be considered before choosing an algorithm.'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/cloudanum/50Algorithms](https://github.com/cloudanum/50Algorithms).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out! You can also find the same code bundle on Google Drive at [http://code.50algo.com](http://code.50algo.com).
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots and diagrams
    used in this book. You can download it here: [https://packt.link/UBw6g](https://packt.link/UBw6g).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “Let’s try to create a simple graph using the `networtx`
    package in Python.”'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, new terms appear in text like this: “Python is also one of the languages
    that you can use in various cloud computing infrastructures, such as **Amazon
    Web Services** (**AWS**) and **Google Cloud Platform** (**GCP**).”'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book’s
    title in the subject of your message. If you have questions about any aspect of
    this book, please email us at `questions@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you reported this to us. Please visit [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    click **Submit Errata**, and fill in the form.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [http://authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Share your thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *50 Algorithms Every Programmer Should Know - Second Edition*,
    we’d love to hear your thoughts! Please [click here to go straight to the Amazon
    review page](https://packt.link/r/1803247762) for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: Do you like to read on the go but are unable to carry your print books everywhere?
    Is your eBook purchase not compatible with the device of your choice?
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Scan the QR code or visit the link below
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18046_QR_Free_PDF.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[https://packt.link/free-ebook/9781803247762](https://packt.link/free-ebook/9781803247762)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Submit your proof of purchase
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
