["```py\npip install pytrends\n```", "```py\n    import pandas as pd\n    ```", "```py\n    from pytrends.request import TrendReq\n    ```", "```py\n    pytrend = TrendReq()\n    ```", "```py\n    #provide your search terms\n    ```", "```py\n    kw_list=['bitcoin',\n    ```", "```py\n             'stocks',\n    ```", "```py\n             'real estate',\n    ```", "```py\n             'bonds']\n    ```", "```py\n    #search interest per region\n    ```", "```py\n    pytrend.build_payload(kw_list, timeframe='today 12-m')\n    ```", "```py\n    # Interest by Region\n    ```", "```py\n    regiondf_12m = pytrend.interest_by_region()\n    ```", "```py\n    # #looking at rows where all values are not equal to 0\n    ```", "```py\n    regiondf_12m = regiondf_12m[regiondf_12m.sum(axis=1)!=0]\n    ```", "```py\n    # visualize\n    ```", "```py\n    regiondf_12m.plot(figsize=(14, 8), y=kw_list, \n    ```", "```py\n          kind ='bar')\n    ```", "```py\n    regiondf_12m['bitcoin'].sort_values(ascending= False).plot(figsize=(14, 8),                              \n    ```", "```py\n    y=regiondf_12m['bitcoin'].index,kind ='bar')\n    ```", "```py\nregiondf_12m['real estate'].sort_values(ascending= \n   False).plot(figsize=(14, 8),\n      y=regiondf_12m['real estate'].index,kind ='bar')\n```", "```py\n    regiondf_12m['stocks'].sort_values(ascending= False).plot(figsize=(14, 8),\n    ```", "```py\n         y=regiondf_12m['stocks'].index,kind ='bar')\n    ```", "```py\n    regiondf_12m['bonds'].sort_values(ascending= False).plot(figsize=(14, 8), \n    ```", "```py\n         y=regiondf_12m['bonds'].index, kind ='bar')\n    ```", "```py\n    #search interest per region\n    ```", "```py\n    pytrend = TrendReq()\n    ```", "```py\n    pytrend.build_payload(kw_list, timeframe='today 3-m')\n    ```", "```py\n    # Interest by Region\n    ```", "```py\n    regiondf_3m = pytrend.interest_by_region()\n    ```", "```py\n    # #looking at rows where all values are not equal to 0\n    ```", "```py\n    regiondf_3m = regiondf_3m[regiondf_3m.sum(axis=1)!=0]\n    ```", "```py\n    # visualize\n    ```", "```py\n    regiondf_3m.plot(figsize=(14, 8), y=kw_list, kind ='bar')\n    ```", "```py\n    df = pd.DataFrame([regiondf_3m['stocks'],\n    ```", "```py\n                      regiondf_12m['stocks'],\n    ```", "```py\n                      regiondf_3m['bitcoin'],\n    ```", "```py\n                      regiondf_12m['bitcoin'],\n    ```", "```py\n                      regiondf_3m['real estate'],\n    ```", "```py\n                      regiondf_12m['real estate'],\n    ```", "```py\n                      regiondf_3m['bonds'],\n    ```", "```py\n                      regiondf_12m['bonds']\n    ```", "```py\n                      ]).T\n    ```", "```py\n    cols = ['stocks_3m','stocks_12m','bitcoin_3m',\n    ```", "```py\n    'bitcoin_12m','real_estate_3m','real_estate_12m','bonds_3m','bonds_12m']\n    ```", "```py\n    df.columns = cols\n    ```", "```py\n    df['diff_stocks'] = df['stocks_12m'] - df['stocks_3m']\n    ```", "```py\n    df['diff_bitcoin'] = df['bitcoin_12m'] - df['bitcoin_3m']\n    ```", "```py\n    df['diff_real_estate'] = df['real_estate_12m'] - df['real_estate_3m']\n    ```", "```py\n    df['diff_bonds'] = df['bonds_12m'] - df['bonds_3m']\n    ```", "```py\n    # Inspect the new created columns\n    ```", "```py\n    df.head()\n    ```", "```py\n    n_cols = ['diff_stocks','diff_bitcoin',\n    ```", "```py\n          'diff_real_estate','diff_bonds']\n    ```", "```py\n    df = df[n_cols]\n    ```", "```py\n    df.head()\n    ```", "```py\n    # Create a mask for of the null results\n    ```", "```py\n    mask = df.abs().sum(axis=1)!=0\n    ```", "```py\n    df = df[mask]\n    ```", "```py\n    df.head()\n    ```", "```py\ndata = df['diff_stocks'][df['diff_stocks']!=0]\ndata = data.sort_values(ascending = False)\ndata.plot(figsize=(14, 8),y=data.index, kind ='bar')\n```", "```py\n    df['diff_bitcoin'][df['diff_bitcoin']!=0\n    ```", "```py\n    ].sort_values(ascending = False).plot(figsize=(14, 8), y=df['diff_bitcoin'][df['diff_bitcoin']!=0].index,kind ='bar')\n    ```", "```py\n    df['diff_bonds'][df['diff_bonds']!=0\n    ```", "```py\n    ].sort_values(ascending = False).plot(figsize=(14, 8),y = df['diff_bonds'][df['diff_bonds']!=0].index,kind ='bar')\n    ```", "```py\n    df['diff_real_estate'][df['diff_real_estate']!=0].sort_values(ascending = False).plot(figsize=(14, 8),y=df['diff_real_estate'][df['diff_real_estate']!=0].index,kind ='bar')\n    ```", "```py\ngeo = ['US','CA','NZ','AU']\nd_full = pd.DataFrame()\nfor g in geo:\n  pytrend.build_payload(kw_list=['bitcoin','stocks'],\n  geo=g,timeframe='today 3-m')\n  #get related queries\n  related_queries = pytrend.related_queries()\n  # Bitcoin top\n  d = related_queries['bitcoin']['top']\n  d['source_query'] = 'bitcoin'\n  d['type'] = 'top'\n  d['geo'] = g\n  d_full = pd.concat([d_full,d],axis=0)\n  # Bitcoin rising\n  d = related_queries['bitcoin']['rising']\n  d['source_query'] = 'bitcoin'\n  d['type'] = 'rising'\n  d['geo'] = g\n  d_full = pd.concat([d_full,d],axis=0)\n  # stocks top\n  d = related_queries['stocks']['top']\n  d['source_query'] = 'stocks'\n  d['type'] = 'top'\n  d['geo'] = g\n  d_full = pd.concat([d_full,d],axis=0)\n  # stocks rising\n  d = related_queries['stocks']['rising']\n  d['source_query'] = 'stocks'\n  d['type'] = 'rising'\n  d['geo'] = g\n  d_full = pd.concat([d_full,d],axis=0)\n```", "```py\nd_full = d_full.reset_index(drop=True)\nd_full.head(10)\n```", "```py\n    from wordcloud import WordCloud\n    ```", "```py\n    from wordcloud import ImageColorGenerator\n    ```", "```py\n    from wordcloud import STOPWORDS\n    ```", "```py\n    import matplotlib.pyplot as plt\n    ```", "```py\n    data = d_full[(d_full['source_query']=='stocks')&(\n    ```", "```py\n          d_full['type']=='top')&(d_full['geo']=='US')]\n    ```", "```py\n    text = \" \".join(i for i in data['query']).replace('stock','')\n    ```", "```py\n    stopwords = set(STOPWORDS)\n    ```", "```py\n    wordcloud = WordCloud(stopwords=stopwords, background_color=\"white\").generate(text)\n    ```", "```py\n    plt.figure( figsize=(12,8))\n    ```", "```py\n    plt.imshow(wordcloud, interpolation='bilinear')\n    ```", "```py\n    plt.axis(\"off\")\n    ```", "```py\n    plt.show()\n    ```", "```py\n    data = d_full[(d_full['source_query']=='stocks')&(\n    ```", "```py\n          d_full['type']=='rising')&(d_full['geo']=='US')]\n    ```", "```py\n    text = \" \".join(i for i in data['query']).replace('stock','')\n    ```", "```py\n    stopwords = set(STOPWORDS)\n    ```", "```py\n    wordcloud = WordCloud(stopwords=stopwords, \n    ```", "```py\n          background_color=\"white\").generate(text)\n    ```", "```py\n    plt.figure( figsize=(12,8))\n    ```", "```py\n    plt.imshow(wordcloud, interpolation='bilinear')\n    ```", "```py\n    plt.axis(\"off\")\n    ```", "```py\n    plt.show()\n    ```", "```py\n    data = d_full[(d_full['source_query']=='bitcoin')&(\n    ```", "```py\n          d_full['type']=='top')&(d_full['geo']=='NZ')]\n    ```", "```py\n    text = \" \".join(i for i in data['query']).replace('bitcoin','')\n    ```", "```py\n    stopwords = set(STOPWORDS)\n    ```", "```py\n    wordcloud = WordCloud(stopwords=stopwords, \n    ```", "```py\n          background_color=\"white\").generate(text)\n    ```", "```py\n    plt.figure( figsize=(12,8))\n    ```", "```py\n    plt.imshow(wordcloud, interpolation='bilinear')\n    ```", "```py\n    plt.axis(\"off\")\n    ```", "```py\n    plt.show()\n    ```", "```py\n    data = d_full[(d_full['source_query']=='bitcoin')&(\n    ```", "```py\n          d_full['type']=='rising')&(d_full['geo']=='NZ')]\n    ```", "```py\n    text = \" \".join(i for i in data['query']).replace('bitcoin','')\n    ```", "```py\n    stopwords = set(STOPWORDS)\n    ```", "```py\n    wordcloud = WordCloud(stopwords=stopwords, \n    ```", "```py\n          background_color=\"white\").generate(text)\n    ```", "```py\n    plt.figure( figsize=(12,8))\n    ```", "```py\n    plt.imshow(wordcloud, interpolation='bilinear')\n    ```", "```py\n    plt.axis(\"off\")\n    ```", "```py\n    plt.show()\n    ```", "```py\n    query_data = d_full[(d_full['source_query']=='bitcoin' )&(d_full['type']=='rising')&(d_full['geo']=='US')]\n    ```", "```py\n    query_data.head()\n    ```", "```py\n    kw_list = query_data.head()['query'].tolist() # list of keywords to get data\n    ```", "```py\n    # build payload\n    ```", "```py\n    pytrend.build_payload(kw_list, cat=0, timeframe='today 12-m')\n    ```", "```py\n    # Interest over Time\n    ```", "```py\n    data = pytrend.interest_over_time()\n    ```", "```py\n    data = data.reset_index()\n    ```", "```py\n    import plotly.express as px\n    ```", "```py\n    fig = px.line(data, x=\"date\", y=kw_list, title='Keyword Web Search Interest Over Time')\n    ```", "```py\n    fig.show()\n    ```"]