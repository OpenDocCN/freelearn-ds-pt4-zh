- en: '10'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Web Analytics Optimization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A data-driven marketing optimization is an analytical approach to marketing
    that values decisions that can be supported with trustworthy and verifiable data.
    It places high importance on choices that can be substantiated by empirical evidence,
    whether traffic sources, page views, or time spent per session. The effectiveness
    of data collection, processing, and interpretation to maximize marketing results
    are key components of the data-based approach’s success.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will be learning about the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding what web analytics is
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How web analytics data is used to improve business operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calculating the user’s **customer lifetime value** (**CLV**) based on web analytics
    data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Predicting the user’s CLV based on this historical data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s determine what the requirements will be for understanding these steps
    and following the chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter covers the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding web analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using web analytics to improve business decisions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring the data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calculating CLV
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Predicting customer revenue
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to be able to follow the steps in this chapter, you will need to meet
    the next requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: A Jupyter Notebook instance running Python 3.7 and above. You can use the Google
    Colab notebook to run the steps as well if you have a Google Drive account.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding of basic math and statistical concepts.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding web analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For e-commerce, understanding user base behavior is fundamental. Data from
    web analytics is frequently shown on dashboards that can be altered on the basis
    of a user persona or time period, along with other factors. These dashboards are
    then used to make product and market decisions, so the accuracy of this data is
    of paramount importance. The data can be divided into groups, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: By examining the number of visits, the proportion of new versus returning visitors,
    the origin of the visitors, and the browser or device they are using (desktop
    vs. mobile), it is possible to understand audience data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Common landing pages, commonly visited pages, common exit pages, the amount
    of time spent per visit, the number of pages per visit, and the bounce rate can
    all be used to study audience behavior
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Campaign data to understand which campaigns have generated the most traffic,
    the best websites working as referral sources, which keyword searches led to visits,
    and a breakdown of the campaign’s mediums, such as email versus social media
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This information can then be used by sales, product, and marketing teams to
    gain knowledge about how the users interact with the product, how to tailor messages,
    and how to improve products.
  prefs: []
  type: TYPE_NORMAL
- en: One of the best and most potent tools available for tracking and analyzing website
    traffic is Google Analytics. You can learn a ton about your website’s visitors
    from this, including who they are, what they are looking for, and how they found
    you. Google Analytics should be used by every company that wants to develop and
    improve its online presence.
  prefs: []
  type: TYPE_NORMAL
- en: 'The most crucial information that Google Analytics will provide you with is
    listed here:'
  prefs: []
  type: TYPE_NORMAL
- en: Where your visitors are coming from – very important if you’re targeting a specific
    audience.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How people find your website is crucial information for figuring out whether
    your efforts are successful. It indicates whether users arrived at your site directly,
    via a link from another website (such as Twitter or Facebook), or via search engines.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Browsers used by your visitors – by understanding which browsers they use, you
    can decide which ones you should concentrate on.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which search engine terms people used to find your website are essential information
    for SEO. Finding out what search terms people use to find your website helps you
    gauge your progress.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next section, we will dive into how we can use Google Analytics data
    to understand our customer bases.
  prefs: []
  type: TYPE_NORMAL
- en: Using web analytics to improve business operations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By utilizing insights from digital analytics and user input, we can increase
    the performance of our websites and apps through conversion rate optimization.
    This is done by using the current traffic and maximizing it, with the intention
    of leading to a rise in sales, leads, or any other goal.
  prefs: []
  type: TYPE_NORMAL
- en: With the help of digital analytics dashboards and analysis, we can monitor user
    activity, including their source, where they go on our website or app, and how
    they move around the various pages. We can determine where there is the most potential
    and what needs to be changed to meet the specified aims and objectives thanks
    to the content and user behavior analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Tagging for a business’s website or app has context thanks to the definition
    and execution of a measurement plan. This enables companies to perform a **strengths,
    weakness, opportunities, and threats** (**SWOT**) analysis, which will lead to
    fixing your goals and objectives and indicate which user segments must be targeted
    with particular content and messaging both inside and outside the website or app.
  prefs: []
  type: TYPE_NORMAL
- en: An A/B or multivariate test is also possible when the opportunity or threat
    has been identified. With this, we may display two (or more) different iterations
    of a website’s functionality to various user groups and then assess which one
    performs better. We can make data-driven decisions using this method while ignoring
    factors such as seasonal impacts.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have the context of the application, let’s start by looking at the
    dataset and understanding our needs, our objectives, and the limitations of the
    analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will use the following Python modules in the next example:'
  prefs: []
  type: TYPE_NORMAL
- en: '**pandas**: Python package for data analysis and data manipulation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NumPy**: This is a library that adds support for large, multi-dimensional
    arrays and matrices, along with a large collection of high-level mathematical
    functions to operate on these arrays.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Statsmodels`: Python package that provides a complement to SciPy for statistical
    computations, including descriptive statistics and estimation and inference for
    statistical models. It provides classes and functions for the estimation of many
    different statistical models.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Seaborn and Matplotlib**: Python packages for effective data visualization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We’ll get started using the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following block of code will load all the required packages, as well as
    load the data and show the first five rows of it. For readability purposes, we
    will limit the maximum number of rows to be shown to `20`, set the limit of maximum
    columns to `50`, and show the floats with `2` digits of precision:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The preceding code will load the file, convert the date column into the correct
    data type, and prompt us to the first rows.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.1: Google Analytics sample data ](img/B19026_10_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.1: Google Analytics sample data'
  prefs: []
  type: TYPE_NORMAL
- en: We can see that it’s a demo of the data that we can obtain from Google Analytics,
    as some columns are not available.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will explore the set of columns:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This line will show us the name of all the columns in the file.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.2: Column names ](img/B19026_10_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.2: Column names'
  prefs: []
  type: TYPE_NORMAL
- en: 'From the information that we obtain about the columns and the data from the
    Kaggle competition, we can describe the columns in the dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '`fullVisitorId`: Identifier for each user.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`channelGrouping`: The channel from which the customer was redirected.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`date`: The date of the visit.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Device`: Type of device used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`geoNetwork`: Location of the customer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`socialEngagementType`: Is the customer socially engaged?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`trafficSource`: This shows the source of the traffic.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`visitId`: Identifier of the specific visit.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`visitNumber`: Count of sessions for the specific customer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now that we have the information about the columns, we can plot the revenue
    columns to look at their distribution:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This line will use pandas `plot` methods to show the distribution of the column.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.3: Revenue distribution ](img/B19026_10_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.3: Revenue distribution'
  prefs: []
  type: TYPE_NORMAL
- en: 'Many companies have found the 80/20 rule to be true: only a tiny proportion
    of clients generate the majority of the revenue, and we can verify this by looking
    at the data, with a small proportion of clients generating the most amount of
    revenue. The problem for marketing teams is allocating the proper funds to promotional
    activities. In this instance, the ratio is significantly lower.'
  prefs: []
  type: TYPE_NORMAL
- en: The statistical link between the data points is depicted using a relational
    plot. Data visualization is crucial for spotting trends and patterns. This graphic
    gives users access to additional axes-level functions that, using semantic subset
    mappings, can illustrate the relationship between two variables. Passing the entire
    dataset in long-form mode will aggregate over repeated values (each year) to show
    the mean and 95% confidence interval.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Here, we use the `seaborn` package to create a relation plot with 95% confidence
    interval areas for the revenue column:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'This showcases the distribution of the transactions with a confidence interval
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.4: Revenue distribution with a confidence interval ](img/B19026_10_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.4: Revenue distribution with a confidence interval'
  prefs: []
  type: TYPE_NORMAL
- en: One of the problems we see here is that because of the difference in value,
    the data is difficult to see, so we will implement a logarithmic scale. When examining
    a wide range of values, a nonlinear scale called a logarithmic scale is frequently
    utilized. Each interval is raised by a factor of the logarithm’s base rather than
    by equal increments. A base ten and base e scale are frequently employed.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, the data you are displaying is much less or greater than the rest
    of the data – when the percentage changes between values are significant, logarithmic
    scales also might be helpful. If the data on the visualization falls within a
    very wide range, we can use a logarithmic scale.
  prefs: []
  type: TYPE_NORMAL
- en: Another benefit is that when displaying less significant price rises or declines,
    logarithmic pricing scales perform better than linear price scales. They can assist
    you in determining how far the price must rise or fall in order to meet a buy
    or sell target. However, logarithmic price scales may become crowded and challenging
    to read if prices are close together. When utilizing a logarithmic scale, when
    the percent change between the values is the same, the vertical distance between
    the prices on the scale will be equal.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we will implement the logarithmic scale using the `numpy` library on
    the revenue column:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Here, we can see the transactions on a logarithmic scale.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.5: Logarithmic scale revenue ](img/B19026_10_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.5: Logarithmic scale revenue'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can now use the relationship plot to visualize the logarithmic transaction
    values with their confidence interval better:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: We can get better visibility with `relplot`, which will plot the mean data as
    a line and show the confidence intervals where 95% percent of the data exists.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.6: Logarithmic scale revenue with a confidence interval ](img/B19026_10_6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.6: Logarithmic scale revenue with a confidence interval'
  prefs: []
  type: TYPE_NORMAL
- en: 'Another way to visualize this is by using scatter plots, which will be helpful
    for identifying outliers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The scatter plot shows us that there are some outliers.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.7: Transactions as scatter plot ](img/B19026_10_7.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.7: Transactions as scatter plot'
  prefs: []
  type: TYPE_NORMAL
- en: Here, we can see more clearly that there are just a couple of users who generate
    an incredibly high amount of revenue with their orders.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we can look at the expenditure patterns of the top 50 clients:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The next is a barplot of the top customers.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.8: Users with the highest revenue ](img/B19026_10_8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.8: Users with the highest revenue'
  prefs: []
  type: TYPE_NORMAL
- en: We can confirm from this graphic that user **26437** is our biggest customer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finding potential markets for your goods and services with Google Analytics
    is another fantastic application of the tool. You can check the number of visits
    and conversion rates separately by country to choose where to focus your efforts
    and which locations are worth expanding into if your business runs on a worldwide
    scale or if you are considering becoming global. Here, we can analyze the top
    countries in our user base:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The preceding code will show us the countries that the users come from.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.9: Total countries ](img/B19026_10_9.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.9: Total countries'
  prefs: []
  type: TYPE_NORMAL
- en: We can see that the vast majority of users are concentrated in the US.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s now focus on our top clients and see where they come from. We can do
    this by masking the users that are in our top 50 users list and then replicating
    the preceding graphic:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The preceding code will show us the top countries in a barplot.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.10: Countries of biggest customers ](img/B19026_10_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.10: Countries of biggest customers'
  prefs: []
  type: TYPE_NORMAL
- en: Again, we can determine that our biggest clients come from the US, followed
    by Kenya and Japan.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we will analyze how many of our visitors actually converted, meaning that
    they actually bought something:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The ratio is that almost 8% of our users have actually bought from the website,
    which is good.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we will start the process of cleaning the data, so we will look for categorical
    columns with just a single value. These are columns that don’t provide any data,
    so we will get rid of them:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, we will simplify the data by removing some of the columns that we will
    not be using:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE34]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE35]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE36]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE37]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the columns we have now:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.11: Final set of columns ](img/B19026_10_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.11: Final set of columns'
  prefs: []
  type: TYPE_NORMAL
- en: 'Our columns have now been reduced to the ones that we actually need. Now, let’s
    explore the `campaign` column to find which campaign was more successful:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![Figure 10.12: Campaign data ](img/B19026_10_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.12: Campaign data'
  prefs: []
  type: TYPE_NORMAL
- en: We can see from the campaign data that most of the traffic doesn’t come from
    campaigns, and some of them actually perform poorly. This is information that
    could help the marketing team to optimize these campaigns and save money.
  prefs: []
  type: TYPE_NORMAL
- en: Calculating CLV
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Customer lifetime value (CLV) is a metric used to describe how much money a
    company can expect to make overall from a typical customer during the duration
    that person or account stays a customer. CLV is the total amount a company makes
    from a typical customer during the term of that customer’s relationship with the
    company and it is used in marketing to forecast the net profit that will be generated
    over the course of a customer’s entire future relationship.
  prefs: []
  type: TYPE_NORMAL
- en: Knowing the CLV of our clients is crucial since it informs our choices regarding
    how much money to spend on attracting new clients and keeping existing ones. The
    simplest way to calculate CLV is by multiplying the average value of a purchase
    by the number of times the customer will make a purchase each year by the average
    length of the customer relationship (in years or months).
  prefs: []
  type: TYPE_NORMAL
- en: 'Numerous benefits can be derived from calculating the CLV of various clients,
    but business decision-making is the key one. Knowing your CLV allows you to find
    out things such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: How much you can spend and still have a lucrative connection with a similar
    consumer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What kinds of products customers with the highest CLVs want
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which products have the highest profitability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who your most profitable types of clients are
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Spending your resources on selling more to your present client base is the
    key since the odds of selling to a current customer are 60 to 70 percent, compared
    to the odds of selling to a new customer, which are 5 to 20 percent. Several strategies
    will make it more likely for a consumer to make additional purchases from a company.
    Some of these methods are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Make returning things that they have purchased from you simple for your clients,
    as making it difficult or expensive for a user to return a product will drastically
    lower the likelihood that they will make another purchase.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set expectations for delivery dates with the goal of exceeding expectations
    by establishing a safety margin. Promise delivery by May 20 and deliver it by
    May 1 instead of the other way around.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a program with attainable and desired incentives for users to repeat
    purchases.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To encourage customers to stick with your brand, provide incentives.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintain contact with long-term clients to assert that you are still thinking
    of them. Give them a simple way to contact you as well.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Focusing on acquiring and keeping repeat consumers who will promote your brand,
    as well as long-term clients.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'More concretely, the steps to calculate the CLV are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Slice the data into chunks of 3 months.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sum the revenue for each customer in the last 3 months.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Generate columns such as days since the last buy, average number of days between
    buys, and so on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We’ll run this using the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To apply this, we will define some helper functions that we will use along
    with the aggregate method in `pandas` to determine the CVL of our users:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE40]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE41]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE42]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE43]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE44]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE45]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE46]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'We want to establish the time frame of analyses as 3 months, so we will create
    a variable to establish this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'One thing to note is that we will be using the `__name__` property to determine
    the function name in Python and to keep the column names tidy. To access the `__name__`
    property, just put in the function name without parentheses and use the `__name__`
    property. It will then return the function name as a string:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE49]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE50]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE51]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, we can create our summary DataFrame by applying the `groupby` method and
    aggregating the values using our previously defined functions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE53]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE54]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE55]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Lastly, we will make some corrections to the column names for readability:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'We can check the final size of the DataFrame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'We can also check the distribution of the values with the `describe` method:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, we are calling a statistical summary from `pandas`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.13: Calculated user CLV ](img/B19026_10_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.13: Calculated user CLV'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s filter the ones that have actually bought something by looking at
    the purchase date:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE60]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'After this, we have widely reduced the number of users in our dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 'We can visualize these results by plotting the grouped results using the transaction
    count:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE63]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE64]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE65]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE66]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE67]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE68]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE69]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE70]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![Figure 10.14: Transaction revenue count ](img/B19026_10_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.14: Transaction revenue count'
  prefs: []
  type: TYPE_NORMAL
- en: Now, the most common number of transactions made is **2**, reducing in a parabolic
    manner. This gives us enough information to be able to offer customers incentives
    to keep buying after their second transaction.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now let’s take a look at the number of days between transactions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: '![Figure 10.15: Time between purchases ](img/B19026_10_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.15: Time between purchases'
  prefs: []
  type: TYPE_NORMAL
- en: This information shows us that it’s rare for customers to make another purchase
    after 25 days, so we can use this information to keep our users engaged in case
    the number of times between transactions is higher than a given threshold. This
    allows us to reduce customer churn and improve loyalty.
  prefs: []
  type: TYPE_NORMAL
- en: Now, we have determined how we can calculate the CLV, which will allow us to
    craft better marketing strategies, knowing exactly what we can spend to acquire
    each customer.
  prefs: []
  type: TYPE_NORMAL
- en: Predicting customer revenue
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By utilizing the historical transactional data from our company, we are attempting
    to forecast the future revenue that we will get from our clients at a given time.
    Planning how to reach your revenue goals is simpler when you can predict your
    revenue with accuracy, and in a lot of cases, marketing teams are given a revenue
    target, particularly after a funding round in startup industries.
  prefs: []
  type: TYPE_NORMAL
- en: 'B2B marketing focuses on the target goals, and here is when historical forecasting,
    which predicts our revenue using historical data, has consistently been successful.
    This is because precise historical revenue and pipeline data provide priceless
    insights into your previous revenue creation. You can then forecast what you’ll
    need in order to meet your income goals using these insights. Things that will
    allow us to provide better information to the marketing teams can be summarized
    into four metrics before you start calculating your anticipated revenue:'
  prefs: []
  type: TYPE_NORMAL
- en: How long you take to generate revenue
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The average time deals spend in each pipeline stage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The number of previous deals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The revenue generated for the time period
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These metrics form the basis of your predicted revenue in most cases and will
    allow the creation of better-defined marketing plans.
  prefs: []
  type: TYPE_NORMAL
- en: Questions such as how long it takes for a user to start making money require
    you to gather these metrics. Knowing your user’s time to revenue (the length of
    time it takes a deal to generate a paying customer) is the first step. This is
    due to the fact that time to revenue determines the framework for how long it
    typically takes you to create revenue and earn back the investment made into gaining
    this customer, from the moment an account is created to the user making a purchase.
    If these metrics are omitted, your revenue cycle and your estimates will be out
    of sync without this parameter, which may cause you to miss goals and allocate
    money incorrectly. The fact is that you must be aware of your time to revenue.
  prefs: []
  type: TYPE_NORMAL
- en: 'Equally, the only way to measure it precisely is to gather data starting from
    the instant an anonymous user first interacts with you until the moment this account
    converts to a client. If you don’t identify first contact, you’re measuring incorrectly
    and, once more, underestimating how long it actually takes you to make an income:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We will start the analysis by importing the packages that we will be using,
    including the `LightGBM` classification. It’s important to note that we will the
    transaction NaN values with zeros:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE73]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE74]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE75]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE76]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE77]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To make categorical data available to the various models, categorical data
    must be translated into integer representation first through the process of encoding.
    Data preparation is a necessary step before modeling in the field of data science
    – so, how do you handle categorical data in data science? Some of the methods
    used are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: One-hot encoding using Python’s `category_encoding` library
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scikit-learn preprocessing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`get_dummies` in pandas'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Binary encoding
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frequency encoding
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Label encoding
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ordinal encoding
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When data cannot be transported across systems or applications in its existing
    format, this method is frequently employed to ensure the integrity and usefulness
    of the data. Data protection and security do not employ encoding because it is
    simple to decode.
  prefs: []
  type: TYPE_NORMAL
- en: A very effective method for converting the levels of categorical features into
    numerical values is to use labels with a value between 0 and n classes - 1, where
    n is the number of different labels. Here, we are encoding the variables using
    `LabelEncoder`. A label that repeats assigns the same value as it did the first
    time.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will list the categorical columns that we want to encode. Here, the list
    is hardcoded, but we could have used `pandas` data types to determine the object
    column:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, we will iterate over them and encode them using `LabelEncoder`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE80]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE81]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE82]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE83]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Now that the categorical columns have been converted, we will continue to convert
    the numerical columns into floats to meet the requirements of LightGBM.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The next are the columns that we will be working with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: 'As the next step, we use the `astype` pandas method to cast these data types
    into floats:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE86]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE87]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, we can split the training dataset into development (`dev`) and valid (`val`)
    based on time:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE89]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE90]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Apply the log to the revenue variable:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE92]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, we concatenate the categorical and numerical columns:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE94]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The final shape of the development DataFrame can be found as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: 'The final shape of the validation DataFrame can be found as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: In order to predict the CLV of each user, we will use the LightGBM regressor
    as specified before. This algorithm is one of the best-performing and it’s a decision
    tree algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: A decision tree is a supervised machine learning tool that can be used to classify
    or forecast data based on how queries from the past have been answered. An example
    of supervised learning is a decision tree model, which is trained and tested on
    datasets that have the desired category. The non-parametric approach used for
    classification and regression applications is the decision tree. It is organized
    hierarchically and has a root node, branches, internal nodes, and leaf nodes.
  prefs: []
  type: TYPE_NORMAL
- en: LightGBM is a gradient-boosting algorithm built on decision trees that improves
    a model’s performance while using less memory. An open source gradient boosting
    implementation in Python, also called `LightGBM`, is made to be as effective as
    existing implementations, if not more so. The software library, machine learning
    method, and open source project are all referred to collectively as LightGBM.
  prefs: []
  type: TYPE_NORMAL
- en: 'The benefits of LightGBM include faster training rates and greater effectiveness:
    LightGBM employs a histogram-based approach, which accelerates the training process
    by bucketing continuous feature values into discrete bins. This technique also
    converts continuous values into discrete bins, which use less memory.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To simplify the training pipeline, we will implement a custom function to run
    the LightGBM model. This function has predefined parameters that we can change
    according to the performance obtained. These parameters are passed as a dictionary
    and the documentation can tell you a bit more about them:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE98]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE99]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE100]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE101]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE102]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE103]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE104]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE105]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE106]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE107]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE108]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE109]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE110]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE111]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE112]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE113]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE114]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE115]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Here, the function loads the training and development datasets using the `Dataset`
    method and trains the model using the specified parameters during 1,000 steps.
    The development dataset is used for validation, as it will give us information
    about the overall performance of the model.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we can train the model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![Figure 10.16: RMSE values for the revenue per user ](img/B19026_10_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.16: RMSE values for the revenue per user'
  prefs: []
  type: TYPE_NORMAL
- en: The result shows us that the performance of the model can be improved, which
    would require us to fine-tune the parameters until we reach a level of performance
    that is within our interval of confidence.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Web analytics allows us to optimize the performance of the products and services
    sold online. The information obtained enables us to improve the way in which we
    communicate with clients, thanks to a deeper understanding of our customers and
    their consumption patterns. In this chapter, we have dived into a basic understanding
    of this data and how it can be used to determine the CLV of our customers, understand
    their characteristics, and identify key metrics to establish a successful digital
    marketing plan.
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter will look into the considerations made by several industry
    experts on how data, machine learning, and BI can be used in real-life business
    contexts to improve operations.
  prefs: []
  type: TYPE_NORMAL
