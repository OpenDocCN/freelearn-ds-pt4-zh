- en: '*Chapter 2*: Deploying Azure Machine Learning Workspace Resources'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you will learn how to deploy an **Azure Machine Learning**
    (**Azure ML**) workspace through the Azure portal and the **Command-Line Interface**
    (**CLI**). You will also gain an understanding of the deployment parameters that
    you need to select while deploying the workspace. In the end, you will have a
    fully functional Azure ML workspace, and you will be able to navigate to all of
    the deployed Azure resources.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Deploying Azure ML through the portal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying Azure ML via the CLI
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alternative ways to deploy an Azure ML workspace
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring the deployed Azure resources
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To provision an Azure ML workspace, you will need an Azure subscription. You
    can get a free trial by visiting [https://azure.microsoft.com/free/](https://azure.microsoft.com/free/).
    If you want to use an existing subscription, you will need to request the owner
    of the subscription to provide you with the following **Resource Group** items:'
  prefs: []
  type: TYPE_NORMAL
- en: '`packt-azureml-rg`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`packt-azureml-cli-rg`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This book assumes that you have either a `Contributor` role or an `Owner` role
    on these resource groups. You are going to deploy an Azure ML workspace in both
    of those resource groups: one through the Azure portal and one through the Azure
    CLI.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Azure ML** requires the following providers to be registered in the Azure
    subscription that hosts the resource groups you are planning to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Microsoft.MachineLearningServices`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Microsoft.KeyVault`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Microsoft.Storage`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Microsoft.insights`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Microsoft.ContainerRegistry`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Microsoft.Notebooks`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are the `Owner` of the subscription, Azure will automatically register
    the providers for you when you deploy the resources. Otherwise, you will need
    to request that the subscription owner registers these providers for you by following
    the instructions at [https://docs.microsoft.com/azure/azure-resource-manager/templates/error-register-resource-provider#solution-3---azure-portal](https://docs.microsoft.com/azure/azure-resource-manager/templates/error-register-resource-provider#solution-3---azure-portal).
  prefs: []
  type: TYPE_NORMAL
- en: You will require a modern browser that has **JavaScript** enabled. This is required
    to access the Azure portal.
  prefs: []
  type: TYPE_NORMAL
- en: Optionally, you can download and install the Azure CLI from the official Microsoft
    documentation page at [https://docs.microsoft.com/cli/azure/install-azure-cli](https://docs.microsoft.com/cli/azure/install-azure-cli).
    In this book, you will learn how to use the online version of this tool that is
    embedded within the Azure portal.
  prefs: []
  type: TYPE_NORMAL
- en: You can find all of the commands and code snippets of this chapter on GitHub
    at [http://bit.ly/dp100-ch02](http://bit.ly/dp100-ch02).
  prefs: []
  type: TYPE_NORMAL
- en: Deploying Azure ML through the portal
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, you are going to deploy an Azure ML workspace through the Azure
    portal wizard. First, navigate to the Azure portal at [https://portal.azure.com](https://portal.azure.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a couple of ways in which you can initiate the creation of an Azure
    ML workspace wizard. The following are the three most popular ones:'
  prefs: []
  type: TYPE_NORMAL
- en: 'From the home page of the Azure portal, you can select **Create a resource**
    from either the top of the page underneath the **Azure services** label or the
    **Azure portal menu** in the upper-left corner:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 2.1 – Creating a resource in the Azure portal'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_001.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.1 – Creating a resource in the Azure portal
  prefs: []
  type: TYPE_NORMAL
- en: 'This approach is the most generic one and will ask you to search for the service
    you want to create. Search for `machine learning` and select the first option
    from the **Marketplace** search results that are provided by Microsoft:'
  prefs: []
  type: TYPE_NORMAL
- en: '![ Figure 2.2 – ML search results in Azure Marketplace'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_002.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.2 – ML search results in Azure Marketplace
  prefs: []
  type: TYPE_NORMAL
- en: You can review the service information. Then, when you are done, click on the
    **Create** button to start the wizard.
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, you can search for `machine learning` in the top search bar
    of the Azure portal and select the **Machine Learning** option that appears under
    **Services**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 2.3 – The ML service showing in the Azure portal search results'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_003.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.3 – The ML service showing in the Azure portal search results
  prefs: []
  type: TYPE_NORMAL
- en: 'This will navigate you to a list of already deployed ML workspaces that you
    have access to. If this is a new subscription, it will be empty; you can click
    on the **Add** button on the toolbar:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.4 – The create buttons available in an empty service list'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_004.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.4 – The create buttons available in an empty service list
  prefs: []
  type: TYPE_NORMAL
- en: 'The final popular approach is to navigate to the resource group where you want
    to deploy the Azure ML workspace and select **Add** from the toolbar:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 2.5 – The Add option within the resource group'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_005.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.5 – The Add option within the resource group
  prefs: []
  type: TYPE_NORMAL
- en: Search for `machine learning` and select the first option in the Marketplace
    search result that is provided by Microsoft. Click on the **Create** button to
    start the wizard. This approach will prepopulate the resource group option of
    the wizard.
  prefs: []
  type: TYPE_NORMAL
- en: 'All three of these approaches will lead you to the deployment wizard:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.6 – The ML workspace creation wizard'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_006.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.6 – The ML workspace creation wizard
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, you will learn how to use the wizard to deploy the Azure
    ML workspace.
  prefs: []
  type: TYPE_NORMAL
- en: Using the deployment wizard
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The wizard consists of five steps or tabs:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Basics**: This is basic information regarding the workspace you are about
    to deploy.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Networking**: This refers to the advanced networking options you might want
    to configure.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Advanced**: This includes the advanced identity and data security workspace
    options'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Tags**: This includes the associate tags within the workspace'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Review + create**: This is the last step of the wizard; after a short validation
    process, you can provision the workspace.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the next sections, we'll review all of the options available in the wizard
    along with the considerations you need to make before selecting them.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If you see the warning **The selected subscription doesn't have permissions
    to register the resource provider** in the **Basics** step of the wizard, please
    make sure you ask the owner of the Azure subscription to register the resource
    providers mentioned in the *Technical requirements* section of this chapter if
    the providers are missing. Failing to have those providers registered will cause
    a validation error in the **Review + create** step of the wizard.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Basics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The wizard starts at the **Basics** step:'
  prefs: []
  type: TYPE_NORMAL
- en: The first thing you need to specify is the `Contributor` access role at the
    subscription level. If you have started the wizard from the `packt-azureml-rg`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type in a `packt-learning-mlw`, which is a name inspired by the **Azure Cloud
    Adoption Framework** (**Azure CAF**) naming conventions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will need to select a **Region** to deploy the Azure ML workspace. The region
    is the Azure data center where you are going to deploy all of the resources required
    by the Azure ML workspace. The list is already filtered to include only the data
    centers that have the product available.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There are three things you need to consider when selecting the Azure region
    to deploy your resources in. They include compliance and data residency requirements,
    service availability, and pricing. One example of such a requirement might be
    that you need to use some specialized **virtual machine** size that has a specific
    **Graphics Processing Unit** (**GPU**) such as the NV-series, which has the Tesla
    M60 – a virtual machine size that is not available in any Canada-based Azure region.
    For this book, you should select the region that is closest to you.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Optionally, you can modify the names of the `hyphen (-)` in the storage account
    or the container registry names. Moreover, the names of the storage account, key
    vault, and container registry must be unique. You will learn more about those
    resource in this chapter's *Exploring the deployed Azure resources* section. If
    another resource exists with the same name, an error message will prompt you to
    change the name. *Figure 2.7* shows how the basics wizard page looks like when
    it is filled in.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 2.7 – Information selected in the Basics step of the wizard'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_007.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.7 – Information selected in the Basics step of the wizard
  prefs: []
  type: TYPE_NORMAL
- en: 'With all of the basic information filled in, you can now click on the **Review
    + create** button and skip all of the intermediate steps. This implies that you
    automatically accept the default options for the rest of the wizard''s steps.
    However, for the purpose of learning, you should click on the **Next: Networking**
    button to navigate to the next wizard page.'
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Up until September 2020, the first page of these wizards asked for the `Basic`
    edition and an `Enterprise` edition. The `Enterprise` edition was the one that
    provided the designer, and the Auto ML features you will see later on in the book.
    Since October 2020, all features are available in the `Basic` edition. The original
    certification had questions related to which feature belongs to what edition –
    something that you shouldn't encounter in your exam.
  prefs: []
  type: TYPE_NORMAL
- en: Networking
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'On this wizard page, you will need to decide how you are planning to connect
    to the data plane of the Azure ML workspace. The data plane consists of all data-centric
    operations within your workspace such as using the Azure ML studio web interface,
    triggering an ML pipeline, and making API calls through the **Software Development
    Kit** (**SDK**). There are two options, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Public endpoint (all networks)**: This is the default option that allows
    you to access the workspace from a publicly accessible endpoint.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Private endpoint**: A private endpoint reduces the risk of data exfiltration
    by reducing the attack surface to the Azure ML workspace. Once you decide to provide
    a workspace with **Private endpoint** connectivity, you will need to have a virtual
    machine or a **Virtual Private Network** (**VPN**) connection in order to access
    the private endpoint you will expose:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 2.8 – The private endpoint secures access to the Azure ML workspace'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_008.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.8 – The private endpoint secures access to the Azure ML workspace
  prefs: []
  type: TYPE_NORMAL
- en: 'For the purpose of this book, you will select **Public endpoint (all networks)**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.9 – Networking options in the creation wizard'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_009.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.9 – Networking options in the creation wizard
  prefs: []
  type: TYPE_NORMAL
- en: On the next page, you are going to select the advanced options.
  prefs: []
  type: TYPE_NORMAL
- en: Advanced
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: On this wizard page, you can configure a few options regarding the security
    of the workspace and the metadata and metrics data privacy.
  prefs: []
  type: TYPE_NORMAL
- en: You can configure the **Managed identity** used by the AzureML workspace to
    authenticate and access other cloud resources. You can use either a **System assigned
    identity** or a **User assigned identity**. The system assigned ones will be automatically
    created when you deploy the AzureML resource. Instead, you can create a **User
    Assigned Managed Identity** resource within the Azure portal and use that during
    the deployment of the AzureML workspace. Using the user assigned option allows
    you to create the identity beforehand, configure access to various systems and
    data sources and then assign it to the workspace. You can even use the same identity
    in other services, like an Azure Automation account. You can read more about managed
    identities in this chapter's *Further reading* section. For this book, you will
    use the default option, which is the **System assigned identity**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can define how the AzureML workspace will be accessing the data stored in
    the default storage account. **Credential-based access** uses the storage account
    access key to read data. You can think of this approach as having a single password
    used by everyone who has access to the AzureML workspace to access the data within
    that storage account. In some organizations, the use of storage account access
    keys is forbidden for security reasons. In those cases, **Identity-based access**
    should be used. When you choose that option, AzureML uses its **Managed identity**
    to access the storage account data and write artifacts, like the trained models.
    Moreover, when the data scientists access datasets stored in the default storage
    account, their identity is passed through to the storage account to authenticate
    them and provide them with the data. You will use **Credential-based access**
    for the purposes of this book.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By default, Azure Machine Learning services store metrics and metadata in a
    Microsoft managed store using encryption keys managed by Microsoft. You can specify
    your own key to be used to encrypt the metrics and metadata. To do so, you will
    need to select a key stored within an existing **Key Vault**. This action will
    provision a couple of additional Azure resources, including a Cosmos DB, in a
    new resource group named based on the pattern <your-azure-ml-workspace-resource-name>_<GUID>,
    for example, packt-learning-mlw_ab07ab07-ab07-ab07-ab07-ab07ab07ab07\. You do
    not have any control over those resources. Their lifecycle management is handled
    by the Azure Machine Learning workspace, meaning that they will be automatically
    deleted when you delete the workspace.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The last option of the wizard''s step allows you to limit the amount of telemetry
    and metric data collected on your workspace. You can do that by selecting the
    `Environment`: Typically, you have multiple environments for your code base such
    as a development environment, a quality assurance testing environment, and a production
    environment. For the purposes of this book, you should specify the `Development`
    value.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can add additional metadata tags if you want. The number can be up to 50,
    which is the current limit of tags per resource:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.11 – The tags step in the creation wizard'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_011.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.11 – The tags step in the creation wizard
  prefs: []
  type: TYPE_NORMAL
- en: 'When you are done, click on **Next: Review + create** to move to the last wizard
    step.'
  prefs: []
  type: TYPE_NORMAL
- en: Review + create
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This is the last step of the wizard. If you have forgotten to complete something
    or made an invalid selection in a previous step, you will get an error message
    and a red dot will indicate the step where the error is:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.12 – An error validation indicating something is wrong in the Basics
    step'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_012.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.12 – An error validation indicating something is wrong in the Basics
    step
  prefs: []
  type: TYPE_NORMAL
- en: If everything is fine, a `keyVaultName`, `storageAccountName`, and `applicationInsightsName`
    JSON values. This template can be deployed instantly from that view, or you can
    download it and use it to provision these resources in a different subscription.
    For example, imagine that you want to provision the production environment with
    the same resource structure. You can use this autogenerated ARM template, change
    the target **Resource Group**, the corresponding resource names and tag value,
    and deploy it in the production environment. Please note that the resource names
    you specify need to be unique, and you might need to experiment until you find
    a name that is available.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Create** button to provision your Azure ML workspace resources.
    The resources will start deploying. This process could take a couple of minutes
    to complete.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Finally, you should see a button called **Go to resource**, which you can use
    to navigate to the newly provisioned Azure ML workspace:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![ Figure 2.14 – The Go to resource button indicating the success of the Azure
    ML workspace deployment'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_014.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.14 – The Go to resource button indicating the success of the Azure
    ML workspace deployment
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, you will learn how to deploy the same Azure ML workspace
    using the Azure CLI, which is one of the most popular ways to deploy things in
    Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying Azure ML via the CLI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, you are going to deploy an Azure ML workspace through the Azure
    CLI. You are going to use the `packt-azureml-cli-rg` resource group to deploy
    resources; you are going to use the Bash version of the **Azure Cloud Shell**
    that is built in the Azure portal – something that will require no installation
    on your machine. If you want, you can install the Azure CLI locally by following
    the installation instructions at [https://docs.microsoft.com/cli/azure/install-azure-cli](https://docs.microsoft.com/cli/azure/install-azure-cli),
    and skip the provision of the Azure Cloud Shell.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: You are going to use the Azure CLI in the next sections to manage various aspects
    of the Azure ML workspace. Although the book is going to assume you selected the
    Azure Cloud Shell, the syntax you will see is applicable for both the Azure Cloud
    Shell and the Azure CLI running within your local machine.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying Azure Cloud Shell
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Azure Cloud Shell is a browser-based shell that allows you to manage Azure.
    You can access it either by visiting the dedicated page at [https://shell.azure.com](https://shell.azure.com)
    or from within the Azure portal by clicking on the Cloud Shell icon in the top
    bar:'
  prefs: []
  type: TYPE_NORMAL
- en: '![ Figure 2.15 – The Cloud Shell icon in the top bar of the Azure portal'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_015.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.15 – The Cloud Shell icon in the top bar of the Azure portal
  prefs: []
  type: TYPE_NORMAL
- en: Let's begin!
  prefs: []
  type: TYPE_NORMAL
- en: The first time you invoke the Cloud Shell, you will see the welcome wizard.
    Select `Bash` to continue:![Figure 2.16 – The Azure Cloud Shell welcome wizard
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16777_02_016.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 2.16 – The Azure Cloud Shell welcome wizard
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Azure Cloud Shell requires a file share to save files. In this next step of
    the wizard, you can select a subscription; the portal will automatically deploy
    a storage account for you. Depending on your permissions at the subscription level,
    the wizard will either create a new resource group or use one where you have a
    `Contributor` role.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you want to fine-tune the process, you can select the **Show advanced settings**
    option and manually create new resource groups or define the name of the storage
    account and the file share name that is going to be used by your Cloud Shell:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 2.17 – Advanced settings while provisioning Cloud Shell'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/B16777_02_017.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 2.17 – Advanced settings while provisioning Cloud Shell
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: For the purposes of this book, you should allow the wizard to automatically
    provision a storage account for you by selecting the **Subscription** you have,
    then clicking on the **Create storage** button without configuring the advanced
    settings:![Figure 2.18 – Creating a storage account wizard page while provisioning
    Cloud Shell
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B16777_02_018.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 2.18 – Creating a storage account wizard page while provisioning Cloud
    Shell
  prefs: []
  type: TYPE_NORMAL
- en: 'After a while, a storage account will be provisioned, and your Cloud Shell
    Bash prompt should appear:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.19 – The Bash prompt in Azure Cloud Shell'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_019.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.19 – The Bash prompt in Azure Cloud Shell
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have a Cloud Shell, you can use the Azure CLI to manage your Azure
    resources; this is something that you will learn how to do in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Using the Azure CLI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Azure CLI is a management command-line tool that you can invoke by typing
    in the `az` command. Through this tool, you can provision and manage your Azure
    resources. The easiest way to learn the Azure CLI is by using the `--help` argument
    at the end of any command. For example, you can start with `az --help`. This will
    list all of the available commands, such as the `login` commands, the `find` commands,
    and the subgroups, including the `storage` one:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.20 – The az command''s subgroups and commands'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_020.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.20 – The az command's subgroups and commands
  prefs: []
  type: TYPE_NORMAL
- en: 'You can keep exploring the various subgroups and commands by appending them
    to the `az` command. For example, let''s explore the `group` subgroup, by typing
    in `az group --help`. Then, we will investigate the `list` command, where you
    can discover all of the available options by typing in `az group list --help`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.21 – The az group list command help page'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_021.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.21 – The az group list command help page
  prefs: []
  type: TYPE_NORMAL
- en: 'Another useful feature of Azure CLI is the `az find` command, which searches
    the Azure documentation for relevant information:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.22 – Using az find to discover Azure CLI commands'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_022.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.22 – Using az find to discover Azure CLI commands
  prefs: []
  type: TYPE_NORMAL
- en: 'You can list all of the resource groups you have access to by issuing the `az
    group list -o table` command, where we have specified that we want to format the
    output as a table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.23 – Listing all of the resource groups you have access to through
    the Azure CLI'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_023.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.23 – Listing all of the resource groups you have access to through
    the Azure CLI
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: If you ever find yourself not understanding why the Azure CLI command you are
    typing doesn't work as expected, you can use the `--verbose` flag. If you need
    even more information, then you can combine that with the `--debug` flag.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, you will explore the most common actions that you can perform
    from the Azure CLI.
  prefs: []
  type: TYPE_NORMAL
- en: Authenticating in Azure CLI
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you get the error message `az login` command, which will prompt you to open
    a page and enter a code. This process is referred to as **interactive device authentication**.
    You will learn more about this process in section Authenticating from your device
    in [*Chapter 7*](B16777_07_Final_VK_ePub.xhtml#_idTextAnchor102), *The AzureML
    Python SDK*.
  prefs: []
  type: TYPE_NORMAL
- en: After visiting the web page and typing in the code, you will need to log in
    with the account that has access to the Azure subscription you want to control
    through the Azure CLI. Doing that will authorize the Azure CLI to act on your
    behalf. You can always log out from an Azure CLI by typing in `az logout`.
  prefs: []
  type: TYPE_NORMAL
- en: Selecting the active Azure subscription
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have access to multiple Azure subscriptions, you will need to specify
    which one is the active one. To list your subscriptions, type in `az account list
    -o table`; you can activate a subscription by typing in `az account set --subscription
    "Subscription name or ID"` and passing either the name or the ID of the subscription
    you want to control from the Azure CLI.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a resource group from the Azure CLI
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'One of the most well-documented Azure CLI commands on the internet is the one
    to create a resource group, which is a virtual folder where you can deploy Azure
    resources. The following command will create a resource group, called `packt-azureml-cli-rg`,
    and the record of this new resource group will be kept in the Western Europe Azure
    data center:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'A shortcut to the `--name` parameter is `-n`. Similarly, `-l` is a shortcut
    for `--location`. The preceding command can now be written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The `-n` and `-l` shortcuts are common across many Azure CLI commands.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: You will need a `Contributor` role at the subscription level to be able to create
    a resource group. To be more precise, you will need a role that allows you to
    perform the `Microsoft.Resources/subscriptions/resourceGroups/write` operation,
    which you will read more about in the *Understanding Role-Based Access Control
    (RBAC)* section that appears later in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next section, you will learn how to install an extension within the
    Azure CLI: the one that manages Azure ML workspaces.'
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Azure ML CLI extension
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To manage Azure ML workspaces from the Azure CLI, you will need to install the
    `az extension add -n azure-cli-ml`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To view the currently installed extensions and their versions, type in `az
    extension list -o table`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.24 – A list of all of the installed extensions including azure-cli-ml'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_024.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.24 – A list of all of the installed extensions including azure-cli-ml
  prefs: []
  type: TYPE_NORMAL
- en: To update the installed extension to the latest version, type in `az extension
    update -n azure-cli-ml`.
  prefs: []
  type: TYPE_NORMAL
- en: The extension you just installed has added the `ml` command subgroup to your
    Azure CLI. You can inspect the subgroups and the commands it contains by using
    the `az ml --help` command. In the next section, you will use these new commands
    to deploy an Azure ML workspace.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying Azure ML using the az ml command
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The goal of this section is to deploy an Azure ML workspace, named `packt-learning-cli-mlw`,
    in the resource group named `packt-azureml-cli-rg` and attach the `Environment`
    tag with the `Development` value.
  prefs: []
  type: TYPE_NORMAL
- en: To provision a new Azure ML workspace, you will need to use the `az ml workspace
    create` command.
  prefs: []
  type: TYPE_NORMAL
- en: The only required option is `--workspace-name` or `-w`, which is the workspace
    name. This will create a new resource group within your Azure subscription and
    deploy the new workspace there. This requires you to have at least a `Contributor`
    role at the subscription level; otherwise, you will get an authorization error.
  prefs: []
  type: TYPE_NORMAL
- en: In order to specify the target resource group where you want the new workspace
    to be deployed, you will need to either pass the `--resource-group` option or
    the `-g` option.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: 'There are some common `az ml` parameters: the `-g` and `-w` parameters are
    common in all Azure ML CLI commands, and you will use them again later in this
    book.'
  prefs: []
  type: TYPE_NORMAL
- en: To attach tags to the newly created resource, you can use the `--tags` parameter
    or the `-t` parameter, which uses the *key=value* syntax.
  prefs: []
  type: TYPE_NORMAL
- en: 'Type in the following command to deploy the requested Azure ML workspace:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is displayed in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.25 – Deploying the Azure ML workspace through the CLI extension'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_025.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.25 – Deploying the Azure ML workspace through the CLI extension
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you learned how to deploy an Azure ML workspace using the Azure
    CLI. For this book, you will only need the one you provisioned through the user
    interface, and you will delete the one you just provisioned in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Cleaning up the CLI resource group
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For the purposes of this book, you are going to need a single Azure ML workspace.
    You are going to use the one you deployed through the Azure portal in the `packt-azureml-rg`
    resource group. If you want, you can delete the newly provisioned Azure ML workspace
    by issuing the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This will delete the Azure ML workspace and all of the related resources that
    were provisioned in the preceding steps.
  prefs: []
  type: TYPE_NORMAL
- en: So far, you have explored the most common ways to provision the Azure ML workspace,
    that is, through the portal and the Azure CLI. In the next section, you will learn
    about a few additional ways, including the ARM way, which is preferred by DevOps
    engineers.
  prefs: []
  type: TYPE_NORMAL
- en: Alternative ways to deploy an Azure ML workspace
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are additional ways in which you can deploy an Azure ML workspace:'
  prefs: []
  type: TYPE_NORMAL
- en: Create an ARM template. This is the Azure-native way of describing resources
    that you want to deploy in the form of a JSON file. An example of an ARM template
    for the Azure ML workspace can be found at [https://bit.ly/dp100-azureml-arm](https://bit.ly/dp100-azureml-arm).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The command to deploy such a template from the Azure CLI is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You can also find an ARM template if you select the **Download a template for
    automation** link that appears on the left-hand side of the **Create** button
    in the last step of the Azure portal resource creation wizard.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Through the Azure ML Python SDK, which you will learn about in [*Chapter 7*](B16777_07_Final_VK_ePub.xhtml#_idTextAnchor102),
    *The Azure ML Python*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Through the Azure management REST API as described in [https://docs.microsoft.com/azure/machine-learning/how-to-manage-rest#create-a-workspace-using-rest](https://docs.microsoft.com/azure/machine-learning/how-to-manage-rest#create-a-workspace-using-rest).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next section, you will explore the Azure resources that have been deployed
    to the target resource group, and you will learn how to give workspace access
    to your colleagues.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the deployed Azure resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Open the Azure portal and search for resource groups. Select the icon to navigate
    to the list of the resource groups you have access to, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.26 – Navigating to the list of resource groups'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_026.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.26 – Navigating to the list of resource groups
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the **packt-azureml-rg** option and observe the resources that are deployed
    within this resource group:'
  prefs: []
  type: TYPE_NORMAL
- en: The ML workspace resource is named **packt-learning-mlw**. This is the main
    resource that you deployed. Through this resource, you can manage various aspects
    of the workspace.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An Azure key-vault service named **packtlearningm<random_number>**. This key
    vault is used to securely store credentials and access keys that you will be using
    within the Azure ML workspace.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A storage account with the name of **packtlearningm<random_number>**. This storage
    account was autogenerated during the provisioning process and is used to store
    files from the workspace, including experimental datasets and models.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An application insight account named **packtlearningm<random_number>**. This
    is the monitoring service for all predictive endpoints that you will publish from
    within the Azure ML workspace.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These are the out-of-the-box components that get deployed within the Azure
    ML workspace:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.27 – The list of resources in the packt-azureml-rg resource group'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_027.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.27 – The list of resources in the packt-azureml-rg resource group
  prefs: []
  type: TYPE_NORMAL
- en: 'There is actually one more resource that is going to be provisioned automatically
    when you run your first experiment: an **Azure Container Registry** (**ACR**).
    This will host various **Docker** container images, including the ones that are
    going to be exposing a web server that will make inferences with the **Artificial
    Intelligence** (**AI**) models you are going to train.'
  prefs: []
  type: TYPE_NORMAL
- en: When you want to deploy a real-time endpoint for a model, you can deploy it
    in an **Azure Container Instance** (**ACI**) or **Azure Kubernetes Service** (**AKS**)
    from within the Azure ML studio. You will deploy an ACI for the first time in
    [*Chapter 5*](B16777_05_Final_VK_ePub.xhtml#_idTextAnchor072), *Letting Machines
    Do the Model Training*, of this book, and you will notice that an ACI resource
    will appear within this resource group next to the existing resources.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Role-Based Access Control (RBAC)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Azure provides RBAC, which allows you to define the operations each role can
    perform on specific resources. Each role is assigned according to a specific scope,
    for example, if you are assigned the **Contributor** role in a resource group,
    you will be able to provision resources only within that resource group and not
    at the subscription level. Out of the box, Azure provides three well-known roles:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reader**: This allows you to browse through Azure resources, but you cannot
    modify or activate anything.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Contributor**: This builds on top of the **Reader** role and allows you to
    edit resources or create new resources within the scope of the role. This role
    doesn''t allow you to modify the permissions that are attached to the resources.
    This means you cannot grant another user permission to the resources you might
    have provisioned.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Owner**: This role can do everything that the **Contributor** role does and
    can also assign and modify roles within the context that this role applies to.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s examine the roles that are assigned in the resource group where you
    deployed the Azure ML workspace. Click on the **Access control (IAM)** tab of
    the resource group and then select **Role assignments**. On this page, you will
    see a list of role assignments to the resource group level. Notice that your account
    has been assigned, at the very least, the **Contributor** role in this resource
    group to provision resources. If you don''t see your account in the list, you
    are most likely an administrator, so take a look under the **Classic administrators**
    tab:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.28 – Role assignments on the Access control (IAM) page'
  prefs: []
  type: TYPE_NORMAL
- en: of the packt-azureml-rg resource group
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_028.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.28 – Role assignments on the Access control (IAM) page of the packt-azureml-rg
    resource group
  prefs: []
  type: TYPE_NORMAL
- en: When you provisioned the workspace, a new system-assigned managed identity was
    created with the name of the Azure ML workspace you provisioned. This was automatically
    assigned as a **Contributor** role for the resource group. This allows the ML
    workspace to deploy ACI resources within that resource group and access compute
    targets and data stores. Note that this identity is used by the platform itself
    and should not be used to assign access to external resources and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Next, you will learn how this role assignment flows down to the resources.
  prefs: []
  type: TYPE_NORMAL
- en: RBAC inheritance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Open the **packt-learning-mlw** resource and click on the **Access control (IAM)**
    tab. Then, select **Role assignments**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Notice that the roles that existed in the resource group are inherited down
    to the Azure ML workspace resource:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.29 – RBAC inheritance in packt-learning-mlw from the resource group'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_029.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.29 – RBAC inheritance in packt-learning-mlw from the resource group
  prefs: []
  type: TYPE_NORMAL
- en: 'The role assignments inherit from the subscription to the resource groups and
    from there to the resources. On top of the subscriptions, there is another grouping
    layer, called **Management Groups**, which allows you to build hierarchies that
    contain other management groups and or subscriptions. An example of the overall
    RBAC inheritance model is depicted in the following schema:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.30 – The RBAC inheritance model'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16777_02_030.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.30 – The RBAC inheritance model
  prefs: []
  type: TYPE_NORMAL
- en: Now that you know how to assign out-of-the-box roles and have understood how
    inheritance works, in the next section, you will learn how to create custom roles
    for your Azure ML workspace.
  prefs: []
  type: TYPE_NORMAL
- en: Creating custom roles
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Azure allows you to create custom RBAC roles where you can fine-tune what operations
    are allowed and what actions are not allowed; this is similar to an allow list
    and a block list. The portal provides a graphical experience that allows you to
    create custom roles at the resource group level or higher. The result of this
    experience is a JSON file, such as the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: This is a very simple custom role, named `ACI model deployer role`, which provides
    write access to the ACI service of the workspaces – an operation that is encoded
    in the literal `Microsoft.MachineLearningServices/workspaces/services/aci/write`.
  prefs: []
  type: TYPE_NORMAL
- en: 'A more complex example of a custom role is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Notice that in contrast to the previous role, which was explicitly allowing
    a single action, this role has a wildcard (`*`) in the allowed actions, meaning
    that it can do all available actions. To limit that effect, we use the `NotActions`
    sections, which indicate which operations are explicitly denied. In this example,
    we are explicitly disallowing the ability to delete compute resources (`Microsoft.MachineLearningServices/workspaces/computes/delete`)
    and cannot update any authorization aspect of this workspace (`Microsoft.Authorization/*/write`).
    Note that the wildcard can be used to match partial actions like in the `Microsoft.Authorization`
    action, where the wildcard matches action groups such as `lock`, `roleAssignments`,
    and `roleDefinitions`. In our case, we want the user who will have this role to
    not be able to add new users to the workspace, so we want to disallow the `Microsoft.Authorization/roleAssignments/write`
    action, which is covered by the wildcard expression we used.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, `AssignableScopes` allows you to specify the scope of this role. This
    is a mandatory field. In the first example, you are limiting the scope of this
    role to the Azure subscription with an ID of `<subscription_id>`. In this case,
    you can assign this custom role to any resource group or resource that belongs
    to the subscription with ID `<subscription_id>`. In the second example, you are
    limiting the scope of this custom role to the Azure ML workspace, named `<workspace_name>`,
    that is deployed in the resource group named `<resource_group_name>`, which belongs
    to the `<subscription_id>` subscription. This means you cannot assign this custom
    role anywhere else as it has a very targeted assignable scope.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to deploy a custom role in Azure through the Azure CLI, you can
    use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Here, `custom_role.json` is a file containing the JSON role definition of the
    custom role that you want to deploy in Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Once the role is deployed to Azure, you can assign that specific role to a user.
  prefs: []
  type: TYPE_NORMAL
- en: Assigning roles in the Azure ML workspace
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Assigning a role to a user is a privileged operation that means you are modifying
    the permissions of a resource. To do so, you will need to have the `Owner` permission
    of the resource that you want to modify. To be more accurate, you will need a
    role that allows you to use the `Microsoft.Authorization/roleAssignments/write`
    operation – something that the built-in `Owner` role has.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you do have the `Owner` permission, you can assign the **ACI model deployer
    role** that you created in the previous section to a user. You can do so in the
    following three ways:'
  prefs: []
  type: TYPE_NORMAL
- en: In the Azure portal, you can visit the Azure ML workspace you want and assign
    the role to the user through the **Access control (IAM)** tab that you saw in
    the *Understanding Role-Based Access Control (RBAC)* section.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Through the Azure CLI by issuing the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: az ad user list --query "[?mail=='username@organization.org'].objectId" --output
    tsv
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Through the Azure ML CLI extension by using the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: With these steps, you can share the workspace with your colleagues by creating
    custom roles that fine-tune the allowed permissions.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned about the prerequisites for deploying Azure ML.
    You can work with either a trial subscription or you can request a resource group
    in your company's subscription, where you, at the very least, have contributor
    rights to the resource group. You also discovered, in depth, the two most common
    ways of deploying the Azure ML workspace in a development environment, and you
    also gained an understanding of the parameters that you need to specify. You also
    learned about the alternative ways you can deploy the workspace, including ARM
    templates, which are the more DevOps-friendly way of deploying in production environments.
    In the final section, you looked at the resources that are part of Azure ML workspace
    deployment, and you learned how RBAC works in Azure. Additionally, you learned
    how to use built-in or custom roles to give access to the Azure ML workspace you
    deployed.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will learn about the **Azure ML Studio** experience,
    which is a web environment that enables you to manage the end-to-end ML life cycle.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In each chapter, you should find a couple of questions that will allow you
    to perform a knowledge check on the topics discussed in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Which of the following are applicable ways of deploying the Azure ML workspace?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Azure CLI through the azure-cli-ml extension
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. The Azure portal
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. The deployment of an ARM template
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Azure ML Python SDK
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You are creating a custom role and you want to deny the ability to delete a
    workspace. Where do you need to add the `Actions` section of the JSON definition
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b. To the `NotActions` section of the JSON definition
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. To the `AssignableScopes` section of the JSON definition
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: What do you have to install in the Azure CLI before you can deploy an Azure
    ML workspace?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This section offers a list of useful web resources that will help you to augment
    your knowledge and understanding of Azure:'
  prefs: []
  type: TYPE_NORMAL
- en: If this is the first time you are navigating to the Azure portal, you might
    want to read an overview of it at [https://docs.microsoft.com/azure/azure-portal/azure-portal-overview](https://docs.microsoft.com/azure/azure-portal/azure-portal-overview).
    If you want to learn more about the features of Cloud Shell, you can visit [https://docs.microsoft.com/azure/cloud-shell/overview](https://docs.microsoft.com/azure/cloud-shell/overview).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can learn more about selecting the proper region for your resources at [https://azure.microsoft.com/global-infrastructure/geographies/#choose-your-region](https://azure.microsoft.com/global-infrastructure/geographies/#choose-your-region).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are interested in learning how to create and deploy ARM templates by
    using the Azure portal, you can read the documentation at [https://docs.microsoft.com/azure/azure-resource-manager/templates/quickstart-create-templates-use-the-portal](https://docs.microsoft.com/azure/azure-resource-manager/templates/quickstart-create-templates-use-the-portal).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For a complete list of data centers that have an Azure ML service available,
    please visit [https://azure.microsoft.com/global-infrastructure/services/?regions=all&products=machine-learning-service](https://azure.microsoft.com/global-infrastructure/services/?regions=all&products=machine-learning-service).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can learn more about the Azure resource name rules at [https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules#microsoftmachinelearningservices](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules#microsoftmachinelearningservices).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can read more about the best practices for naming at [https://docs.microsoft.com/azure/cloud-adoption-framework/ready/azure-best-practices/naming-and-tagging](https://docs.microsoft.com/azure/cloud-adoption-framework/ready/azure-best-practices/naming-and-tagging).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can also read more about how to use resource tags at [https://docs.microsoft.com/azure/azure-resource-manager/management/tag-resources](https://docs.microsoft.com/azure/azure-resource-manager/management/tag-resources).
    The Microsoft Cloud Adoption Framework has a list of best practices related to
    metadata tags, which you can read at [https://docs.microsoft.com/azure/cloud-adoption-framework/ready/azure-best-practices/naming-and-tagging#metadata-tags](https://docs.microsoft.com/azure/cloud-adoption-framework/ready/azure-best-practices/naming-and-tagging#metadata-tags).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For more information about the Azure ML private link feature, please refer to
    [https://docs.microsoft.com/azure/machine-learning/how-to-configure-private-link](https://docs.microsoft.com/azure/machine-learning/how-to-configure-private-link).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can learn more about this system-managed identity concept that is infused
    in the Azure ML workspace at [https://docs.microsoft.com/azure/machine-learning/concept-enterprise-security#securing-compute-targets-and-data](https://docs.microsoft.com/azure/machine-learning/concept-enterprise-security#securing-compute-targets-and-data).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can learn more about the default Azure roles (such as `Owner`, `Contributor`,
    and `Reader`) and how to create custom roles for the Azure ML workspace at [https://docs.microsoft.com/azure/machine-learning/how-to-assign-roles](https://docs.microsoft.com/azure/machine-learning/how-to-assign-roles).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Learn more about Managed Identities: [https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/overview](https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'AzureML identity based data access: [https://docs.microsoft.com/azure/machine-learning/how-to-identity-based-data-access](https://docs.microsoft.com/azure/machine-learning/how-to-identity-based-data-access)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
