["```py\n\nfrom fastapi import FastAPIapp = FastAPI()\n@app.get(\"/\")\nasync def hello_world():\n    return {\"hello\": \"world\"}\n```", "```py\n\n$ uvicorn chapter03_first_endpoint_01:appINFO:     Started server process [21654]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\n```", "```py\n\n$ http http://localhost:8000HTTP/1.1 200 OK\ncontent-length: 17\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 07:52:36 GMT\nserver: uvicorn\n{\n    \"hello\": \"world\"\n}\n```", "```py\n\nfrom fastapi import FastAPIapp = FastAPI()\n@app.get(\"/users/{id}\")\nasync def get_user(id: int):\n    return {\"id\": id}\n```", "```py\n\n$ http http://localhost:8000/usersHTTP/1.1 404 Not Found\ncontent-length: 22\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 08:20:51 GMT\nserver: uvicorn\n{\n    \"detail\": \"Not Found\"\n}\n```", "```py\n\nhttp http://localhost:8000/users/123HTTP/1.1 200 OK\ncontent-length: 10\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 08:21:27 GMT\nserver: uvicorn\n{\n    \"id\": 123\n}\n```", "```py\n\n$ http http://localhost:8000/users/abcHTTP/1.1 422 Unprocessable Entity\ncontent-length: 99\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 08:22:35 GMT\nserver: uvicorn\n{\n    \"detail\": [\n        {\n            \"loc\": [\n                \"path\",\n                \"id\"\n            ],\n            \"msg\": \"value is not a valid integer\",\n            \"type\": \"type_error.integer\"\n        }\n    ]\n}\n```", "```py\n\nfrom fastapi import FastAPIapp = FastAPI()\n@app.get(\"/users/{type}/{id}\")\nasync def get_user(type: str, id: int):\n    return {\"type\": type, \"id\": id}\n```", "```py\n\nclass UserType(str, Enum):    STANDARD = \"standard\"\n    ADMIN = \"admin\"\n```", "```py\n\n@app.get(\"/users/{type}/{id}\")async def get_user(type: UserType, id: int):\n    return {\"type\": type, \"id\": id}\n```", "```py\n\n$ http http://localhost:8000/users/hello/123HTTP/1.1 422 Unprocessable Entity\ncontent-length: 184\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 08:33:36 GMT\nserver: uvicorn\n{\n    \"detail\": [\n        {\n            \"ctx\": {\n                \"enum_values\": [\n                    \"standard\",\n                    \"admin\"\n                ]\n            },\n            \"loc\": [\n                \"path\",\n                \"type\"\n            ],\n            \"msg\": \"value is not a valid enumeration member; permitted: 'standard', 'admin'\",\n            \"type\": \"type_error.enum\"\n        }\n    ]\n}\n```", "```py\n\nfrom fastapi import FastAPI, Pathapp = FastAPI()\n@app.get(\"/users/{id}\")\nasync def get_user(id: int = Path(..., ge=1)):\n    return {\"id\": id}\n```", "```py\n\n@app.get(\"/license-plates/{license}\")async def get_license_plate(license: str = Path(..., min_length=9, max_length=9)):\n    return {\"license\": license}\n```", "```py\n\n@app.get(\"/license-plates/{license}\")async def get_license_plate(license: str = Path(..., regex=r\"^\\w{2}-\\d{3}-\\w{2}$\")):\n    return {\"license\": license}\n```", "```py\n\n@app.get(\"/users\")async def get_user(page: int = 1, size: int = 10):\n    return {\"page\": page, \"size\": size}\n```", "```py\n\n$ http \"http://localhost:8000/users?page=5&size=50\"HTTP/1.1 200 OK\ncontent-length: 20\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 09:35:05 GMT\nserver: uvicorn\n{\n    \"page\": 5,\n    \"size\": 50\n}\n```", "```py\n\nfrom enum import Enumfrom fastapi import FastAPI\nclass UsersFormat(str, Enum):\n    SHORT = \"short\"\n    FULL = \"full\"\napp = FastAPI()\n@app.get(\"/users\")\nasync def get_user(format: UsersFormat):\n    return {\"format\": format}\n```", "```py\n\nfrom fastapi import FastAPI, Queryapp = FastAPI()\n@app.get(\"/users\")\nasync def get_user(page: int = Query(1, gt=0), size: int = Query(10, \nle=100)):\n    return {\"page\": page, \"size\": size}\n```", "```py\n\n@app.post(\"/users\")async def create_user(name: str = Body(...), age: int = Body(...)):\n    return {\"name\": name, \"age\": age}\n```", "```py\n\n$ http -v POST http://localhost:8000/users name=\"John\" age=30POST /users HTTP/1.1\nAccept: application/json, */*;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nContent-Length: 29\nContent-Type: application/json\nHost: localhost:8000\nUser-Agent: HTTPie/3.2.1\n{\n    \"age\": \"30\",\n    \"name\": \"John\"\n}\nHTTP/1.1 200 OK\ncontent-length: 24\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 09:42:24 GMT\nserver: uvicorn\n{\n    \"age\": 30,\n    \"name\": \"John\"\n}\n```", "```py\n\nfrom fastapi import FastAPIfrom pydantic import BaseModel\nclass User(BaseModel):\n    name: str\n    age: int\napp = FastAPI()\n@app.post(\"/users\")\nasync def create_user(user: User):\n    return user\n```", "```py\n\n@app.post(\"/users\")async def create_user(user: User, company: Company):\n    return {\"user\": user, \"company\": company}\n```", "```py\n\n{    \"user\": {\n        \"name\": \"John\",\n        \"age\": 30\n    },\n    \"company\": {\n        \"name\": \"ACME\"\n    }\n}\n```", "```py\n\n$ echo '{\"user\": {\"name\": \"John\", \"age\": 30}, \"company\": {\"name\": \"ACME\"}}' | http POST http://localhost:8000/usersHTTP/1.1 200 OK\ncontent-length: 59\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 09:52:12 GMT\nserver: uvicorn\n{\n    \"company\": {\n        \"name\": \"ACME\"\n    },\n    \"user\": {\n        \"age\": 30,\n        \"name\": \"John\"\n    }\n}\n```", "```py\n\n@app.post(\"/users\")async def create_user(user: User, priority: int = Body(..., ge=1, le=3)):\n    return {\"user\": user, \"priority\": priority}\n```", "```py\n\n$ echo '{\"user\": {\"name\": \"John\", \"age\": 30}, \"priority\": 1}' | http POST http://localhost:8000/usersHTTP/1.1 200 OK\ncontent-length: 46\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 09:53:51 GMT\nserver: uvicorn\n{\n    \"priority\": 1,\n    \"user\": {\n        \"age\": 30,\n        \"name\": \"John\"\n    }\n}\n```", "```py\n\n$ pip install python-multipart\n```", "```py\n\n@app.post(\"/users\")async def create_user(name: str = Form(...), age: int = Form(...)):\n    return {\"name\": name, \"age\": age}\n```", "```py\n\n$ http -v --form POST http://localhost:8000/users name=John age=30POST /users HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nContent-Length: 16\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: localhost:8000\nUser-Agent: HTTPie/3.2.1\nname=John&age=30\nHTTP/1.1 200 OK\ncontent-length: 24\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 09:56:28 GMT\nserver: uvicorn\n\n{\n    \"age\": 30,\n    \"name\": \"John\"\n}\n```", "```py\n\nfrom fastapi import FastAPI, Fileapp = FastAPI()\n@app.post(\"/files\")\nasync def upload_file(file: bytes = File(...)):\n    return {\"file_size\": len(file)}\n```", "```py\n\n$ http --form POST http://localhost:8000/files file@./assets/cat.jpgHTTP/1.1 200 OK\ncontent-length: 19\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 10:00:38 GMT\nserver: uvicorn\n{\n    \"file_size\": 71457\n}\n```", "```py\n\nfrom fastapi import FastAPI, File, UploadFileapp = FastAPI()\n@app.post(\"/files\")\nasync def upload_file(file: UploadFile = File(...)):\n    return {\"file_name\": file.filename, \"content_type\": file.content_type}\n```", "```py\n\n$ http --form POST http://localhost:8000/files file@./assets/cat.jpgHTTP/1.1 200 OK\ncontent-length: 51\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 10:04:22 GMT\nserver: uvicorn\n{\n    \"content_type\": \"image/jpeg\",\n    \"file_name\": \"cat.jpg\"\n}\n```", "```py\n\n@app.post(\"/files\")async def upload_multiple_files(files: list[UploadFile] = File(...)):\n    return [\n        {\"file_name\": file.filename, \"content_type\": file.content_type}\n        for file in files\n    ]\n```", "```py\n\n$ http --form POST http://localhost:8000/files files@./assets/cat.jpg files@./assets/cat.jpgHTTP/1.1 200 OK\ncontent-length: 105\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 10:06:09 GMT\nserver: uvicorn\n[\n    {\n        \"content_type\": \"image/jpeg\",\n        \"file_name\": \"cat.jpg\"\n    },\n    {\n        \"content_type\": \"image/jpeg\",\n        \"file_name\": \"cat.jpg\"\n    }\n]\n```", "```py\n\n@app.get(\"/\")async def get_header(hello: str = Header(...)):\n    return {\"hello\": hello}\n```", "```py\n\n$ http GET http://localhost:8000 'Hello: World'HTTP/1.1 200 OK\ncontent-length: 17\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 10:10:12 GMT\nserver: uvicorn\n{\n    \"hello\": \"World\"\n}\n```", "```py\n\n@app.get(\"/\")async def get_header(user_agent: str = Header(...)):\n    return {\"user_agent\": user_agent}\n```", "```py\n\n$ http -v GET http://localhost:8000GET / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nHost: localhost:8000\nUser-Agent: HTTPie/3.2.1\nHTTP/1.1 200 OK\ncontent-length: 29\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 10:12:17 GMT\nserver: uvicorn\n{\n    \"user_agent\": \"HTTPie/3.2.1\"\n}\n```", "```py\n\n@app.get(\"/\")async def get_cookie(hello: str | None = Cookie(None)):\n    return {\"hello\": hello}\n```", "```py\n\nfrom fastapi import FastAPI, Requestapp = FastAPI()\n@app.get(\"/\")\nasync def get_request_object(request: Request):\n    return {\"path\": request.url.path}\n```", "```py\n\nfrom fastapi import FastAPI, statusfrom pydantic import BaseModel\nclass Post(BaseModel):\n    title: str\napp = FastAPI()\n@app.post(\"/posts\", status_code=status.HTTP_201_CREATED)\nasync def create_post(post: Post):\n    return post\n```", "```py\n\n$ http POST http://localhost:8000/posts title=\"Hello\"HTTP/1.1 201 Created\ncontent-length: 17\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 10:24:24 GMT\nserver: uvicorn\n{\n    \"title\": \"Hello\"\n}\n```", "```py\n\n# Dummy databaseposts = {\n    1: Post(title=\"Hello\", nb_views=100),\n}\n@app.delete(\"/posts/{id}\", status_code=status.HTTP_204_NO_CONTENT)\nasync def delete_post(id: int):\n    posts.pop(id, None)\n    return None\n```", "```py\n\nfrom fastapi import FastAPIfrom pydantic import BaseModel\nclass Post(BaseModel):\n    title: str\n    nb_views: int\napp = FastAPI()\n# Dummy database\nposts = {\n    1: Post(title=\"Hello\", nb_views=100),\n}\n@app.get(\"/posts/{id}\")\nasync def get_post(id: int):\n    return posts[id]\n```", "```py\n\n$ http GET http://localhost:8000/posts/1HTTP/1.1 200 OK\ncontent-length: 32\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 10:29:33 GMT\nserver: uvicorn\n{\n    \"nb_views\": 100,\n    \"title\": \"Hello\"\n}\n```", "```py\n\nclass PublicPost(BaseModel):    title: str\n```", "```py\n\n@app.get(\"/posts/{id}\", response_model=PublicPost)async def get_post(id: int):\n    return posts[id]\n```", "```py\n\n$ http GET http://localhost:8000/posts/1HTTP/1.1 200 OK\ncontent-length: 17\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 10:31:43 GMT\nserver: uvicorn\n{\n    \"title\": \"Hello\"\n}\n```", "```py\n\nfrom fastapi import FastAPI, Responseapp = FastAPI()\n@app.get(\"/\")\nasync def custom_header(response: Response):\n    response.headers[\"Custom-Header\"] = \"Custom-Header-Value\"\n    return {\"hello\": \"world\"}\n```", "```py\n\n$ http GET http://localhost:8000HTTP/1.1 200 OK\ncontent-length: 17\ncontent-type: application/json\ncustom-header: Custom-Header-Value\ndate: Thu, 10 Nov 2022 10:35:11 GMT\nserver: uvicorn\n{\n    \"hello\": \"world\"\n}\n```", "```py\n\n@app.get(\"/\")async def custom_cookie(response: Response):\n    response.set_cookie(\"cookie-name\", \"cookie-value\", max_age=86400)\n    return {\"hello\": \"world\"}\n```", "```py\n\n$ http GET http://localhost:8000HTTP/1.1 200 OK\ncontent-length: 17\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 10:37:47 GMT\nserver: uvicorn\nSet-Cookie: cookie-name=cookie-value; Max-Age=86400; Path=/; SameSite=lax\n{\n    \"hello\": \"world\"\n}\n```", "```py\n\n# Dummy databaseposts = {\n    1: Post(title=\"Hello\"),\n}\n@app.put(\"/posts/{id}\")\nasync def update_or_create_post(id: int, post: Post, response: Response):\n    if id not in posts:\n        response.status_code = status.HTTP_201_CREATED\n    posts[id] = post\n    return posts[id]\n```", "```py\n\n$ http PUT http://localhost:8000/posts/1 title=\"Updated title\"HTTP/1.1 200 OK\ncontent-length: 25\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 10:41:47 GMT\nserver: uvicorn\n{\n    \"title\": \"Updated title\"\n}\n```", "```py\n\n$ http PUT http://localhost:8000/posts/2 title=\"New title\"HTTP/1.1 201 Created\ncontent-length: 21\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 10:42:20 GMT\nserver: uvicorn\n{\n    \"title\": \"New title\"\n}\n```", "```py\n\n@app.post(\"/password\")async def check_password(password: str = Body(...), password_confirm: str = Body(...)):\n    if password != password_confirm:\n        raise HTTPException(\n            status.HTTP_400_BAD_REQUEST,\n            detail=\"Passwords don't match.\",\n        )\n    return {\"message\": \"Passwords match.\"}\n```", "```py\n\n$ http POST http://localhost:8000/password password=\"aa\" password_confirm=\"bb\"HTTP/1.1 400 Bad Request\ncontent-length: 35\ncontent-type: application/json\ndate: Thu, 10 Nov 2022 10:46:36 GMT\nserver: uvicorn\n{\n    \"detail\": \"Passwords don't match.\"\n}\n```", "```py\n\n        raise HTTPException(            status.HTTP_400_BAD_REQUEST,\n            detail={\n                \"message\": \"Passwords don't match.\",\n                \"hints\": [\n                    \"Check the caps lock on your keyboard\",\n                    \"Try to make the password visible by clicking on the eye icon to check your typing\",\n                ],\n            },\n        )\n```", "```py\n\nfrom fastapi import FastAPIfrom fastapi.responses import HTMLResponse, PlainTextResponse\napp = FastAPI()\n@app.get(\"/html\", response_class=HTMLResponse)\nasync def get_html():\n    return \"\"\"\n        <html>\n            <head>\n                <title>Hello world!</title>\n            </head>\n            <body>\n                <h1>Hello world!</h1>\n            </body>\n        </html>\n    \"\"\"\n@app.get(\"/text\", response_class=PlainTextResponse)\nasync def text():\n    return \"Hello world!\"\n```", "```py\n\n@app.get(\"/redirect\")async def redirect():\n    return RedirectResponse(\"/new-url\")\n```", "```py\n\n@app.get(\"/redirect\")async def redirect():\n    return RedirectResponse(\"/new-url\", status_code=status.HTTP_301_MOVED_PERMANENTLY)\n```", "```py\n\n@app.get(\"/cat\")async def get_cat():\n    root_directory = Path(__file__).parent.parent\n    picture_path = root_directory / \"assets\" / \"cat.jpg\"\n    return FileResponse(picture_path)\n```", "```py\n\n$ http GET http://localhost:8000/catHTTP/1.1 200 OK\ncontent-length: 71457\ncontent-type: image/jpeg\ndate: Thu, 10 Nov 2022 11:00:10 GMT\netag: c69cf2514977e3f18251f1bcf1433d0a\nlast-modified: Fri, 16 Jul 2021 07:08:42 GMT\nserver: uvicorn\n+-----------------------------------------+\n| NOTE: binary data not shown in terminal |\n+-----------------------------------------+\n```", "```py\n\n@app.get(\"/xml\")async def get_xml():\n    content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n        <Hello>World</Hello>\n    \"\"\"\n    return Response(content=content, media_type=\"application/xml\")\n```", "```py\n\n.└── chapter03_project/\n    ├── schemas/\n    │   ├── __init__.py\n    │   ├── post.py\n    │   └── user.py\n    ├── routers/\n    │   ├── __init__.py\n    │   ├── posts.py\n    │   └── users.py\n    ├── __init__.py\n    ├── app.py\n    └── db.py\n```", "```py\n\nfrom fastapi import APIRouter, HTTPException, statusfrom chapter03_project.db import db\nfrom chapter03_project.schemas.user import User, UserCreate\nrouter = APIRouter()\n@router.get(\"/\")\nasync def all() -> list[User]:\n    return list(db.users.values())\n```", "```py\n\nfrom fastapi import FastAPIfrom chapter03_project.routers.posts import router as posts_router\nfrom chapter03_project.routers.users import router as users_router\napp = FastAPI()\napp.include_router(posts_router, prefix=\"/posts\", tags=[\"posts\"])\napp.include_router(users_router, prefix=\"/users\", tags=[\"users\"])\n```", "```py\n\n$ uvicorn chapter03_project.app:app\n```"]