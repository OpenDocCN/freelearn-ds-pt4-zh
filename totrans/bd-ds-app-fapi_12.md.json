["```py\n\n$ export MY_ENVIRONMENT_VARIABLE=\"Hello\" # Set a temporary variable on the system$ python\n>>> import os\n>>> os.getenv(\"MY_ENVIRONMENT_VARIABLE\")  # Get it in Python\n'Hello'\n```", "```py\n\nfrom pydantic import BaseSettingsclass Settings(BaseSettings):\n    debug: bool = False\n    environment: str\n    database_url: str\n    class Config:\n        env_file = \".env\"\nsettings = Settings()\n```", "```py\n\nfrom project.settings import settingsengine = create_async_engine(settings.database_url)\n```", "```py\n\n@contextlib.asynccontextmanagerasync def lifespan(app: FastAPI):\n    if settings.debug:\n        print(settings)\n    yield\n```", "```py\n\nconfig.set_main_option(    \"sqlalchemy.url\", settings.database_url.replace(\"+aiosqlite\", \"\")\n)\n```", "```py\n\n(venv) $ uvicorn project.app:apppydantic.error_wrappers.ValidationError: 2 validation errors for Settings\nenvironment\n  field required (type=value_error.missing)\ndatabase_url\n  field required (type=value_error.missing)\n```", "```py\n\n(venv) $ export DEBUG=\"true\" ENVIRONMENT=\"development\" DATABASE_URL=\"sqlite+aiosqlite:///chapter10_project.db\"(venv) $ uvicorn project.app:app\nINFO:     Started server process [34880]\nINFO:     Waiting for application startup.\ndebug=True environment='development' database_url='sqlite+aiosqlite:///chapter10_project.db'\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\n```", "```py\n\n(venv) $ pip install python-dotenv\n```", "```py\n\nclass Settings(BaseSettings):    debug: bool = False\n    environment: str\n    database_url: str\n    class Config:\n        env_file = \".env\"\n```", "```py\n\nDEBUG=trueENVIRONMENT=development\nDATABASE_URL=sqlite+aiosqlite:///chapter10_project.db\n```", "```py\n\n(venv) $ pip freezeaiosqlite==0.17.0\nalembic==1.8.1\nanyio==3.6.2\nargon2-cffi==21.3.0\nargon2-cffi-bindings==21.2.0\nasgi-lifespan==2.0.0\nasyncio-redis==0.16.0\nattrs==22.1.0\n...\n```", "```py\n\naiosqlite==0.17.0alembic==1.8.1\nfastapi==0.88.0\nsqlalchemy[asyncio]==1.4.44\nuvicorn[standard]==0.20.0\ngunicorn==20.1.0\n```", "```py\n\n(venv) $ pip install -r requirements.txt\n```", "```py\n\n(venv) $ pip install gunicorn\n```", "```py\n\n(venv) $ gunicorn -w 4 -k uvicorn.workers.UvicornWorker project.app:app\n```", "```py\n\nFROM tiangolo/uvicorn-gunicorn-fastapi:python3.10ENV APP_MODULE project.app:app\nCOPY requirements.txt /app\nRUN pip install --upgrade pip && \\\n    pip install -r /app/requirements.txt\nCOPY ./ /app\n```", "```py\n\n#! /usr/bin/env bash# Let the DB start\nsleep 10;\n# Run migrations\nalembic upgrade head\n```", "```py\n\n$ docker build -t fastapi-app  .\n```", "```py\n\n$ docker run -p 8000:80 -e ENVIRONMENT=production -e DATABASE_URL=sqlite+aiosqlite:///app.db fastapi-app\n```", "```py\n\n$ docker tag fastapi-app aws_account_id.dkr.ecr.region.amazonaws.com/fastapi-app\n```", "```py\n\n$ docker push fastapi-app aws_account_id.dkr.ecr.region.amazonaws.com/fastapi-app\n```"]