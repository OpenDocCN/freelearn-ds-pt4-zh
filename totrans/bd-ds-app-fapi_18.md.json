["```py\n\n$ docker run -d --name worker-redis -p 6379:6379 redis\n```", "```py\n\nINFO:     Started server process [94918]INFO:     Waiting for application startup.\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     127.0.0.1:60736 - \"POST /generated-images HTTP/1.1\" 201 Created\n```", "```py\n\n>>> import logging>>> logging.warning(\"This is my log\")\nWARNING:root:This is my log\n```", "```py\n\n(venv) $ pip install loguru\n```", "```py\n\n>>> from loguru import logger>>> logger.debug(\"This is my log!\")\n2023-02-21 08:44:00.168 | DEBUG    | __main__:<module>:1 - This is my log!\n```", "```py\n\nfrom loguru import loggerdef is_even(n) -> bool:\n    logger.debug(\"Check if {n} is even\", n=n)\n    if not isinstance(n, int):\n        logger.error(\"{n} is not an integer\", n=n)\n        raise TypeError()\n    return n % 2 == 0\nif __name__ == \"__main__\":\n    is_even(2)\n    is_even(\"hello\")\n```", "```py\n\n(venv) $ python chapter15/chapter15_logs_01.py2023-03-03 08:16:40.145 | DEBUG    | __main__:is_even:5 - Check if 2 is even\n2023-03-03 08:16:40.145 | DEBUG    | __main__:is_even:5 - Check if hello is even\n2023-03-03 08:16:40.145 | ERROR    | __main__:is_even:7 - hello is not an integer\nTraceback (most recent call last):\n  File \"/Users/fvoron/Development/Building-Data-Science-Applications-with-FastAPI-Second-Edition/chapter15/chapter15_logs_01.py\", line 14, in <module>\n    is_even(\"hello\")\n  File \"/Users/fvoron/Development/Building-Data-Science-Applications-with-FastAPI-Second-Edition/chapter15/chapter15_logs_01.py\", line 8, in is_even\n    raise TypeError()\nTypeError\n```", "```py\n\nlogger.remove()logger.add(sys.stdout, level=\"WARNING\")\nlogger.add(\"file.log\", level=\"DEBUG\", rotation=\"1 day\")\n```", "```py\n\n(venv) $ python chapter15/chapter15_logs_02.py2023-03-03 08:15:16.804 | ERROR    | __main__:is_even:12 - hello is not an integer\nTraceback (most recent call last):\n  File \"/Users/fvoron/Development/Building-Data-Science-Applications-with-FastAPI-Second-Edition/chapter15/chapter15_logs_02.py\", line 19, in <module>\n    is_even(\"hello\")\n  File \"/Users/fvoron/Development/Building-Data-Science-Applications-with-FastAPI-Second-Edition/chapter15/chapter15_logs_02.py\", line 13, in is_even\n    raise TypeError()\nTypeError\n```", "```py\n\n$ cat file.log2023-03-03 08:15:16.803 | DEBUG    | __main__:is_even:10 - Check if 2 is even\n2023-03-03 08:15:16.804 | DEBUG    | __main__:is_even:10 - Check if hello is even\n2023-03-03 08:15:16.804 | ERROR    | __main__:is_even:12 - hello is not an integer\n```", "```py\n\ndef is_even(n) -> bool:    logger_context = logger.bind(n=n)\n    logger_context.debug(\"Check if even\")\n    if not isinstance(n, int):\n        logger_context.error(\"Not an integer\")\n        raise TypeError()\n    return n % 2 == 0\n```", "```py\n\nlogger.add(    sys.stdout,\n    level=\"DEBUG\",\n    format=\"<green>{time:YYYY-MM-DD HH:mm:ss.SSS}</green> | \"\n    \"<level>{level: <8}</level> | \"\n    \"<cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - <level>{message}</level>\"\n    \" - {extra}\",\n)\n```", "```py\n\n(venv) $ python chapter15/chapter15_logs_04.py2023-03-03 08:30:10.905 | DEBUG    | __main__:is_even:18 - Check if even - {'n': 2}\n2023-03-03 08:30:10.905 | DEBUG    | __main__:is_even:18 - Check if even - {'n': 'hello'}\n2023-03-03 08:30:10.905 | ERROR    | __main__:is_even:20 - Not an integer - {'n': 'hello'}\n```", "```py\n\nfrom loguru import loggerdef secret_header(secret_header: str | None = Header(None)) -> None:\n    logger.debug(\"Check secret header\")\n    if not secret_header or secret_header != \"SECRET_VALUE\":\n        logger.warning(\"Invalid or missing secret header\")\n        raise HTTPException(status.HTTP_403_FORBIDDEN)\n```", "```py\n\nINFO:     Started server process [47073]INFO:     Waiting for application startup.\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\n2023-03-03 09:00:47.324 | DEBUG    | chapter15.chapter15_logs_05:secret_header:6 - Check secret header\n2023-03-03 09:00:47.324 | WARNING  | chapter15.chapter15_logs_05:secret_header:8 - Invalid or missing secret header\nINFO:     127.0.0.1:58190 - \"GET /route1 HTTP/1.1\" 403 Forbidden\n```", "```py\n\nLOG_LEVEL = \"DEBUG\"logger.remove()\nlogger.add(\n    sys.stdout,\n    level=LOG_LEVEL,\n    format=\"<green>{time:YYYY-MM-DD HH:mm:ss.SSS}</green> | \"\n    \"<level>{level: <8}</level> | \"\n    \"<cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - <level>{message}</level>\"\n    \" - {extra}\",\n)\n```", "```py\n\nlogging.basicConfig(handlers=[InterceptHandler()], level=0, force=True)for uvicorn_logger_name in [\"uvicorn.error\", \"uvicorn.access\"]:\n    uvicorn_logger = logging.getLogger(uvicorn_logger_name)\n    uvicorn_logger.propagate = False\n    uvicorn_logger.handlers = [InterceptHandler()]\n```", "```py\n\n__all__ = [\"logger\"]\n```", "```py\n\nfrom chapter15.logger import loggerdef secret_header(secret_header: str | None = Header(None))    None:\n    logger.debug(\"Check secret header\")\n    if not secret_header or secret_header != \"SECRET_VALUE\":\n        logger.warning(\"Invalid or missing secret header\")\n        raise HTTPException(status.HTTP_403_FORBIDDEN)\n```", "```py\n\n2023-03-03 09:06:16.196 | INFO     | uvicorn.server:serve:75 - Started server process [47534] - {}2023-03-03 09:06:16.196 | INFO     | uvicorn.lifespan.on:startup:47 - Waiting for application startup. - {}\n2023-03-03 09:06:16.196 | INFO     | uvicorn.lifespan.on:startup:61 - Application startup complete. - {}\n2023-03-03 09:06:16.196 | INFO     | uvicorn.server:_log_started_message:209 - Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) - {}\n2023-03-03 09:06:18.500 | DEBUG    | chapter15.chapter15_logs_06:secret_header:7 - Check secret header - {}\n2023-03-03 09:06:18.500 | WARNING  | chapter15.chapter15_logs_06:secret_header:9 - Invalid or missing secret header - {}\n2023-03-03 09:06:18.500 | INFO     | uvicorn.protocols.http.httptools_impl:send:489 - 127.0.0.1:59542 - \"GET /route1 HTTP/1.1\" 403 - {}\n```", "```py\n\n(venv) $ pip install prometheus_fastapi_instrumentator\n```", "```py\n\nfrom fastapi import FastAPIfrom prometheus_fastapi_instrumentator import Instrumentator, metrics\napp = FastAPI()\n@app.get(\"/\")\nasync def hello():\n    return {\"hello\": \"world\"}\ninstrumentator = Instrumentator()\ninstrumentator.add(metrics.default())\ninstrumentator.instrument(app).expose(app)\n```", "```py\n\n# HELP http_requests_total Total number of requests by method, status and handler.# TYPE http_requests_total counter\nhttp_requests_total{handler=\"/\",method=\"GET\",status=\"2xx\"} 1.0\n```", "```py\n\nDICE_COUNTER = Counter(    \"app_dice_rolls_total\",\n    \"Total number of dice rolls labelled per face\",\n    labelnames=[\"face\"],\n)\n```", "```py\n\ndef roll_dice() -> int:    result = random.randint(1, 6)\n    DICE_COUNTER.labels(result).inc()\n    return result\n```", "```py\n\n(venv) $ PROMETHEUS_MULTIPROC_DIR=./prometheus-tmp gunicorn -w 4 -k uvicorn.workers.UvicornWorker chapter15.chapter15_metrics_01:app\n```", "```py\n\nimport timeimport dramatiq\nfrom dramatiq.brokers.redis import RedisBroker\nredis_broker = RedisBroker(host=\"localhost\")\ndramatiq.set_broker(redis_broker)\n@dramatiq.actor()\ndef addition_task(a: int, b: int):\n    time.sleep(2)\n    print(a + b)\n```", "```py\n\n(venv) $ PROMETHEUS_MULTIPROC_DIR=./prometheus-tmp-dramatiq dramatiq_prom_db=./prometheus-tmp-dramatiq dramatiq chapter15.chapter15_metrics_03\n```", "```py\n\n(venv) $ python -m chapter15.chapter15_metrics_03\n```", "```py\n\nDICE_COUNTER = Counter(    \"worker_dice_rolls_total\",\n    \"Total number of dice rolls labelled per face\",\n    labelnames=[\"face\"],\n)\n@dramatiq.actor()\ndef roll_dice_task():\n    result = random.randint(1, 6)\n    time.sleep(2)\n    DICE_COUNTER.labels(result).inc()\n    print(result)\n```", "```py\n\nmetrics:  global:\n    scrape_interval: 60s\n  configs:\n  - name: hosted-prometheus\n    scrape_configs:\n      - job_name: app\n        static_configs:\n        - targets: ['localhost:8000']\n      - job_name: worker\n        static_configs:\n        - targets: ['localhost:9191']\n    remote_write:\n      - url: https://prometheus-prod-01-eu-west-0.grafana.net/api/prom/push\n        basic_auth:\n          username: 811873\n          password: __YOUR_API_TOKEN__\n```", "```py\n\n$ ./grafana-agent-linux-amd64 --config.file=agent-config.yaml\n```"]