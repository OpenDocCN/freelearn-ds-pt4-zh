["```py\n@dlt.table(\n    name=\"random_trip_data_raw\",\n    comment=\"The raw taxi trip data ingested from a landing zone.\",\n    table_properties={\n        \"quality\": \"bronze\"\n    }\n)\ndef random_trip_data_raw():\n    raw_trip_data_schema = StructType([\n        StructField('Id', IntegerType(), True),\n        StructField('driver_id', IntegerType(), True),\n        StructField('Trip_Pickup_DateTime',\n                    TimestampType(), True),\n        StructField('Trip_Dropoff_DateTime',\n                    TimestampType(), True),\n        StructField('Passenger_Count', IntegerType(), True),\n        StructField('Trip_Distance', DoubleType(), True),\n        StructField('Start_Lon', DoubleType(), True),\n        StructField('Start_Lat', DoubleType(), True),\n        StructField('Rate_Code', StringType(), True),\n        StructField('store_and_forward', IntegerType(), True),\n        StructField('End_Lon', DoubleType(), True),\n        StructField('End_Lat', DoubleType(), True),\n        StructField('Payment_Type', StringType(), True),\n        StructField('Fare_Amt', DoubleType(), True),\n        StructField('surcharge', DoubleType(), True),\n        StructField('mta_tax', StringType(), True),\n        StructField('Tip_Amt', DoubleType(), True),\n        StructField('Tolls_Amt', DoubleType(), True),\n        StructField('Total_Amt', DoubleType(), True)\n    ])\n    return (spark.readStream\n        .format(\"cloudFiles\")\n        .option(\"cloudFiles.format\", \"json\")\n        .schema(raw_trip_data_schema)\n        .load(raw_landing_zone))\n```", "```py\nimport requests\n```", "```py\ndatabricks_workspace_url = \"<your_databricks_workspace>\"\npipeline_id = \"<your_pipeline_id>\"\npat_token = \"<your_api_token>\"\nresponse = requests.put(\n    f\"{databricks_workspace_url}/api/2.0/pipelines/{pipeline_id}\",\n    headers={\"Authentication\": pat_token},\n    json={\n        ...\n        \"clusters\":[{\n            \"autoscale\": {\n                \"min_workers\": 2,\n                \"max_workers\": 5,\n                \"mode\": \"ENHANCED\"\n            }\n        }]\n        ...\n    }\n)\nprint(response.json())\n```", "```py\n@dlt.table(\n    name=\"random_trip_data_raw\",\n    comment=\"The raw taxi trip data ingested from a landing zone.\",\n    table_properties={\n        \"quality\": \"bronze\",\n        \"pipelines.autoOptimize.managed\": \"false\"\n    }\n)\n```", "```py\n@dlt.table(\n    name=\"random_trip_data_silver\",\n    comment=\"Taxi trip data transformed with financial data.\",\n    table_properties={\n        \"quality\": \"silver\",\n        \"pipelines.autoOptimize.zOrderCols\": \"driver_id\",\n        \"delta.deletedFileRetentionDuration\": \"INTERVAL 14 days\"\n    }\n)\n```", "```py\n@dlt.table(\n    name=\"random_trip_data_silver\",\n    comment=\"Taxi trip data transformed with financial data.\",\n    table_properties={\n        \"quality\": \"silver\",\n        \"pipelines.autoOptimize.zOrderCols\": \"driver_id\",\n        \"delta.deletedFileRetentionDuration\": \"INTERVAL 9 days\",\n        \"delta.logRetentionDuration\": \"INTERVAL 35 days\"\n    }\n)\n```", "```py\n{\n    ...\n    \"aws_attributes.zone_id\": \"us-east-1\",\n    \"custom_tags.lob\": {\n        \"type\": \"fixed\",\n        \"value\": \"ad analytics team\"\n    }\n}\n```", "```py\nimport dlt\n@dlt.table(\n    name=\"yellow_taxi_transformed\",\n    comment=\"Taxi cab trip data containing additional columns about the financial data.\",\n    table_properties={\n        \"quality\": \"silver\",\n        \"pipelines.autoOptimize.zOrderCols\": \"zip_code, driver_id\"\n    }\n)\n```", "```py\nOPTIMIZE yellow_taxi_transformed\n    ZORDER BY (zip_code, driver_id)\n```", "```py\n@dlt.table(\n    name=\"random_trip_data_silver\",\n    comment=\"Taxi trip data transformed with financial data.\",\n    table_properties={\n        \"quality\": \"silver\",\n        \"pipelines.autoOptimize.zOrderCols\": \"driver_id\",\n        \"delta.enableDeletionVectors\": \"true\"\n    }\n)\n```"]