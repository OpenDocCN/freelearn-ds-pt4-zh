["```py\nALTER TABLE yellow_taxi_raw\nSET TAGS ('description'='Unprocessed taxi trip data')\n```", "```py\nGRANT SELECT ON system.compute.warehouse_events TO dept_leads\n```", "```py\nCATALOG_NAME = \"building_modern_dapps\"\nSCHEMA_NAME = \"dynamic_views_demo\"\nPERSISTENT_TABLE_NAME = \"covid_us_counties\"\nCOVID_DATASET_PATH = \"/databricks-datasets/COVID/covid-19-data/us-counties.csv\"\nspark.sql(f\"CREATE CATALOG IF NOT EXISTS {CATALOG_NAME}\")\nspark.sql(f\"USE CATALOG {CATALOG_NAME}\")\nspark.sql(f\"CREATE SCHEMA IF NOT EXISTS {SCHEMA_NAME}\")\nspark.sql(f\"USE SCHEMA {SCHEMA_NAME}\")\n```", "```py\ncovid_df = (spark.read\n            .option(\"header\", True)\n            .option(\"inferSchema\", True)\n            .csv(COVID_DATASET_PATH))\n(covid_df.write\n    .mode(\"overwrite\")\n    .saveAsTable(f\"{CATALOG_NAME}.{SCHEMA_NAME}.{PERSISTENT_TABLE_NAME}\"));\n```", "```py\nspark.table(f\"{CATALOG_NAME}.{SCHEMA_NAME}.{PERSISTENT_TABLE_NAME}\").display()\n```", "```py\nRESTRICTED_VIEW_NAME = \"covid_us_counties_restricted_vw\"\nspark.sql(f\"\"\"\nCREATE OR REPLACE VIEW {RESTRICTED_VIEW_NAME} AS\nSELECT\n    date,\n    county,\n    state,\n    CASE WHEN is_account_group_member('admins')\n        THEN fips\n        ELSE concat('***', substring(fips, length(fips)-1,\n                                     length(fips)))\n    END AS fips_id,\n    cases,\n    CASE WHEN is_account_group_member('admins')\n        THEN deaths\n        ELSE 'UNKNOWN'\n    END AS mortality_cases\nFROM {CATALOG_NAME}.{SCHEMA_NAME}.{PERSISTENT_TABLE_NAME}\n\"\"\")\n```", "```py\nCOL_AND_ROW_RESTRICTED_VIEW_NAME = \"covid_us_counties_final_vw\"\nspark.sql(f\"\"\"\nCREATE OR REPLACE VIEW {COL_AND_ROW_RESTRICTED_VIEW_NAME} AS\nSELECT\n    date,\n    county,\n    state,\n    CASE WHEN is_account_group_member('admins')\n        THEN fips\n        ELSE concat('***', substring(fips, length(fips)-1,\n                                     length(fips)))\n    END AS fips_id,\n    cases,\n    CASE WHEN is_account_group_member('admins')\n        THEN deaths\n        ELSE 'UNKNOWN'\n    END AS mortality_cases\nFROM {CATALOG_NAME}.{SCHEMA_NAME}.{PERSISTENT_TABLE_NAME}\nWHERE\n    CASE WHEN is_account_group_member('admins')\n        THEN 1=1\n        ELSE state IN ('Alabamba', 'Colorado', 'California',\n                       'Delaware', 'New York', 'Texas', 'Florida')\n    END\n\"\"\")\n```", "```py\n(spark.table(COL_AND_ROW_RESTRICTED_VIEW_NAME)\n    .groupBy(\"state\", \"county\")\n    .agg({\"cases\": \"count\"})\n    .orderBy(\"state\", \"county\")\n).withColumnRenamed(\"count(cases)\", \"total_covid_cases\").display()\n```"]