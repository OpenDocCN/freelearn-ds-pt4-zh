- en: '7'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Visualizing Data Effectively
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*A chart is worth a thousand words*, goes the old adage. Visual representation
    is often the preferred way to communicate numbers. As you can surely validate
    with your own experience, data charts are ubiquitous in business memos and presentations,
    as well as in newspaper articles and scientific papers. However, moving from data
    stored in a table to its graphic representation (a process called **data visualization**)
    is far from being trivial and risk-free. Although many software packages (including
    Power BI, Excel, KNIME, and so on) provide rapid ways to build charts in a matter
    of seconds, making effective and professional-looking visuals is far from being
    easy: it requires structured planning and disciplined execution.'
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter will give you a set of practical guidelines to ensure that your
    business messages are communicated clearly through an effective data visualization
    process. In particular, we will go through the following questions:'
  prefs: []
  type: TYPE_NORMAL
- en: What types of charts are available, and what are their peculiarities?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which chart should I use, considering the specific message I want to give?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How do I ensure that visuals are immediate and less prone to misunderstandings?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the common pitfalls to avoid when visualizing data?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'While in the previous chapter we focused on Power BI, in this one, we will
    acquire techniques that work well with *any* software able to produce visuals:
    in fact, think of data visualization as a tool-agnostic skill that you need to
    have in your data analytics practitioner''s backpack.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The flow of this chapter goes along the two essential phases of data visualization.
    The first step is to plan for our chart, considering the specific point we want
    to make and the chart types best serving our needs. Then, we move to build the
    chart, which includes finetuning the visual attributes, polishing the various
    graphical elements, and avoiding common mistakes: this part will be summarized
    into a practical list of data visualization quality rules to follow. Before getting
    into the planning step, let''s quickly frame the ever-present need for visualizing
    data.'
  prefs: []
  type: TYPE_NORMAL
- en: What is data visualization?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Although the general concept of data visualization is straightforward, let''s
    take some time to set the scene properly. The essential objective of data visualization
    is to transfer a message made of data to another human being. Being effective
    at this communication process implies that the receiver comprehends the original
    data-based message and "makes sense" of it through cognition. *Figure 7.1* shows
    a graphical representation of a bad attempt of communicating data messages: presenting
    it all in its original format:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Text'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B17125_07_01.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.1: Presenting data in its original format: as you can see, the decision-maker
    is visibly overwhelmed, and the large majority of the data is ignored'
  prefs: []
  type: TYPE_NORMAL
- en: 'The decision-maker here is clearly overwhelmed by such a large amount of raw
    data being offered. This is understandable: every human being has a limited amount
    of cognitive capacity, and our brains can only process a certain quantity of information
    at once. If we try to present too much data altogether, we will cross the cognitive
    limit of the receiver, who will obtain a partial or distorted version of the original
    message. As a result, our initial point is either missed or—even worse—misunderstood.
    The bad news is that whoever we have in front of us, however wise and number savvy
    they are, will always have a pretty limited amount of information they can make
    sense of: the rest will be simply ignored.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The other bad news is that if we have several people looking at the same data,
    their "takeaways" will diverge since their individual sensitivities will make
    them pay attention to different slices or aspects of the original data. The good
    news is that we have an established way to communicate data effectively to other
    human beings: transforming it into an abstract visualization that conveys the
    key aspects we want to transfer. This is what data visualization is all about.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Data visualization is powerful because it leverages one of the most developed
    functionalities of our entire brain: vision. As part of our natural evolution,
    humans have relied on our eyes to perform life-critical activities such as spotting
    food supplies and identifying critical threats. Consequently, our brains have
    consistently finetuned their visual excellence. As David Williams, Professor of
    Medical Optics at the University of Rochester, noticed, now more than 50 percent
    of the cortex (the brain''s surface) is involved in processing visual information:
    this is more than all other four senses combined! The brain can quickly interpret
    images by spotting some critical properties (such as size, color, curvature, position,
    slope, and so on) that we instinctively notice without using any conscious effort.
    They are called preattentive attributes, and we exploit them extensively in data
    visualization.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In *Figure 7.2*, you find the potential usage of data visualization: by encoding
    data (even a large amount of it, properly filtered and aggregated) into graphical
    summaries, the cognitive capacity of the decision-maker is utilized at its best,
    and the received message is unequivocal:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_02.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.2: Presenting data through visualization: by applying the right design
    choices, the decision-maker can easily understand your message'
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown in the picture, data visualization is like a customizable funnel that
    requires some tuning to work properly. In fact, there is no one single way to
    visualize the same data: by making some design choices (the type of chart, the
    measures to encode graphically, the visual attributes, and so on), you can "tune"
    the funnel to make it best fit for reaching your precise communication objective.
    Your responsibility is to get this tuning right. It''s important to notice that
    these design choices are not driven by mere aesthetic needs. Every visual pattern
    in a chart has a meaning and gets interpreted by our brain, which instinctively
    recognizes in it some visual clues (preattentive attributes). Every graphical
    element uses part of the cognitive capacity, so we will not use any visual clue
    unless it has a meaning in the context of our communication objective. As we will
    learn in depth later, the mantra in data visualization is *less is more*, and
    *minimalism* is undoubtedly the way to go.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Although the analogy with the funnel is a coarse simplification of reality
    (data visualization is more than just "compressing" data), it depicts well the
    mindset I would recommend you keep when visualizing data. Remember this: to convert
    data into immediate, impactful, and unambiguous visuals, you will have to make
    the right *design* choices. You need to act as a designer would do. In this chapter,
    you will impersonate the "operator" of the funnel in the picture, the visual designer
    who decides how to represent the data depending on the specific message to be
    transferred. You will learn how to make the right design choices for your charts
    consistently.'
  prefs: []
  type: TYPE_NORMAL
- en: Now that the scene is set and your role as a visual designer is unveiled, let's
    move to the planning phase, during which we will make some critical design choices.
  prefs: []
  type: TYPE_NORMAL
- en: A chart type for every message
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The ultimate ambition that should lie behind every chart is to carry a precise
    data-based message. Unsurprisingly, the very first thing we have to do when planning
    for a chart is to decide which specific message we want to give. You can think
    of this message as the answer to a certain business question, such as *is brand
    X growing its market share consistently?* or *how do revenues relate with the
    price of the service?*. Although business questions can be pretty ambiguous and
    multifaceted, in most cases, they fall within one of the following three types:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Evolution**: These questions deal with the development of quantities over
    time. If your business question contains words like *grow*, *decline*, *increase*,
    *decrease*, *accelerate*, *decelerate*, *fall behind*, *lag*, *overtake*, or *trend*,
    it will likely fall within the **Evolution** type. This is one of the most popular
    types of queries that data charts answer as the need to understand how business
    performance indicators are evolving is omnipresent.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Size**: These questions enquire on the relative proportion of components
    to a whole (also called **Part-to-Whole**) or the ranking across comparable quantities.
    The typical words you can find within this type are *drivers*, *drainers*, *high*,
    *low*, *top*, *bottom*, *biggest*, *smallest*, and—in general—all superlative
    adjectives ending in *-est*. Every time we are after a benchmark, ranking, comparison,
    or a drill-down into components, we ask ourselves size-related business questions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Relation**: This type of question investigates mutual relationships across
    different measures. When we use words such as *relate* or *grow/decline together*,
    and, in general, when we inquire how one quantity changes *with respect to another
    quantity*, we fall within this bucket.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Table 7.1* provides a list of sample business questions included within each
    group. After going through it, think about some questions you have lately been
    involved with at work: chances are that you will find examples within each of
    the three buckets.'
  prefs: []
  type: TYPE_NORMAL
- en: '| Type of message | Sample business question |'
  prefs: []
  type: TYPE_TB
- en: '| Evolution | Are sales increasing or decreasing, and how quickly? |'
  prefs: []
  type: TYPE_TB
- en: '| Is there any acceleration or deceleration of the trend? |'
  prefs: []
  type: TYPE_TB
- en: '| Do we see any seasonality in consumption? |'
  prefs: []
  type: TYPE_TB
- en: '| Size | What products are driving sales growth? |'
  prefs: []
  type: TYPE_TB
- en: '| Which brands are my biggest competitors? |'
  prefs: []
  type: TYPE_TB
- en: '| Within which product line is my competitor making the most profit? |'
  prefs: []
  type: TYPE_TB
- en: '| What are the most significant opportunities in terms of sales erosion? |'
  prefs: []
  type: TYPE_TB
- en: '| Relation | How does profit distribute over increasing size of packages? |'
  prefs: []
  type: TYPE_TB
- en: '| How is the available income spread across the country? |'
  prefs: []
  type: TYPE_TB
- en: '| Is there a relationship between price and profitability across brands? |'
  prefs: []
  type: TYPE_TB
- en: 'Table 7.1: A few samples of business questions organized by type of message'
  prefs: []
  type: TYPE_NORMAL
- en: 'Identifying which type of business message you want to give is a necessary
    initial step for planning your data visualization design. In fact, every type
    of message (Evolution, Size, or Relation) corresponds to one or more matching
    chart types, as *Figure 7.3* shows. In the figure, every row indicates a fundamental
    chart type (**Bar chart**, **Line chart**, **Treemap**, and **Scatterplot**):
    they come with a set of alternative renderings that you might consider using depending
    on the specific case:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.3: Chart selection matrix: every message type has its preferred chart
    type. Two stars are no-brainer matches, but one-star combinations can work well
    too'
  prefs: []
  type: TYPE_NORMAL
- en: 'I hope you find the chart selection matrix simple and easy to memorize, as
    it can be your best friend in deciding quickly what type of chart to use depending
    on the message you want to give (and, by doing so, responding to the business
    question you had). You should consider that there are many more chart types available
    out there, some of them coming with great visual appeal: however, over 90% of
    the time, you will be able to convey clear messages by just using this minimal
    list of established chart types. Another advantage of sticking to the marked path
    is that your business partners naturally recognize these charts and know how to
    interpret them, making your message—remember what the ultimate objective of data
    visualization is—crisper and more direct.'
  prefs: []
  type: TYPE_NORMAL
- en: Having introduced the four chart types and when to choose them, let's go through
    each type and how it can be used optimally. For each chart type, you will find
    a summary description of what it is, some visual examples, and a series of rules
    (which you will see highlighted in bold) to keep handy when building that kind
    of chart.
  prefs: []
  type: TYPE_NORMAL
- en: Bar charts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Bar charts (*Figure 7.4*) are possibly the most iconic data chart type on earth.
    For each category represented on the horizontal axis, you have one or multiple
    bars whose length is proportional to the quantity you want to visualize. Length
    is a very immediate preattentive attribute: the brain will naturally appreciate
    the differences in relative size across each bar. This makes bar charts particularly
    well fitted to transfer messages related to different sizes across business entities
    (such as brands, products, or countries), allowing a quick comparison, ranking,
    and benchmarking (especially when bars are sorted by height, which is normally
    recommended). Categories can also be time periods, like months, quarters, or years:
    this is why bar charts are used for driving messages regarding the evolution over
    time, too (of course, in this case, you should never sort the bars and always
    keep the natural time order):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_04.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.4: A bar chart, in all its simplicity: you can easily compare GDP
    levels across countries at the first glance'
  prefs: []
  type: TYPE_NORMAL
- en: 'One simple rule to keep in mind when using bar charts is that the **scale should
    always start from zero**. If we do not do so, their length is not proportional
    to the actual value we want to display: we will be tricking the viewer''s eye,
    misusing the preattentive attribute of length. For example, look at *Figure 7.5*:
    Germany''s GDP per capita looks like half of Norway''s, when it is actually around
    two-thirds of it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_05.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.5: In bar charts, the bars should always start from zero (not from
    25 like in this case)'
  prefs: []
  type: TYPE_NORMAL
- en: 'One interesting variation of this type of chart is the **horizontal bar chart**:
    oftentimes, horizontal bars are better than vertical ones, especially when there
    are many categories or their labels are long. Look at the example in *Figure 7.6*:
    the country names do not need to be tilted (saving the reader a stiff neck), and
    the bars can be longer, which makes appreciating the differences across countries
    easier:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.6: Horizontal bar charts: a simple way to better use your visual space'
  prefs: []
  type: TYPE_NORMAL
- en: 'When you have another category variable to be encoded, you can use a **stacked
    bar chart**. As shown in *Figure 7.7*, every subcategory (in this case, the sector
    within the country) is displayed as a portion of the chart, highlighted with a
    different color. By doing so, you will show the size of each component relative
    to the whole bar, and you also enable comparisons across country/sector combinations.
    The advice is to use this only when there are few subcategories to be encoded
    (ideally no more than four); otherwise, it gets confusing for the reader to identify
    each bar portion:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_07.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.7: A stacked bar chart: you can distinguish subcategories through
    the use of color'
  prefs: []
  type: TYPE_NORMAL
- en: 'Another extension within the bar chart family to consider is the **histogram**:this
    is essentially a bar chart showing the frequency distribution of a population
    by binned ranges. Have a look at the example in *Figure 7.8*. This chart tells
    us that the prices falling within the €5.8 to €5.9 bucket are the most frequent:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_08.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.8: A histogram: you can easily see the frequency of values falling
    within equally-sized ranges'
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, another useful variation of bar charts is **waterfall charts**. These
    are great at unveiling the positive and negative components in a before/after
    comparison, like the change in GDP that you can see in *Figure 7.9*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_09.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.9: A waterfall chart: you can unveil the drivers and the drainers
    of a change'
  prefs: []
  type: TYPE_NORMAL
- en: Line charts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Line charts are the most natural way to show the evolution of a quantity across
    a continuous variable, such as time. A typical case is the one shown in *Figure
    7.10*: the line is the result of "connecting the dots" among the different sales
    values shown on the vertical axis (which, in this case, does not need to start
    from zero like for bar charts) while on the horizontal axis you have the time
    values, organized in equally spaced intervals. The connecting lines between data
    points rely on the preattentive attribute of slope to carry your message of a
    quantity *going up or down* and at what speed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_10.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.10: Anatomy of a line chart: the continuous variable (in most cases,
    time) is on the horizontal axis'
  prefs: []
  type: TYPE_NORMAL
- en: 'Although the most common case involves evolution over time, you can use line
    charts to plot the trend of any continuous variable. For instance, if you want
    to display the number of products sold at different price points, you can set
    the price on the horizontal axis and see how sales degrade as price increases.
    In any case, **never use categorical variables in the horizontal axis of a line
    chart**. The reason is simple: in a line chart, the brain associates the slope
    of the line as the change between contiguous elements, like two subsequent points
    in time. Take *Figure 7.11*: there is no logical contiguity between Italy and
    Norway (besides alphabetical order, which is irrelevant to our message), so the
    steep increase we see between the two countries is both artificial and confusing:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_11.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.11: Categorical variables on the horizontal axis of a line chart:
    a beginner mistake to avoid'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also use line charts to show relationships across multiple time series
    evolving over the same time frame, and you can use colors to differentiate between
    lines. However, consider using **direct labels** placed right next to each line:
    these are clearer and avoid the use of legends, which saves the effort of "mapping"
    colors to categories. Additionally, this approach allows you to use colors to
    visually highlight part of the data like you find in *Figure 7.12*, which will
    make the chart more focused on the specific message you want to convey:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_12.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.12: A line chart with direct labels: avoid using color legends by
    replacing them with direct labels whenever possible'
  prefs: []
  type: TYPE_NORMAL
- en: 'One further piece of advice is to be very careful when adopting **dual axes**,
    which means allowing lines in the same chart to refer to two different references
    axes with different scales of measurement. One problem that can arise with dual
    axes is when the lines cross. Such a crossing is preemptively given attention
    by the brain of the reader: in other words, it *must signify something*. In reality,
    it might not have any meaning in relation to the message we want to give. Take
    the example of the left chart in *Figure 7.13*: the share and sales lines cross
    between Q2 and Q3, but this is solely due to the arbitrary definition of the two
    vertical scales:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_13.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.13: Dual axis is tricky: the left chart has an artificial crossing
    point and it is harder to interpret than the right one'
  prefs: []
  type: TYPE_NORMAL
- en: 'The composition chart on the right in the figure is a more robust alternative:
    the bars and the line unambiguously refer to two different axes, which neither
    overlap nor generate any crossing. An additional reason to prefer the rendering
    on the right is its **simple axis increments** for shares: the choice of having
    increments of two subsequent odd numbers (29%, 31%, 33%, and so on) is less immediate
    to follow than what we find on the right (with 30%, 35%, 40%, and so on).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Another more straightforward alternative to visualize the same data is to visualize
    multiple lines in separate charts (generally called a trellis or panel chart),
    as shown in *Figure 7.14*. This approach is beneficial when trying to separate
    multiple overlapping data series. It is a way to **avoid spaghetti charts**, where
    many lines are crammed into a single chart, making them hard to follow individually
    and decipher:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Chart, line chart'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B17125_07_14.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.14: Two lines combined in a trellis chart: in this case, we avoid
    vertical axes by adopting data labels'
  prefs: []
  type: TYPE_NORMAL
- en: In the particular case of *Figure 7.14*, you can also see that the vertical
    axes have been completely removed and replaced by **data labels** displaying the
    vertical axes values. When you prefer reporting precise values and do not have
    many data points to visualize, consider using data labels instead of relying on
    axes.
  prefs: []
  type: TYPE_NORMAL
- en: Treemaps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Treemaps are great at displaying the relative size of the various components
    of a whole. In a treemap, the total space is split up into multiple rectangles,
    each one having a size that is proportional to a numerical variable. As you can
    see in *Figure 7.15*, multiple levels of a hierarchy (in this case, countries
    and categories are the two levels used for the breakdown of sales) can be displayed
    at once, and the size of all elements can be compared:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_15.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.15: A treemap for showing relative sizes of sales by country/category
    combinations: colors are used to highlight the prevalence of olive sales in each
    country'
  prefs: []
  type: TYPE_NORMAL
- en: 'Even when you have one single level of splits, treemaps offer a good way to
    convey the relative size of the parts of a whole. I bet that some of you are now
    thinking: *can''t we use pie charts for that?* Although they are still widely
    used, data visualization specialists advise to **avoid pie charts**, claiming
    that there are more immediate and better alternatives to adopt. Information design
    expert Stephen Few summarizes his sentiment toward pie charts with a straight
    rule: *Save the pies for dessert!* It is easy to see why: *Figure 7.16* shows
    a pie chart and a bar chart visualizing the same data set and clearly demonstrates
    why pie charts are inferior. Pies use angles to encode quantitative values. Angles
    are a much less immediate visual attribute to perceive than length, which is used
    in bar charts. Our brain struggles with evaluating the amplitude of angles. Look
    again at the pie chart displayed in the figure: can you easily compare the size
    of China (first slice of the pie, starting from "midday") with the one from France
    (the fourth slice, moving clockwise)?'
  prefs: []
  type: TYPE_NORMAL
- en: '![Chart'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B17125_07_16.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.16: Pies are better used to accompany tea than to display data: in
    this case, the bar chart does a much better job'
  prefs: []
  type: TYPE_NORMAL
- en: 'The only situation when it is acceptable to use pie charts (or their other
    sweet-sounding alternatives, **donut charts**) is when you have only two slices
    (as we did in the last chapter—see *Figure 6.32*): in this case, it is easy to
    see which part is bigger and it is OK to use these charts. In all other cases,
    you should use either bar charts or treemaps to transfer messages that deal with
    sizes and proportions: it''s as simple as that.'
  prefs: []
  type: TYPE_NORMAL
- en: Scatterplots
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In scatterplots, data is displayed as a series of points on a rectangle. Two
    quantities are used to control the horizontal and vertical coordinates of the
    points appearing on the plot. In this way, you can easily show how the two quantities
    relate to each other. Have a look at the sample in *Figure 7.17*: the number of
    units sold (encoded as vertical coordinates, or *y*-axis) clearly goes down as
    the price per unit (used to control horizontal coordinates, or *x*-axis) increases:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_17.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.17: A scatterplot showing the distribution of units sold in relation
    to the price per unit: the higher the price, the less we sell. The dotted trendline
    makes the relationship evident'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can see a mutual interdependency of the two quantities (linear correlation):
    as price increases, we sell less. The scatterplot is giving us clear hints on
    non-linear phenomena as well. For example, in *Figure 7.17*, we can see that after
    the €6.00 threshold, there is an evident deterioration of sales. It seems that
    the full digit price acts as a psychological threshold: customers are attracted
    disproportionally more by a €5.99 price tag than by a €6.00 one. Linear and non-linear
    patterns like these can be easily spotted through scatterplots: this makes them
    a safe chart type choice when you need to convey a relationship-based business
    message.'
  prefs: []
  type: TYPE_NORMAL
- en: Adding a **trendline**, like the dotted one you can see in *Figure 7.17*, makes
    linear relationships stand out. Do you remember the linear regression algorithm
    we encountered in *Chapter 5*, *Applying Machine Learning at Work?* The trendline
    is just the visual rendering of the linear model that explains the quantity on
    the vertical axis (dependent variable) through the quantity displayed on the horizontal
    axis (independent variable). You can go back to *Figure 5.7* for a visual refresher
    on linear regression.
  prefs: []
  type: TYPE_NORMAL
- en: '**Quadrant charts**, like the one shown in *Figure 7.18*, are interesting expansions
    to scatterplots. By means of two reference lines—one vertical and one horizontal—which
    usually are set to be in the "middle" of the range of interest, we cut the space
    of the plot into four quadrants. Every quadrant relates to one of the four logical
    combinations of "being below" and "being above" each reference threshold:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Chart, scatter chart, bubble chart'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B17125_07_18.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.18: A quadrant chart showing the market size and share change (x-
    and y-axis) and the magnitude of the business (size of the bubble): this chart
    offers a framework to classify each country depending on where it lies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Such a chart becomes very powerful when you associate each quadrant with a
    clear business interpretation. For example, *Figure 7.18* shows the annual percentage
    change of a company''s market share (vertical axis) and the market size where
    it operates (horizontal axis) by country. The countries appearing in the top-right
    corners (in our case, only India) are strengths: in these markets, the company
    is growing its share of the business, and also, the total consumption of the category
    is growing (maybe driven by population growth). If the trend is confirmed in the
    future, this market will become increasingly important to the company: combined
    with the growth of market share, India can be added to the list of the strategic
    *strengths* for the company. If you look instead at the bottom-right quadrant,
    we find countries where the market size is growing, but the share is declining.
    If we don''t act, these markets will progressively hit more and more of our global
    share, as the country''s footprint will likely increase. Thus, these are *threats*
    that need careful management attention. In this quadrant chart, the bubble''s
    size is proportional to the magnitude of the current business, making it easier
    to see what the priorities are. This example illustrates the potential of quadrant
    charts to become business-sound **interpretation frameworks** for your data. Unfortunately,
    quadrant charts are still underutilized, and I strongly recommend thinking about
    possible applications in your work area, as they can make a real difference.'
  prefs: []
  type: TYPE_NORMAL
- en: 'One last consideration on scatterplots: the scales do not need to start from
    zero. Consequently, you can use scatterplots in lieu of bar charts to convey size-related
    messages when the values you want to display are all far from "zero": this will
    give you a meaningful advantage in reducing the scale to a smaller range of interest,
    making differences more visible. For example, *Figure 7.19* is a scatterplot showing
    the same data as *Figure 7.4*: in the scatterplot, the gaps in GDP per capita
    by country are even more apparent:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Chart, waterfall chart'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B17125_07_19.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.19: A scatterplot alternative to the bar chart in Figure 7.4: if the
    message is about absolute distances of GDP per capita across countries, this design
    can work well'
  prefs: []
  type: TYPE_NORMAL
- en: We have now completed the tour through the fundamental types of charts available
    for your data visualization needs. Bar charts, line charts, treemaps, and scatterplots
    encompass the vast majority of the business messages you can convey through data.
    Now that we have all the ingredients ready, let's pull them all together and finalize
    our visual design.
  prefs: []
  type: TYPE_NORMAL
- en: Finalizing your visual
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'On top of the specific guidelines to follow for each type of chart, which we
    have encountered in the previous pages, there are some general quality design
    rules that apply every time. The common denominator of such rules brings us back
    to where we started at the beginning of the chapter: minimalism is the ultimate
    key to effective data visualization.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Yale University professor Edward Tufte has been a pioneer in modern data visualization.
    One of the key concepts he introduced is the **data-ink ratio**, which describes
    the prevalence of data-driven visual elements in a chart. Consider all the "ink"
    you use in a chart to draw the essential, non-redundant display of data information:
    if we erased these chart elements, we would also remove the underlying business
    message we wanted to convey. Now think about the total ink you would need to print
    the chart, which includes non-required legends, background pictures, unneeded
    text, and so on. Tufte found out that by removing all the clutter, we maximize
    the proportion of data-ink on the total ink (data-ink ratio), and, by doing so,
    we obtain more effective data visuals.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s use an example to see how bad it can get: *Figure 7.20* shows a bad
    bar chart that features a collection of several wrong design choices:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17125_07_20.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.20: An example of what not to do when visualizing data: the data-ink
    ratio in this chart is at its lowest'
  prefs: []
  type: TYPE_NORMAL
- en: 'Although it is rare to find data visuals that are as bad as this one, I am
    sure that many of the visuals you see at work will carry one or more of the faults
    you see displayed there. In the following few pages, we will go through a practical
    set of guidelines we can follow to avoid all these issues. We need to train our
    design-critical eye to spot such shortcomings so that we can build neat and professional-grade
    data charts all the time. Looking at *Figure 7.20*, it seems that we are spoilt
    for choice on where to start from:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gridlines**: Gridlines can help guide the eye to connect data points with
    the axes, but they are not always necessary. In any case, they should always be
    visually muted and barely visible. Make them as thin as possible and color them
    with a light gray. Do not exaggerate with the number of gridlines per axis: they
    should not be more than 10 per dimension. If you can avoid gridlines altogether,
    even better: for example, if you use data labels on top of your data points, you
    should definitely remove gridlines and axes as they are no longer needed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tick marks:** Tick marks can help to align axis labels to data elements,
    like time periods, on a line chart. Similar to gridlines, tick marks should be
    visually muted, so keep them short and thin. Bar charts do not generally need
    tick marks, as it should be easy to connect every bar to a category. Like for
    any visual aid, if you are unsure whether to keep them or not, my advice is to
    remove them and then check if everything is still clear.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Chart border**: You can remove the external chart borders from your visuals:
    they consume ink but certainly do not add any information. To avoid any mix-up
    with the rest of the elements or text in your slide or document, leave a generous
    stripe of white space around the chart: it will look tidy and light, which is
    what you need.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rotated text**: As discussed earlier, when text is vertically rotated or
    even tilted, it is less accessible, takes extra time to read, and should be avoided.
    In the case of bar charts, use horizontal bars to gain space for lengthy labels.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**3D effects**: A data chart is an *abstract* representation of a collection
    of data points. When it comes to data visualization, we can surely leave *realism*
    out of the picture. A three-dimensional perspective in a data chart can only harm
    as it makes it harder to compare sizes and refer to reference lines. 3D scatterplots
    are sometimes used for exploring data in scientific contexts: in this case, they
    always allow the possibility to interact by rotating and panning the view appropriately.
    In business contexts, this is hardly needed. Don''t use 3D.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Shadows**: Similar to what we said for 3D, there is no reason to add an impression
    of light and shadow in any data visualization. Although many software platforms
    allow—quite inexplicably—it, don''t add shadows to your visuals.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Background**: The background of your chart should be neutral so that everything
    that lies in the foreground stays as distinguishable as possible. Sometimes, inexperienced
    users add color or—even worse—pictures with products and brands in the background
    of charts to make them "cool": they just lower their chance of success in delivering
    their business message as the chart is less readable. Funnily enough, Excel provides
    the option to add the white marble texture you see in *Figure 7.20* as a background
    —I haven''t made it up! Don''t ask me why, but Excel has also got a preloaded
    texture that features fish fossils. It is pretty bizarre, so check it out, but—please—never
    use it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Labels**: Using labels to identify lines or to specify data values can be
    very useful. You should avoid duplications that will add non-data ink: if you
    have data labels on a line or bar chart, for instance, you can entirely remove
    axes and gridlines, as we did in *Figure 7.14*. When you use labels, make sure
    they don''t have any border or non-neutral background. If they display data values,
    don''t overdo it with decimal digits, like in *Figure 7.20*. In general, keep
    any text label as short as strictly required to deliver the message you need with
    clarity.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Legend**: Legends are used to provide the key to interpret colors or textures
    in a chart. The problem with using them is that they consistently require the
    eye and the attention of the reader to go back and forth between the data elements
    in the chart and the legend itself. As a general rule, we should try to avoid
    using them and always look for alternatives, like we did with direct labels in
    *Figure 7.12*. If you have to use them, try to limit the number of items by grouping
    elements together or filtering the unimportant ones: it is hard for the human
    eye to distinguish neatly between more than five colors in the same chart.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'On top of the preceding elements, when refining our data chart, we should pay
    attention to the use of color. It is important to recognize that color is one
    of the most immediate preattentive attributes that our brain decodes when presented
    with a chart. As for the other attributes, such as length, size, and position,
    colors should always have a specific meaning when used in a data chart. In other
    words, colors are never there for decoration or to please any aesthetic need.
    In data visualizations, colors are there for a functional reason, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Highlighting elements that deserve attention**, like we did when emphasizing
    the olives category in *Figure 7.15*. As we will see in the next chapter, colors
    can be very powerful when diversifying between the back- and foreground when presenting
    data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Encoding an extra dimension**, like in the stacked bar chart shown in *Figure
    7.7*, or displaying continuous variables through color gradients.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Around 5% of people are affected by **Color Vision Deficiency** (**CVD**), a
    form of color blindness that makes some combinations of colors (like shades of
    green and red) indistinguishable. Therefore, try to be fully inclusive in your
    data visuals by adopting colorblind-friendly palettes ([davidmathlogic.com/colorblind](http://davidmathlogic.com/colorblind))
    or by using light versus dark color differences (this is also useful when your
    charts are printed in black and white-only ink).
  prefs: []
  type: TYPE_NORMAL
- en: 'In *Figure 7.21*, you find an improved version of the bad chart we saw earlier.
    The chart has now been treated by applying all the quality guidelines we have
    encountered throughout this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Chart, bar chart'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B17125_07_21.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.21: An improved version of the earlier bar chart: simplicity prevails'
  prefs: []
  type: TYPE_NORMAL
- en: 'Judge for yourself: minimalism enhances clarity and outclasses any fancy attempt
    to add unnecessary graphical embellishments.'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter has equipped you with a set of practical tools and guidelines
    for designing professional-looking and effective visuals to use in your daily
    work. We started our journey by framing the overall objective of visualizing data:
    transferring data-based messages to others by leveraging human visual perception.
    We have seen how we need to impersonate the role of a designer, who must make
    choices about what and how to visualize. After selecting the specific message
    type to give (which can be focused on evolution over time, making sense of absolute
    and relative size, or relation across quantities), we learned how to pick the
    right chart type using the chart selection matrix. We discovered pros and cons
    and typical pitfalls behind the implementation of line charts, bar charts, treemaps,
    and scatterplots, which collectively account for the vast majority of charts we
    need. Lastly, we went through a set of guidelines to adopt when ensuring the quality
    of any data visual. We discovered that all these rules have a common goal: they
    all invite us to apply methodical simplification, directness, and minimalism when
    building charts.'
  prefs: []
  type: TYPE_NORMAL
- en: All the good practices we have learned in this chapter require practice to turn
    into a habit. My advice is to apply all the rules we have learned here as soon
    as you put your hands on the next data chart you must refresh or create. Some
    of those rules might feel awkward at first—I know that there were some big fans
    of pie charts among you—but they will undoubtedly help you become more confident
    and successful at visualizing data.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we focused on transforming data into visuals and conveying
    a specific message. In the next chapter, we will take this a step further: we
    will learn how to turn data-based messages into compelling stories, which is what
    data storytelling is all about.'
  prefs: []
  type: TYPE_NORMAL
