- en: '6'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Introducing Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the rapidly evolving world of data-driven decision-making, machine learning
    has emerged as a game-changer. As a decision-maker, understanding the fundamentals
    of this powerful tool is essential to leverage its potential and stay ahead in
    today’s competitive landscape.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will demystify machine learning, exploring its roots in
    statistics and its pivotal role within **artificial intelligence** (**AI**). We’ll
    break down the different types of machine learning techniques and walk through
    the process of training, validating, and testing models. Moreover, we’ll dive
    into the exciting world of deep learning and its transformative impact on various
    industries.
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of this chapter, you’ll have a solid grasp of the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: The evolution from traditional statistics to machine learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The significance of machine learning in data-driven decision-making
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The diverse applications of machine learning across different fields
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The key steps in the machine learning process
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harnessing machine learning for unstructured data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The relationship between deep learning and artificial intelligence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Machine learning is not just a buzzword; it’s a field of study that can help
    you uncover hidden insights, make accurate predictions, and automate complex decision-making
    processes.
  prefs: []
  type: TYPE_NORMAL
- en: From statistics to machine learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we step beyond the known confines of statistics. We’re about
    to investigate a field that’s become the beating heart of business intelligence
    and innovation – machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: What is machine learning?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Machine learning is a subfield of AI that employs statistical techniques to
    enable computer systems to learn from data. It centers on developing algorithms
    that can learn patterns from data to make predictions or decisions. The keyword
    here is *learn*, as unlike rule-based algorithms within computer science, machine
    learning systems operate by training a model based on input data, then using that
    model to make predictions or understand patterns in the data, rather than following
    static program instructions.
  prefs: []
  type: TYPE_NORMAL
- en: To put it simply, think of a child first learning to speak. After hearing many
    people speak around them – parents, relatives, and friends – the child learns
    language and grammar without being taught the specific grammatical rules that
    the language follows.
  prefs: []
  type: TYPE_NORMAL
- en: Incredibly, children can learn all the grammatical complexities – the different
    tenses, cases, and conjugations – of their native language. In contrast, adults
    struggle to learn a foreign language even when they have learned formal explanations
    of the grammatical rules.
  prefs: []
  type: TYPE_NORMAL
- en: Machine learning algorithms operate similarly, learning from examples in data
    rather than by following hardcoded rules.
  prefs: []
  type: TYPE_NORMAL
- en: Another example is to think of a child learning to identify animals. After seeing
    several examples of dogs and being told each time that the animal is a dog, the
    child begins to understand what characteristics define a dog. Later, when they
    encounter a new animal that resembles the previous examples, they can identify
    it as a dog.
  prefs: []
  type: TYPE_NORMAL
- en: It’s crucial to note that machine learning systems are not programmed explicitly
    for specific tasks. Instead, they rely on patterns and inferences derived from
    data to accomplish those tasks. Hence, a machine learning system’s effectiveness
    heavily depends on its training data’s quantity, quality, and relevancy.
  prefs: []
  type: TYPE_NORMAL
- en: Ultimately, machine learning’s fundamental aim is to create systems that can
    independently learn, adapt, and improve, thereby reducing human intervention and
    error while increasing efficiency and accuracy across different tasks where it
    is applied.
  prefs: []
  type: TYPE_NORMAL
- en: How does machine learning relate to statistics?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Concerning statistics, you can consider machine learning as a form of applied
    statistics focusing on prediction and decision-making. While statistics emphasize
    inference and understanding relationships between variables, machine learning
    emphasizes accuracy in prediction.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s consider an example: predicting housing prices. A statistician might
    create a model using variables such as square footage, number of rooms, and location
    to infer how these factors relate to and impact the price. On the other hand,
    a machine learning model would utilize the same data, but its primary goal is
    to predict the prices as accurately as possible. It might find complex relationships,
    perhaps even ones that humans fail to spot, to improve the prediction’s accuracy.'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the subtle differences and the overarching connections between
    statistics and machine learning will serve as a valuable compass as we continue
    our journey in this exciting domain. It is essential to remember that both are
    tools in your decision-making arsenal, each powerful in its own right and even
    more so when used together.
  prefs: []
  type: TYPE_NORMAL
- en: Why is machine learning important?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In today’s rapidly changing digital landscape, machine learning is a pivotal
    technology transforming how businesses operate, compete, and grow. Its importance
    extends beyond merely automating routine tasks. Machine learning is reshaping
    industries by enabling businesses to extract valuable insights from data, leading
    to more intelligent decision-making, improved productivity, and competitive advantage.
    Here are some current applications of machine learning that underline its significance.
  prefs: []
  type: TYPE_NORMAL
- en: Customer personalization and segmentation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Today’s consumers expect personalized experiences. Machine learning is instrumental
    in making this a reality. By analyzing a wealth of customer data, machine learning
    algorithms can identify unique customer segments based on various factors, including
    purchasing behavior, preferences, or demographics. Such granular segmentation
    enables businesses to provide contextualized offers, recommendations, and services,
    enhancing customer satisfaction and loyalty. For instance, streaming services
    such as Netflix and Spotify use machine learning to offer personalized content
    recommendations, tailoring their services to each user’s unique tastes.
  prefs: []
  type: TYPE_NORMAL
- en: Fraud detection and security
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Machine learning is playing an increasingly crucial role in fraud detection
    and security. Traditional rule-based systems can be inflexible and unable to keep
    up with sophisticated, evolving threats. On the other hand, machine learning algorithms
    can learn from fraud incidents to detect patterns and anomalies that may indicate
    fraudulent activity. For example, credit card companies utilize machine learning
    to identify unusual transactions that could indicate credit card fraud, thereby
    improving security while minimizing false positives.
  prefs: []
  type: TYPE_NORMAL
- en: Supply chain and inventory optimization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Efficient supply chain management and inventory control are vital for businesses,
    particularly in sectors such as retail and manufacturing. Machine learning can
    provide accurate demand forecasts by analyzing historical sales data, market trends,
    and other relevant factors. These forecasts aid in maintaining optimal inventory
    levels, reducing holding costs, and preventing stockouts or overstock scenarios.
    Machine learning can also optimize routing in the supply chain, reducing delivery
    times and costs.
  prefs: []
  type: TYPE_NORMAL
- en: Predictive maintenance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Predictive maintenance powered by machine learning can be a game-changer in
    industries where equipment uptime is crucial, such as manufacturing, aviation,
    or energy. Machine learning algorithms can analyze data from sensors on equipment
    to detect patterns that precede failures, enabling maintenance scheduling before
    a breakdown occurs. This pre-emptive maintenance reduces downtime and prevents
    unnecessary issues and fixes, saving time and resources.
  prefs: []
  type: TYPE_NORMAL
- en: Healthcare diagnostics and treatment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Machine learning is making waves in healthcare, particularly in diagnostics.
    Deep learning models can analyze medical images to detect diseases, sometimes
    with accuracy surpassing human experts. For example, algorithms have been developed
    to detect certain types of cancer in medical images. Machine learning is also
    used to predict patient risk, helping doctors make better-informed treatment decisions.
  prefs: []
  type: TYPE_NORMAL
- en: In an era of data-driven decision-making, machine learning is a critical tool
    for businesses. It unlocks the potential to glean actionable insights from vast
    amounts of data, leading to more informed decisions, improved operational efficiency,
    and a significant competitive edge. By understanding and leveraging machine learning,
    business leaders can drive innovation and growth in their organizations.
  prefs: []
  type: TYPE_NORMAL
- en: Question
  prefs: []
  type: TYPE_NORMAL
- en: Can you think about where in your industry or business machine learning could
    be applied or where you have heard it being applied? When thinking about use cases
    for machine learning in your organization, it can often help to start by looking
    at typical applications within your industry rather than trying to find novel
    applications, as not every business problem is easily framed as a machine learning
    problem.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have understood how machine learning is defined and explored some
    of the common applications of machine learning, in the next section, we will go
    a little deeper and introduce the different domains *within* machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: The different types of machine learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Akin to an artisan’s toolbox filled with various tools, each designed for a
    specific task, machine learning is not a one-size-fits-all solution. It’s a spectrum
    of methodologies, each tailored to different types of problems and data. This
    section will examine four major types:'
  prefs: []
  type: TYPE_NORMAL
- en: Supervised learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unsupervised learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Semi-supervised learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reinforcement learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supervised learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Imagine trying to learn a new language with a tutor who corrects your mistakes
    and guides you as you practice. Supervised learning operates on a similar principle.
    You provide the machine with input data (the features) and the correct output
    (the target). The machine learns a model mapping inputs to outputs and then uses
    this model to make predictions on new, unseen data. This type of learning is called
    “supervised” because you are supervising the model’s learning process with correct
    answers.
  prefs: []
  type: TYPE_NORMAL
- en: A common example might be the fraud detection your bank account uses. The data
    may be information about your transaction, the transaction amount, the transaction
    time, the recipient, and so on. A supervised machine learning model trained on
    historical transactions, both normal transactions and fraudulent ones, would be
    able to discriminate whether your transaction is more likely to be a usual transaction
    or a fraudulent one, and the bank may block the account until the matter is investigated.
  prefs: []
  type: TYPE_NORMAL
- en: Unsupervised learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Imagine trying to learn a language without a tutor, using only books or media
    in the target language. This situation is akin to unsupervised learning, where
    the machine receives input data without corresponding output labels. The goal
    is to identify underlying patterns or structures within the data.
  prefs: []
  type: TYPE_NORMAL
- en: An example would be customer segmentation in marketing. An unsupervised learning
    algorithm can identify groups or “clusters” of customers with similar behaviors,
    preferences, or characteristics without being explicitly told what these groups
    might be.
  prefs: []
  type: TYPE_NORMAL
- en: Semi-supervised learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In a perfect world, we’d have a label for every piece of data. But in reality,
    labeled data can be expensive or time-consuming to obtain. This is where semi-supervised
    learning comes in. It uses a small amount of labeled data and the rest unlabeled
    data for training.
  prefs: []
  type: TYPE_NORMAL
- en: Consider a social media company trying to identify harmful content. They might
    have a small set of posts labeled as “harmful” or “safe,” but millions of unlabeled
    posts. Semi-supervised learning can use unlabeled data to improve its understanding
    of what constitutes harmful content.
  prefs: []
  type: TYPE_NORMAL
- en: Reinforcement learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Finally, consider a scenario where you have reinforcement learning. An agent
    learns to make decisions by performing actions in an environment to maximize cumulative
    reward.
  prefs: []
  type: TYPE_NORMAL
- en: A classic example is using machine learning to play a game of chess. The machine,
    or agent, learns by playing numerous games, receiving a reward when it wins and
    a penalty when it loses. Over time, the agent learns which moves will likely maximize
    its chances of winning the game.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.1: Different types of machine learning](img/B19633_06_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.1: Different types of machine learning'
  prefs: []
  type: TYPE_NORMAL
- en: Transfer learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Finally, there’s another intriguing approach within machine learning: transfer
    learning. This concept is grounded in the idea that knowledge learned in one domain
    can be transferred and applied to a different but related domain.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Picture this: you’re a skilled tennis player aiming to learn squash. Many skills
    and techniques you’ve honed while playing tennis, such as racket handling, agility,
    and strategic court movement, can be transferred and adapted to squash. You’re
    not starting from scratch – you’re transferring your learning from one domain
    (tennis) to another (squash).'
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, transfer learning in machine learning leverages a pre-trained model’s
    knowledge from a large dataset (such as identifying objects or animals in millions
    of images). It applies this understanding to a different but related problem (such
    as diagnosing diseases from medical images).
  prefs: []
  type: TYPE_NORMAL
- en: Transfer learning offers a significant advantage when you have limited data
    for your specific task or when training a complex model from scratch is computationally
    expensive or impractical. In deep learning, where models with millions of parameters
    are not uncommon, transfer learning has become the de facto standard for many
    applications, from image recognition to natural language processing tasks.
  prefs: []
  type: TYPE_NORMAL
- en: By applying transfer learning, models can achieve better performance, require
    less training data, and save valuable computational resources, thus offering practical
    solutions in various real-world scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: Each of these types of machine learning has its strengths and uses, and understanding
    when to apply each is a fundamental aspect of leveraging machine learning effectively
    for decision-making.
  prefs: []
  type: TYPE_NORMAL
- en: As we continue, we’ll explore how these tools can be applied to generate actionable
    insights for your business.
  prefs: []
  type: TYPE_NORMAL
- en: Popular machine learning algorithms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Machine learning employs many algorithms to model and understand complex data.
    When learning from data, these algorithms can be viewed as the machine’s “recipe.”
    While it’s not necessary to understand the intricate workings of each algorithm,
    it is helpful to have an overview of some commonly used ones and their general
    applications.
  prefs: []
  type: TYPE_NORMAL
- en: Linear regression
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In [*Chapter 5*](B19633_05.xhtml#_idTextAnchor104), we explored linear regression,
    a technique traditionally rooted in statistics. However, linear regression can
    also be considered one of the simplest examples of a supervised machine learning
    technique.
  prefs: []
  type: TYPE_NORMAL
- en: Linear regression, in a machine learning context, involves training a model
    to predict a dependent variable (such as sales) based on one or more independent
    variables (such as advertising spend and market conditions). The algorithm learns
    from historical data, identifying patterns and relationships. For instance, in
    a business setting, a company might use linear regression to forecast sales based
    on past sales data and other relevant factors, such as marketing budget, seasonal
    trends, or economic indicators. This predictive insight can inform decision-making,
    such as budget allocation or strategic planning, demonstrating how a classical
    statistical method adapts effectively to the dynamic needs of modern business
    analytics.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.2: Linear regression](img/B19633_06_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.2: Linear regression'
  prefs: []
  type: TYPE_NORMAL
- en: Logistic regression
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Logistic regression is a tool used for making decisions when there are two possible
    outcomes, much like choosing between “yes” and “no.” Unlike linear regression,
    which predicts values (such as how much a house might sell for), logistic regression
    predicts the likelihood of something happening, such as whether a loan will be
    defaulted or an email is spam.
  prefs: []
  type: TYPE_NORMAL
- en: In this model, we use data (such as by how many days a payment is late) to calculate
    a probability between 0 and 1\. This tells us how likely it is that the event
    we’re concerned about (such as a late payment) will occur. The process involves
    a special S-shaped curve, known as the sigmoid function, which you can see in
    your chart. This curve shows that at first, the probability of a default is low,
    but as the payment becomes more overdue, the likelihood of a default increases
    significantly.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.3: Logistic regression](img/B19633_06_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.3: Logistic regression'
  prefs: []
  type: TYPE_NORMAL
- en: For instance, in the preceding business scenario, logistic regression could
    help predict the chance of a company failing to pay an invoice on time, based
    on how overdue the payment is.
  prefs: []
  type: TYPE_NORMAL
- en: The curve in your chart illustrates the S-shaped logistic function, known as
    the sigmoid function. At the lower end of the weeks overdue, the probability of
    default is low. At around 8 weeks, the probability of default is 0.5 (50%). We
    can think of this as the threshold where it is more likely that the company is
    to default than pay their invoice.
  prefs: []
  type: TYPE_NORMAL
- en: 'As the weeks increase, the probability of default rises until it reaches a
    point where further delay doesn’t significantly change the probability. This is
    because the model recognizes a pattern: once a payment is significantly overdue,
    the likelihood of default is already high and stabilizes.'
  prefs: []
  type: TYPE_NORMAL
- en: Logistic regression can be a practical way to gauge risks and make decisions,
    offering a balance between complex mathematical predictions and accessible, actionable
    insights.
  prefs: []
  type: TYPE_NORMAL
- en: Decision trees
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Decision trees are intuitive and easy-to-understand algorithms used for both
    regression and classification tasks. They learn a series of explicit if-then rules
    on the features to predict the target variable. They’re like playing a “20 questions”
    game with your data, helping you deduce the answer by asking the right questions.
  prefs: []
  type: TYPE_NORMAL
- en: For example, in customer service management, a decision tree could help classify
    customer complaints based on their severity.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.4: Decision tree for complaint severity](img/B19633_06_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.4: Decision tree for complaint severity'
  prefs: []
  type: TYPE_NORMAL
- en: It could start by asking simple questions such as, “Is the complaint related
    to product quality or service?” Based on the answer, it delves deeper with more
    specific questions, such as “Is the product defect related to design or malfunction?”
    This step-by-step approach efficiently categorizes complaints, allowing for tailored
    responses and quicker resolution.
  prefs: []
  type: TYPE_NORMAL
- en: By breaking down complex decision-making processes into a series of simple questions,
    decision trees provide clear and actionable insights, making them invaluable in
    business operations.
  prefs: []
  type: TYPE_NORMAL
- en: Random forests
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Random forests are an “ensemble” method for decision trees that combines the
    insights of multiple decision trees to improve prediction accuracy. You can think
    of them as a team of experts (the individual trees) where each contributes their
    opinion, and the final decision is made based on the majority vote. This method
    enhances the strengths and balances the weaknesses of single decision trees, leading
    to more reliable results.
  prefs: []
  type: TYPE_NORMAL
- en: In practice, random forests work by having each tree in the forest give its
    prediction, with the most common outcome becoming the final prediction.
  prefs: []
  type: TYPE_NORMAL
- en: Ensemble techniques, such as Random Forests, often outshine even deep learning
    models, particularly when working with structured, table-like data. Their effectiveness
    is proven across various fields, from detecting fraudulent activities to predicting
    customer churn, showcasing their versatility and robustness in tackling complex
    problems.
  prefs: []
  type: TYPE_NORMAL
- en: Support vector machines
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Support vector machines** (**SVMs**) are a supervised machine learning technique
    that is particularly useful when you need to categorize or predict certain outcomes.'
  prefs: []
  type: TYPE_NORMAL
- en: Imagine you have a bunch of data points that belong to two different categories.
    SVMs help by finding the maximum margin hyperplane – a line (or a more complex
    boundary in the case of more complicated data) that best separates these categories
    with the widest possible gap, known as the maximum margin, on either side.
  prefs: []
  type: TYPE_NORMAL
- en: The maximum margin is important because it helps the SVM find the most robust
    separation between the classes. By maximizing the margin, the SVM ensures that
    the decision boundary is as far away from the data points as possible, which makes
    the classification less sensitive to noise and more likely to generalize well
    to new, unseen data.
  prefs: []
  type: TYPE_NORMAL
- en: 'For a business example, consider a bank that wants to decide whether to approve
    loans. They have information such as credit scores, income levels, and loan amounts.
    An SVM can help by analyzing this data and finding the maximum margin hyperplane
    that divides applicants into two groups: those likely to repay the loan and those
    who are high-risk. The maximum margin ensures that the bank’s decision boundary
    is robust and less likely to misclassify applicants. This separation helps the
    bank make more informed and safer lending decisions, reducing the risk of default.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.5: Support vector machines](img/B19633_06_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.5: Support vector machines'
  prefs: []
  type: TYPE_NORMAL
- en: k-nearest neighbors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**k-nearest neighbors** (**k-NN**) is a machine learning approach used in making
    predictions or categorizing things based on data. Think of it like finding the
    closest match. In k-NN, the idea is that similar items are usually found close
    to each other.'
  prefs: []
  type: TYPE_NORMAL
- en: For instance, in a business setting such as customer service, k-NN can help
    categorize customer inquiries. If a new inquiry comes in, the algorithm looks
    at past inquiries that are most similar (or “nearest”) to it. It then categorizes
    the new inquiry based on what it’s closest to. This is like saying, “This new
    customer problem is most similar to these previous ones, so it probably needs
    a similar kind of response.” This method helps quickly sort and respond to customer
    needs by using patterns from past data.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.6: k-nearest neighbors](img/B19633_06_6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.6: k-nearest neighbors'
  prefs: []
  type: TYPE_NORMAL
- en: Neural networks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Neural networks, especially deep neural networks, are at the heart of today’s
    AI boom. They’re the backbone of most modern machine learning, from speech recognition
    to image classification. They work by simulating a network of interconnected neurons
    inspired by the human brain to learn patterns in data.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.7: A simple artificial neural network](img/B19633_06_7.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.7: A simple artificial neural network'
  prefs: []
  type: TYPE_NORMAL
- en: Consider a factory that produces electronic components. A neural network could
    be trained to inspect these components as they come off the assembly line, using
    images captured by high-resolution cameras.
  prefs: []
  type: TYPE_NORMAL
- en: The network learns to identify what a perfect component should look like and
    then compares each produced item against this standard. It can detect even the
    smallest deviations or defects, such as misalignments, incorrect sizes, or surface
    blemishes, which might be challenging for human inspectors to catch consistently.
  prefs: []
  type: TYPE_NORMAL
- en: Alongside computer vision tasks such as this, neural networks are at the heart
    of many state-of-the-art machine learning models, such as speech recognition models
    and large language models including OpenAI’s GPT family of models.
  prefs: []
  type: TYPE_NORMAL
- en: 'These are just a few examples of the plethora of algorithms used in machine
    learning, each with its strengths, weaknesses, and application areas. The beauty
    of Machine Learning lies in its flexibility: the appropriate algorithm can be
    chosen or custom-designed based on the problem at hand. This variety makes machine
    learning applicable and valuable across many industries and domains.'
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will walk through the process involved in training,
    testing, and deploying machine learning models.
  prefs: []
  type: TYPE_NORMAL
- en: The machine learning process
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Machine learning is a broad field that encompasses various approaches to training
    models. Each machine learning approach has its own process for developing and
    optimizing models.
  prefs: []
  type: TYPE_NORMAL
- en: In unsupervised learning, the model learns from unlabeled data to discover hidden
    patterns or structures. The process typically involves data preprocessing, model
    training, model evaluation, and model tuning.
  prefs: []
  type: TYPE_NORMAL
- en: Reinforcement learning is a type of machine learning where an agent learns to
    make decisions by interacting with an environment. The process involves environment
    setup, agent training, policy evaluation, and policy improvement.
  prefs: []
  type: TYPE_NORMAL
- en: 'For supervised learning and transfer learning, establishing a reliable machine
    learning model involves carefully progressing through three essential stages:
    training, validation, and testing. These stages represent a structured approach
    to bringing a model to life, optimizing its performance, and ensuring its readiness
    for real-world application.'
  prefs: []
  type: TYPE_NORMAL
- en: We will focus on the training process for a supervised machine learning model.
  prefs: []
  type: TYPE_NORMAL
- en: Training a supervised machine learning model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Training is the initial phase where the supervised machine learning model learns
    from the data. We feed the model a “training dataset” that includes both input
    data and the correct output. The model works to identify patterns and relationships
    between the input and output.
  prefs: []
  type: TYPE_NORMAL
- en: For example, let’s consider that we are building a machine learning model to
    predict the weather. In the training phase, we expose the model to historical
    weather data such as temperature, humidity, wind speed, and weather conditions
    such as “sunny,” “rainy,” or “snowy.” The model will attempt to discern patterns
    between these weather variables and the resulting weather conditions.
  prefs: []
  type: TYPE_NORMAL
- en: Validation of a supervised machine learning model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once the model has been trained, we need to fine-tune it. Here, the validation
    stage plays a crucial role. We use a separate “validation set” to adjust the model’s
    parameters for better performance.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s return to our weather prediction model. We might use another subset of
    historical weather data during validation to see how well our model predicts the
    weather based on the patterns learned during the training phase. If it does not
    meet expectations, we will adjust the model’s parameters or complexity. This process
    is repeated until the model’s performance on the validation set is satisfactory.
  prefs: []
  type: TYPE_NORMAL
- en: Testing a supervised machine learning model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After training and validation, we reach the final stage – testing. This stage
    is a litmus test for our model’s performance. We expose the model to a “test set,”
    a separate dataset the model hasn’t seen before. The purpose here is to ensure
    that the model performs well on the training and validation data and generalizes
    well to new, unseen data.
  prefs: []
  type: TYPE_NORMAL
- en: Our weather prediction scenario might have a set of recent weather data that
    our model has never seen before. We would use this data to test how accurately
    our model predicts weather conditions. If the model performs well, we can confidently
    use it for real-time weather prediction.
  prefs: []
  type: TYPE_NORMAL
- en: These three stages—training, validation, and testing—form the bedrock of developing
    and deploying a machine learning model. They help us ensure that our model learns
    effectively, generalizes well, and is ready to make reliable predictions when
    deployed in a live environment. This is often a long, iterative process, where
    experiments will be carried out to train, validate, and test a model, before it
    reaches a level of accuracy ready to be deployed into production.
  prefs: []
  type: TYPE_NORMAL
- en: Evaluating machine learning models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once a machine learning model is trained, evaluating its performance is crucial
    to determine its effectiveness and reliability. Understanding model evaluation
    techniques helps you gauge whether your model is performing well or requires tweaking
    and tuning. This section overviews some key concepts and metrics used in model
    evaluation.
  prefs: []
  type: TYPE_NORMAL
- en: Training, validation, and test sets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Building a machine learning model involves splitting the available data into
    three sets: training, validation, and test sets. The model learns from the training
    set, which is the most significant portion of the data. The validation set is
    used to adjust parameters for improved performance during model tuning. The test
    set, which the model has not seen during the training phase, is used to assess
    the model’s final performance, providing a measure of how well the model generalizes
    to unseen data.'
  prefs: []
  type: TYPE_NORMAL
- en: Classification metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For classification problems where the aim is to predict a discrete label, several
    metrics are used:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Accuracy** measures the proportion of correct predictions out of all predictions.
    It is a good measure when the classes are balanced but can be misleading when
    the classes are imbalanced.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Precision** is the proportion of true positive predictions (correctly predicted
    positives) out of all positive predictions. It is a measure of the model’s exactness.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Recall (sensitivity)** is the proportion of true positive predictions out
    of all actual positives. It measures the model’s completeness.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To illustrate why accuracy can be misleading with imbalanced classes, consider
    a hypothetical problem of predicting a rare disease that only affects 1% of the
    population.
  prefs: []
  type: TYPE_NORMAL
- en: A model that simply predicts “no disease” for everyone would achieve 99% accuracy
    but would fail to identify any actual cases of the disease. In this scenario,
    precision and recall provide a more informative assessment of the model’s performance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Accuracy, precision, and recall can be calculated based on the Type I (false
    positives) and Type II (false negatives) errors we discussed in an earlier chapter.
    The following chart provides a visual representation of how these metrics relate
    to the different types of predictions:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.8: Accuracy, precision, and recall](img/B19633_06_8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.8: Accuracy, precision, and recall'
  prefs: []
  type: TYPE_NORMAL
- en: The columns represent the predicted classes (0 or 1), while the rows represent
    the actual classes (0 or 1).
  prefs: []
  type: TYPE_NORMAL
- en: 'The green quadrants represent **correct** predictions:'
  prefs: []
  type: TYPE_NORMAL
- en: '**True Negative (TN)**: Actual, 0; predicted, 0'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**True Positive (TP)**: Actual, 1; predicted, 1'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The red quadrants represent **incorrect** predictions:'
  prefs: []
  type: TYPE_NORMAL
- en: '**False Negative (FN)**: Actual, 1; predicted, 0'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**False Positive (FP)**: Actual, 0; predicted, 1'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The formulas at the bottom show how accuracy, precision, and recall are calculated
    based on the counts in each of these four quadrants.
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to accuracy, precision, and recall, the following metrics are incredibly
    useful in understanding the performance of a supervised machine learning model,
    and less prone to the issues with class imbalance causing accuracy to be a misleading
    metric:'
  prefs: []
  type: TYPE_NORMAL
- en: '**F1-score** is the harmonic mean of precision and recall, providing a balanced
    measure when the class distribution is uneven.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Area under the ROC** (**AUC-ROC**) is a comprehensive performance measurement
    for classification problems. It tells how much the model is capable of distinguishing
    between classes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regression metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For regression problems, where the aim is to predict a continuous value, we
    have the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mean absolute error** (**MAE**) measures the average magnitude of the errors
    in a set of predictions without considering their direction.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mean squared error** (**MSE**) is similar to MAE but squares the errors before
    averaging. It gives more weight to larger errors.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**R-squared (coefficient of determination)** represents the proportion of variance
    in the dependent variable that is predictable from the independent variables.
    It indicates the goodness of fit of the model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding these metrics is fundamental to assessing the quality and reliability
    of machine learning models. It’s important to note that no single metric tells
    the complete story. The choice of evaluation metrics should align with the business
    objective and the nature of the problem.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will consider something very important to understand
    when working with machine learning models, namely, the risks and limitations of
    machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: Risks and limitations of machine learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As much as machine learning has revolutionized various aspects of business and
    society, it’s essential to recognize that it comes with risks and limitations.
    Understanding these can guide decision-makers to take better, more informed actions
    and mitigate potential negative consequences.
  prefs: []
  type: TYPE_NORMAL
- en: Overfitting and underfitting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Overfitting occurs when a model learns the training data too well. It becomes
    so engrossed in the specific details and noise in the training set that it performs
    poorly on unseen data. An overfitted model has a low bias but a high variance.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, underfitting happens when a model is too simple to capture
    all the relevant relationships in the data. It may perform poorly on both the
    training data and unseen data. An under-fitted model has a high bias but low variance.
  prefs: []
  type: TYPE_NORMAL
- en: Balancing the trade-off between overfitting and underfitting is critical in
    creating a model that generalizes well to unseen data.
  prefs: []
  type: TYPE_NORMAL
- en: Bias and variance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Bias in a machine learning model is its tendency to consistently learn the wrong
    thing by not considering all the information in the data. Variance, on the other
    hand, refers to the model’s sensitivity to small fluctuations in the training
    set. High variance can cause overfitting, leading the model to capture random
    noise in the training data.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.9: Charts showing the bias-variance trade-off for models that are
    overfitting, underfitting, and correctly fitting, respectively](img/B19633_06_9.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.9: Charts showing the bias-variance trade-off for models that are
    overfitting, underfitting, and correctly fitting, respectively'
  prefs: []
  type: TYPE_NORMAL
- en: Balanced dataset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The quality and composition of the training data can significantly impact machine
    learning models. Suppose the dataset is imbalanced, meaning that one class of
    outputs is overly represented compared to others. In that case, the model may
    be biased toward the majority class and perform poorly on the minority class.
    Techniques such as oversampling the minority class, undersampling the majority
    class, or using synthetic data augmentation methods can help address this issue.
  prefs: []
  type: TYPE_NORMAL
- en: Models are approximations of reality
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It’s crucial to remember that machine learning models are, at their core, approximations
    of reality. They are constructed based on the data they were trained on and the
    assumptions they make. Consequently, they are inherently imperfect and come with
    a degree of uncertainty. They should not be seen as absolute oracles of truth
    but tools to assist decision-making, always subject to scrutiny, revision, and
    validation.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding these risks and limitations encourages a mindful and responsible
    approach to machine learning. This understanding serves as a reminder that while
    machine learning can be a powerful tool, human oversight, continuous monitoring,
    and ethical considerations remain paramount to ensure its positive and fair application.
  prefs: []
  type: TYPE_NORMAL
- en: Machine learning on unstructured data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Traditionally, machine learning has been applied to structured data – neat,
    tabulated data that fits nicely into a spreadsheet. However, most data being created
    and stored is unstructured – it doesn’t come pre-packaged in a friendly, orderly
    format. Examples of unstructured data are text documents, images, audio files,
    and videos. Luckily, machine learning is well equipped to handle this type of
    data, leading to the development of specialized fields such as **natural language
    processing** (**NLP**) and computer vision.
  prefs: []
  type: TYPE_NORMAL
- en: Natural language processing (NLP)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: NLP is a field at the intersection of computer science, AI, and linguistics.
    It focuses on how computers can understand, interpret, and generate human language
    in a valuable way.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are applications of NLP:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sentiment analysis**: Companies often use sentiment analysis to understand
    customer opinions about their products or services. For instance, NLP can analyze
    social media posts, customer reviews, and comments to determine whether the sentiment
    expressed about a product is positive, negative, or neutral.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Chatbots**: Chatbots are becoming increasingly popular for customer service.
    They use NLP to understand customer queries and respond to them effectively.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automated summarization**: Summarizing long documents can be extremely valuable,
    saving time and effort. For example, a business might use this to quickly understand
    the main points of a lengthy market research report.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Computer vision
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Computer vision aims to give machines the ability to understand and interpret
    visual data, akin to how humans use their eyesight.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are applications of computer vision:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Image recognition**: One of the most common applications of computer vision
    is recognizing what’s in an image, ranging from identifying items in a photograph
    to detecting faces in a crowd.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Medical imaging**: Computer vision is used extensively in healthcare, particularly
    in interpreting medical images. Algorithms can help detect anomalies in X-rays,
    MRIs, or CT scans that could indicate conditions such as cancer or brain injury.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Autonomous vehicles**: Self-driving cars rely heavily on computer vision
    to navigate the world. They use it to recognize traffic signs, pedestrians, and
    other vehicles and to understand road conditions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with unstructured data opens up a vast world of possibilities. It allows
    us to tackle more complex problems and generate insights from broader data sources.
    Understanding how to apply NLP and computer vision techniques can significantly
    enhance your ability to make data-driven decisions.
  prefs: []
  type: TYPE_NORMAL
- en: Deep learning and artificial intelligence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: AI has experienced monumental strides in recent years, primarily driven by advancements
    in an area known as deep learning. As we continue our exploration of machine learning,
    it’s critical to understand these concepts, their relationship, and their profound
    impact on our modern technological landscape.
  prefs: []
  type: TYPE_NORMAL
- en: Artificial intelligence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: AI, at its core, is the pursuit of creating machines that can perform tasks
    requiring human intelligence. These tasks include understanding natural language,
    recognizing patterns, making decisions, and perceiving environments.
  prefs: []
  type: TYPE_NORMAL
- en: 'AI can be broadly classified into two categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Narrow AI**: These are systems designed to perform specific tasks, such as
    recommending songs on a music streaming app or providing driving directions on
    a navigation app. Most of the AI that we interact with today falls under this
    category.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**General AI**: These systems can understand, learn, adapt, and implement knowledge
    across various tasks, much like humans. While the notion is exciting and often
    dramatized in science fiction, we’re still far from achieving this level of AI.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deep learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Deep learning is a subset of machine learning that’s been making waves in the
    AI space. It employs artificial neural networks with many layers (hence the “deep”
    in deep learning) to model and understand complex patterns in datasets. Deep learning
    models excel with large, high-dimensional datasets such as images, audio, or text.
  prefs: []
  type: TYPE_NORMAL
- en: 'Notable applications of deep learning include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Speech recognition**: Deep learning models are at the core of voice assistants
    such as Siri, Alexa, or Google Assistant, helping them understand and respond
    to various voice commands'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Image recognition**: Advanced image recognition, such as the facial recognition
    used in biometric security systems or identifying diseases in medical images,
    is primarily powered by deep learning'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Natural language processing**: While we discussed NLP earlier, it’s worth
    noting that many of the recent advances in this field, including machine translation
    and sentiment analysis, have been driven by deep learning'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deep learning’s impact on AI has been transformative. By enabling machines to
    learn from vast amounts of data, it has significantly expanded the possibilities
    of what AI can achieve. It’s the driving force behind many AI applications that
    seemed like science fiction not too long ago.
  prefs: []
  type: TYPE_NORMAL
- en: However, it’s essential to understand that AI is more than just deep learning.
    AI encompasses many techniques and methodologies, with deep learning being one
    of the most prominent examples. The AI landscape continues to evolve rapidly,
    and keeping abreast of these developments will be crucial for decision-makers
    looking to leverage AI’s power effectively.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have introduced machine learning, understood the different
    types of machine learning, introduced some of the common machine learning algorithms,
    gone through the machine learning process, and discussed some of the risks and
    limitations of machine learning. That’s quite a lot to have covered!
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have a good high-level view of machine learning, in the next chapter,
    we will dive further into supervised machine learning and better understand what
    it is and its use cases and techniques.
  prefs: []
  type: TYPE_NORMAL
