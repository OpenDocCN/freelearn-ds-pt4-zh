- en: '7'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Supervised Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Within machine learning, supervised learning is one of the most used and most
    useful subfields. It is often the first area students learn within machine learning
    and what people think of when first hearing about machine learning, as it involves
    learning on annotated or labeled data, similar to how we learn from correct examples.
  prefs: []
  type: TYPE_NORMAL
- en: The applications of supervised machine learning are wide and varied. From the
    spam detection on your email inbox, through to recommendation systems used when
    recommending TV shows and movies on your favorite streaming service, through to
    the call you get from your bank when its systems believe they may have detected
    fraudulent transactions, these are all applications of supervised machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will discuss in more detail the steps involved in training
    and deploying supervised machine learning models, some of the core supervised
    machine learning models, factors to consider when training and evaluating supervised
    machine learning models, and applications of supervised machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter covers the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Defining supervised learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steps within supervised learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Characteristics of regression and classification algorithms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applications of supervised learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Defining supervised learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Building upon the foundations covered in the previous chapter, let’s dive deeper
    into supervised learning. As discussed earlier, supervised learning involves training
    a model using labeled data, where the correct answers are already known. This
    process is analogous to a student learning under the guidance of a knowledgeable
    teacher.
  prefs: []
  type: TYPE_NORMAL
- en: In the context of business, imagine you’re trying to predict future sales based
    on historical data. The historical sales data, along with the factors that influence
    sales (such as marketing spend, seasonality and more), are your labeled data.
    Your machine learning model learns from this data to predict future sales.
  prefs: []
  type: TYPE_NORMAL
- en: Before getting into the detail of the process of supervised machine learning
    and different supervised learning algorithms, let’s look at some common applications.
  prefs: []
  type: TYPE_NORMAL
- en: Applications of supervised learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Supervised learning has a broad range of applications across various industries,
    such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Consumer goods** **and retail**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Demand forecasting**: Retailers can use supervised learning to forecast product
    demand. By training a model on historical sales data, including product features,
    store locations, promotions, and external factors such as weather and holidays,
    along with corresponding sales figures, the model can learn patterns that influence
    demand. This allows retailers to optimize inventory management, reduce stockouts,
    and improve supply chain efficiency.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Financial services**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Credit risk assessment**: Financial institutions can use supervised learning
    to assess the creditworthiness of loan applicants. By training a model on historical
    data of loan repayments, along with relevant features such as credit score, income,
    and employment status, the model can learn to predict the likelihood of an applicant
    defaulting on a loan. This helps institutions make informed lending decisions
    and manage risk.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Utilities**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customer churn prediction**: Utilities companies, such as electricity, gas,
    and water companies, as well as telecoms and broadband companies, can use supervised
    learning to predict which customers are likely to churn (i.e., switch to a competitor).
    By training a model on historical customer data, including usage patterns, customer
    service interactions, and demographic information, along with churn labels, the
    model can identify customers at high risk of churning. This allows companies to
    proactively offer personalized incentives, such as discounts or loyalty rewards,
    or improve targeted aspects of their services based on the identified churn drivers,
    ultimately reducing customer attrition.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The two types of supervised learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Supervised learning can be further divided into two main categories: **regression**
    and **classification**. The key difference between them lies in the type of output
    they predict.'
  prefs: []
  type: TYPE_NORMAL
- en: Regression
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Regression is used when the output variable is a continuous value. The goal
    is to predict a numerical value based on input features. Here are some examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sales forecasting**: A company can use regression to predict sales figures
    for the next quarter based on historical sales data, marketing expenditure, and
    economic indicators. The model learns the relationship between these input features
    and the continuous output variable (sales figures).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**House price prediction**: A real estate company can use regression to predict
    the price of a house based on features such as square footage, number of bedrooms,
    location, and age of the property. The model learns from past housing data to
    estimate the continuous output variable (house price).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Classification
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Classification is used when the output variable is a categorical value. The
    goal is to predict the class or category to which an input belongs. Here are some
    examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Talent acquisition**: HR departments can use classification to screen and
    shortlist job applicants. The model is trained on a dataset of past applicants,
    including their resumes, qualifications, and interview performance, along with
    hiring decision labels. Given a new applicant’s information, the model predicts
    whether they are likely to be accepted for the role, streamlining the recruitment
    process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Survey fraud detection**: Within market research surveys, particularly those
    provided online, there is often a high proliferation of fraudulent responses,
    as fake respondents aim to get the reward for taking the survey without providing
    accurate answers. To prevent this, supervised machine learning can be used to
    classify and filter out fraudulent responses, looking at aspects such as the length
    of time taken to answer the survey, the answers selected, and even the location
    of the IP address.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Key factors in supervised learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As we touched upon in the previous chapter, there are several factors and risks
    to consider when training a machine learning model. Factors such as the bias-variance
    trade-off, the amount of training data, the dimensionality of the input space,
    and noise in the target values play a crucial role in supervised learning. Let’s
    investigate how these factors specifically impact supervised learning algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: The bias-variance trade-off – balancing simplicity and complexity
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In supervised learning, it’s important to strike the right balance between
    a model that is too simple (high bias) and a model that is too complex (high variance):'
  prefs: []
  type: TYPE_NORMAL
- en: A model that is too simple may miss important patterns in the data, while a
    model that is too complex may memorize noise and irrelevant details
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The goal is to find a model that captures the underlying patterns without being
    overly influenced by random fluctuations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Quantity of training data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The amount of data used to train the model is **pivotal** to its performance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generally, having more training data allows the model to learn better and make
    more accurate predictions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: However, it’s also important to consider the relationship between the number
    of data points and the number of input variables (features). If there are too
    many features compared to the number of data points, the model may become overly
    complex and perform poorly on new, unseen data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Number of input variables
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The number of input variables, also known as features or attributes, can impact
    the model’s performance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When dealing with a large number of input variables (high-dimensional data),
    the model becomes more complex and may require more data to learn effectively
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In such cases, techniques such as variable selection or dimensionality reduction
    can be used to identify the most important variables and simplify the model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Quality of the target data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The quality of the labeled data used for training is crucial to the model’s
    performance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the target data contains errors or inconsistencies (noise), it can mislead
    the model during the learning process, leading to inaccurate predictions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Techniques such as data cleaning and outlier detection can help improve the
    quality of the target data and enhance the model’s performance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To summarize, when implementing supervised learning, it’s important to consider
    the trade-off between model simplicity and complexity, the quantity and quality
    of training data, the number of input variables, and the presence of noise in
    the target data. By carefully managing these factors, businesses can develop effective
    supervised learning models that make accurate predictions and support decision-making.
  prefs: []
  type: TYPE_NORMAL
- en: Steps within supervised learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will explore in more detail all the steps involved in supervised
    learning. From data preparation to model deployment, we’ll walk through each stage,
    providing insights and examples along the way.
  prefs: []
  type: TYPE_NORMAL
- en: Data preparation – laying the foundation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The success of any supervised learning project hinges on the quality of the
    data. Data preparation is an important first step that involves the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data cleaning**: Identifying and correcting erroneous, incomplete, or inconsistent
    data points to ensure the integrity of your dataset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Feature selection**: Choosing the most informative and relevant attributes
    that contribute to the predictive power of your model, while discarding irrelevant
    or redundant features.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data transformation**: Converting raw data into a format that can be effectively
    processed by machine learning algorithms. This may involve scaling numerical features,
    encoding categorical variables, or handling missing values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Example**: A retail company preparing customer purchase data might clean
    up inconsistencies, select key features such as purchase history and demographics,
    and transform them into numerical representations.'
  prefs: []
  type: TYPE_NORMAL
- en: Algorithm selection – choosing the right tool
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'With a wide array of supervised learning algorithms available, selecting the
    most appropriate one is essential. The choice depends on the nature of your problem:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Regression algorithms**: Used for predicting continuous target variables.
    Popular choices include linear regression, polynomial regression, ridge regression,
    and lasso regression.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Classification algorithms**: Used for predicting categorical target variables.
    Common options include logistic regression, **Support vector machines** (**SVMs**),
    **k-nearest neighbors** (**k-NN**), decision trees, and random forests.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Example**: A real estate company might use regression algorithms to predict
    house prices based on features such as location, size, and property age, while
    a marketing firm could employ classification algorithms to predict customer behavior
    based on demographic and interaction data.'
  prefs: []
  type: TYPE_NORMAL
- en: Model training – learning from data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once you’ve selected an algorithm, it’s time to train your model using the prepared
    training data. This step involves feeding the algorithm with input features and
    corresponding target values, allowing it to learn the underlying patterns and
    relationships.
  prefs: []
  type: TYPE_NORMAL
- en: During training, the algorithm iteratively adjusts its internal parameters to
    minimize the difference between predicted and actual target values. This process
    enables the model to capture the complex mappings between inputs and outputs.
  prefs: []
  type: TYPE_NORMAL
- en: Model evaluation – assessing performance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before deploying your trained model, it’s crucial to assess its performance
    using evaluation metrics. This step helps you understand how well the model generalizes
    to unseen data and identifies potential areas for improvement.
  prefs: []
  type: TYPE_NORMAL
- en: '**Regression metrics**: **mean absolute error** (**MAE**), **mean squared error**
    (**MSE**), and **root mean squared error** (**RMSE**) are commonly used to measure
    the average difference between predicted and actual values'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Classification metrics**: Accuracy, precision, recall, and F1 score provide
    insights into the model’s ability to correctly classify instances across different
    categories'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By evaluating your model on a separate validation set, you can gauge its performance
    and make informed decisions about further refinements or parameter tuning.
  prefs: []
  type: TYPE_NORMAL
- en: Prediction and deployment – putting the model to work
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once you’re confident in your model’s performance, it’s time to deploy it for
    real-world predictions. This step involves integrating the trained model into
    your application or system, allowing it to generate predictions based on new,
    unseen input data.
  prefs: []
  type: TYPE_NORMAL
- en: '**Example**: A consumer goods company can use a trained sales forecasting model
    to predict future demand based on factors such as marketing spend, seasonality,
    and competitor activity, enabling proactive inventory management and resource
    allocation.'
  prefs: []
  type: TYPE_NORMAL
- en: By carefully following the key steps of data preparation, algorithm selection,
    model training, evaluation, and deployment, you can realize the full potential
    of supervised learning.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we’ll dive deeper into specific algorithms for supervised
    learning, for both regression and classification. We’ll explore their characteristics
    and how they can be used to predict continuous and categorical data respectively.
  prefs: []
  type: TYPE_NORMAL
- en: Characteristics of regression and classification algorithms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we’ll explore the characteristics of a range of different regression
    and classification algorithms. We will explore their practical applications and
    how they can be used to drive decision-making in various industries.
  prefs: []
  type: TYPE_NORMAL
- en: Regression algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have already covered regression, which is a form of supervised machine learning.
    Regression algorithms are used when the output or target variable is continuous
    or numerical. They are primarily used for forecasting, predicting trends, and
    determining relationships between variables. Beyond the ordinary least squares
    regression we have already covered, there are other, more advanced variations
    of regression. These variations can be used to account for different interactions
    between variables, or to mitigate overfitting by applying what is known as **regularization**.
  prefs: []
  type: TYPE_NORMAL
- en: Polynomial regression
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Polynomial regression** extends linear regression by adding extra predictors,
    obtained by raising each of the original predictors to a power – for example,
    x2 or x3\. This provides a broader range of functions to fit the data.'
  prefs: []
  type: TYPE_NORMAL
- en: In market research, polynomial regression can capture non-linear relationships
    between input variables and sales. For example, it might reveal that sales increase
    with advertising spend up to a certain point, but then level off or decline past
    that threshold, helping inform optimal budget allocation.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.1: Polynomial regression](img/B19633_07_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.1: Polynomial regression'
  prefs: []
  type: TYPE_NORMAL
- en: Take, for example, this chart of polynomial regression, which has been fit to
    a set of data points. Remember that with ordinary least squares regression, we
    could only fit a linear, straight-line relationship between the points. However,
    polynomial regression allows us to model a more complex relationship between the
    variables, which may not be a straightforward, linear relationship, as in the
    previous example.
  prefs: []
  type: TYPE_NORMAL
- en: Ridge regression
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Often within regression, we have many input variables to consider, which can
    lead to problems such as overfitting or what is known as **multicollinearity**,
    where the input variables are correlated with one another. This can lead to less
    reliable inferences from our model.
  prefs: []
  type: TYPE_NORMAL
- en: To deal with this, there are different forms of “regularized” regression that
    add terms to our regression equation to help mitigate the aforementioned issues.
  prefs: []
  type: TYPE_NORMAL
- en: '**Ridge regression** is a regularization method used to analyze multiple regression
    data that suffer from multicollinearity – when predictor variables are highly
    correlated. By adding a degree of bias to the regression estimates, ridge regression
    reduces the standard errors. This could be useful in retail, where one might want
    to understand the relationship between advertising spend and sales while considering
    multicollinearity between different advertising channels.'
  prefs: []
  type: TYPE_NORMAL
- en: Lasso regression
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Lasso** (**least absolute shrinkage and selection operator**) **regression**
    is another regularization technique for linear regression that allows for the
    selection of variables in a regression model, such that not all the input variables
    have an effect on the outcome variable. This can reduce the likelihood of overfitting
    and is particularly useful when dealing with high-dimensional data. In the consumer
    goods industry, lasso regression can be used to predict demand based on various
    factors while avoiding overfitting.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.2: Regularized regression (e.g., ridge regression/lasso regression)](img/B19633_07_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.2: Regularized regression (e.g., ridge regression/lasso regression)'
  prefs: []
  type: TYPE_NORMAL
- en: Classification algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Classification algorithms are used when the output or target variable is categorical
    or discrete. They are mainly used for categorizing data into specific groups.
  prefs: []
  type: TYPE_NORMAL
- en: SVM
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An SVM is a powerful classification algorithm that seeks the best hyperplane
    separating different classes. It’s particularly effective in high-dimensional
    spaces and situations where the number of dimensions exceeds the number of samples.
    In marketing, SVM can be used to segment customers into different groups for targeted
    advertising.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.3: SVM](img/B19633_07_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.3: SVM'
  prefs: []
  type: TYPE_NORMAL
- en: k-NN
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: k-NN is a simple, easy-to-understand algorithm that classifies a data point
    based on how its neighbors are classified. It’s widely used in preliminary studies
    to gain insights from the data. For example, in retail, k-NN can be used to predict
    whether a customer will make a purchase based on the behavior of similar customers.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.4: k-NN](img/B19633_07_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.4: k-NN'
  prefs: []
  type: TYPE_NORMAL
- en: Decision trees and random forests
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Decision trees split the data into multiple sets based on certain conditional
    control statements. They are easy to understand and interpret, making them useful
    for exploratory research. Random forests, an ensemble of decision trees, can improve
    prediction accuracy. In the consumer goods industry, these algorithms can be used
    to predict whether a new product will be successful based on features such as
    price, marketing spend, and competition.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.5: Decision tree](img/B19633_07_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.5: Decision tree'
  prefs: []
  type: TYPE_NORMAL
- en: Take, for example, a decision tree that has been fitted to data to predict whether
    a patient is at higher risk or lower risk of type 2 diabetes. We can see that
    a decision tree can split the population on the variables it has been trained
    on, including variables such as age (are they older or younger than 45?), as well
    as whether they are overweight or have a relative with type 2 diabetes. This is
    a simple example but illustrates how you can go down a decision tree to predict
    an outcome.
  prefs: []
  type: TYPE_NORMAL
- en: Key considerations in supervised learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While applying these algorithms, it’s important to consider factors such as
    the bias-variance trade-off, the amount of training data, the dimensionality of
    the input space, and noise in the target values. Striking a balance between bias
    and variance ensures that your model is neither too simple (underfitting) nor
    too complex (overfitting). Having sufficient training data, managing high-dimensional
    input spaces, and dealing with noise in target values are also crucial to building
    robust models.
  prefs: []
  type: TYPE_NORMAL
- en: Evaluation metrics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Evaluation metrics play a vital role in assessing the performance of supervised
    learning models. While the previous chapter introduced some common metrics, let’s
    now explore their specific applications in supervised learning:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Regression metrics**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**MAE**: MAE measures the average absolute difference between the predicted
    and actual values. It provides a clear interpretation of the model’s average prediction
    error in the same units as the target variable.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**MSE**: MSE calculates the average squared difference between the predicted
    and actual values. It emphasizes larger errors and is sensitive to outliers. Taking
    the square root of MSE gives the RMSE, which is in the same units as the target
    variable.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**R-squared**: R-squared represents the proportion of variance in the target
    variable that is predictable from the input features. It ranges from 0 to 1, with
    higher values indicating a better fit of the model to the data.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Classification metrics**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Accuracy**: Accuracy measures the proportion of correct predictions out of
    the total predictions made. It is a simple and intuitive metric but can be misleading
    when dealing with imbalanced classes.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Precision**: Precision represents the proportion of true positive predictions
    out of all positive predictions made by the model. It focuses on the model’s ability
    to avoid false positives.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Recall (sensitivity)**: Recall measures the proportion of true positive predictions
    out of all actual positive instances. It emphasizes the model’s ability to identify
    positive instances correctly.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**F1 score**: The F1 score is the harmonic mean of precision and recall. It
    provides a balanced measure of the model’s performance, especially when dealing
    with imbalanced classes.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Area under the ROC** (**AUC-ROC**): AUC-ROC evaluates the model’s ability
    to discriminate between classes across different probability thresholds. It is
    particularly useful when the decision threshold needs to be adjusted based on
    the specific problem requirements.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: By understanding and applying these evaluation metrics, businesses can gain
    valuable insights into the performance of their supervised learning models, identify
    areas for improvement, and make informed decisions based on the models’ predictions.
  prefs: []
  type: TYPE_NORMAL
- en: Applications of supervised learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Supervised learning has found its place in numerous industries. It enables many
    businesses to predict future outcomes based on historical data. Let’s explore
    some more practical examples of how supervised learning algorithms are applied
    in different industries.
  prefs: []
  type: TYPE_NORMAL
- en: Consumer goods
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the consumer goods industry, supervised learning is being leveraged for
    various applications:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Consumer trend identification**: By analyzing data from eCommerce platforms,
    social media, search engines, sales, and surveys, companies can identify emerging
    consumer trends – for example, trending product categories, ingredients, flavors,
    and claims that are predicted to see future growth. This helps in developing new
    products or making changes to existing ones that align with consumer preferences,
    potentially leading to increased revenue.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Price optimization**: By considering factors such as historical sales data,
    competitor pricing, and marketing initiatives, companies can determine the optimal
    price for their products to maximize profitability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retail
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the retail industry, supervised learning is transforming various aspects
    of the business:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Product recommendations**: By analyzing customers’ purchase histories and
    product similarities, retailers can recommend products that are likely to interest
    specific customers, potentially increasing sales and customer loyalty.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customer feedback classification**: By categorizing customer feedback from
    various sources such as call centers, social media, and website forms, retailers
    can identify common issues and concerns. This information can be used to prioritize
    customer service efforts and address areas that need improvement.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Demand forecasting**: By analyzing historical sales data, retailers can predict
    future demand for products. This helps in optimizing inventory management, reducing
    stockouts or overstocking, and improving overall operational efficiency.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Workforce optimization**: By forecasting customer traffic and sales patterns,
    retailers can optimize staff scheduling to ensure adequate coverage during peak
    hours while minimizing labor costs during slower periods.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manufacturing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Supervised learning is transforming the manufacturing industry in several ways:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Predictive maintenance**: By analyzing sensor data from equipment, supervised
    learning algorithms can predict when a machine is likely to fail, allowing for
    proactive maintenance and minimizing downtime'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Quality control**: By analyzing product data and identifying patterns, supervised
    learning can help detect defects or anomalies in the manufacturing process, ensuring
    higher product quality and reducing waste'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are just a few examples of how supervised learning is being applied across
    a few major industries to drive business value.
  prefs: []
  type: TYPE_NORMAL
- en: Think about potential use cases for supervised machine learning within the industries
    you are interested in. Are there existing, common use cases for supervised machine
    learning that other companies in your industry have successfully applied?
  prefs: []
  type: TYPE_NORMAL
- en: When evaluating potential use cases within your organization, it’s important
    to have a clear understanding of the expected benefits and costs associated with
    implementation. With a well-defined value proposition, supervised learning can
    help transform various aspects of these industries and contribute to successful
    outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: '**Source:** [https://www.qualifai.co.uk/post/ai-use-cases-in-consumer-goods-retail](https://www.qualifai.co.uk/post/ai-use-cases-in-consumer-goods-retail)'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we’ve explored the applications of supervised learning in various
    industries, walked through the steps involved in supervised learning, discussed
    important considerations, and touched on different algorithms and evaluation metrics.
  prefs: []
  type: TYPE_NORMAL
- en: With this knowledge, you’re now equipped to harness the power of supervised
    learning in your business.
  prefs: []
  type: TYPE_NORMAL
- en: But remember, the journey doesn’t end here. In the next chapter, we’ll delve
    into unsupervised learning – another exciting domain of machine learning.
  prefs: []
  type: TYPE_NORMAL
