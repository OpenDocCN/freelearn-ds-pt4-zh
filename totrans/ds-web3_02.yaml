- en: '2'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Working with On-Chain Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [*Chapter 1*](B19446_01.xhtml#_idTextAnchor020), we learned about the fundamental
    concepts of a blockchain. We discovered that a blockchain is a distributed ledger
    composed of a chain of blocks, where each block is cryptographically linked to
    the previous one. Each block contains transaction information and the hash of
    the preceding block. Additionally, transactions can modify state data in **Ethereum
    Virtual Machine** (**EVM**)-based chains.
  prefs: []
  type: TYPE_NORMAL
- en: 'On-chain data represents the trace left by each transaction within the blockchain.
    It is stored as byte data, which requires parsing in order to become human-readable.
    To illustrate this follows a fragment of the Bitcoin genesis block in its raw
    format, sourced from [https://wiki.bitcoinsv.io/index.php/Genesis_block](https://wiki.bitcoinsv.io/index.php/Genesis_block)
    (license: CC BY 3.0):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This data can be parsed and enriched by providing additional information:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: pip install requests
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: web3.eth.getTransactionCount(address)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: web3.eth.get_transaction(transaction).nonce
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: web3.eth.get_transaction(transaction).gasPrice
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: web3.eth.get_transaction(transaction).gas
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: web3.eth.get_transaction(transaction).to
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: web3.eth.get_transaction(transaction).from
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: value= web3.eth.get_transaction(transaction).value
  prefs: []
  type: TYPE_NORMAL
- en: value*10**-18
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: web3.eth.get_transaction(transaction).input
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: web3.eth.getTransactionReceipt (transaction).gasUsed
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: web3.eth.getBlock(block_identifier=15813288).transactions
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: baContract.all_functions()
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: baContract.functions.ownerOf(6633).call()
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: baContract.functions.ownerOf(6633).call(block_identifier=14044021)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
