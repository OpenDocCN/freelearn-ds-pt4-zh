["```py\nfrom ens import ENS\n```", "```py\nSELECT count (distinct (\"topic3\")) as total_nfts\nFROM ethereum.logs\nWHERE \"contract_address\" = 0x7f36182dee28c45de6072a34d29855bae76dbe2f\nAND \"topic0\" = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\nAND \"topic1\" = 0x0000000000000000000000000000000000000000000000000000000000000000\n```", "```py\nWITH cte as (\nselect address, nftid, sum (indicator) as indicator\nfrom\n      (select \"topic1\" as address, \"topic3\" as nftid, -1 as indicator\n        from ethereum.logs\n        where \"contract_address\" = 0x7f36182dee28c45de6072a34d29855bae76dbe2f\n        AND \"topic0\" = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        union all\n        select \"topic2\" as address, \"topic3\" as nftid, 1 as indicator\n        from ethereum.logs\n        where \"contract_address\" = 0x7f36182dee28c45de6072a34d29855bae76dbe2f\n        AND \"topic0\" = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef)\n    GROUP BY address, nftid\n    HAVING SUM(indicator) > 0)\nselect address, sum (indicator) as total_holdings\nfrom cte\ngroup by address\norder by total_holdings DESC\nlimit 10\n```", "```py\ncontract.functions.balanceOf(address).call()\n```", "```py\nfrom ens import ENS\nns = ENS.fromWeb3(web3)\nns.owner(\"COMPLETE WITH THE ENS OF CHOICE\")\n```", "```py\nethregContract.functions.balanceOf(owner_address).call()\n```", "```py\nbaContract.functions.ownerOf(6633).call())\n```", "```py\nselect count (distinct (tx_hash)) as transactions,\n       sum (platform_fee_amount_usd) as platform_fee,\n       sum (royalty_fee_amount_usd) as authors_royalty,\n       sum(royalty_fee_amount) as total_royalties\nfrom nft.fees\nwhere blockchain='ethereum'\nand nft_contract_address= '0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d'\nand project = 'opensea'\n```", "```py\nselect count (distinct (\"tx_hash\")) as transactions,\n       sum (\"original_amount\")*0.025 as platform_fee\nfrom nft.trades\nwhere nft_contract_address= 0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d\nand platform = 'OpenSea'\n```", "```py\nwith cte1 as (select min (\"amount_original\") as min_price,\n        \"project\" as platform, ----platform\n        \"block_time\"\nfrom nft.trades\nwhere nft_contract_address= 0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d\nand block_time > timestamp '2022-01-31 00:00:00'\nand block_time < timestamp '2023-01-31 00:00:00'\nand blockchain= 'ethereum'\nand project in ('looksrare','opensea')\ngroup by project, block_time)\nselect approx_percentile(min_price, 0.5) as floor_price , platform  ------  avg (min_price)\nfrom cte1\ngroup by platform\n```", "```py\nwith is_wash as (select count (distinct tx_hash) as wash_trades, nft_contract_address\nfrom nft.wash_trades\nwhere is_wash_trade = true\nand nft_contract_address= 0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\ngroup by nft_contract_address),\ntotal_tx as (\nselect count (distinct tx_hash) as wash_trades_total, nft_contract_address\nfrom nft.wash_trades\nwhere nft_contract_address=0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\ngroup by nft_contract_address)\nselect wash_trades, wash_trades_total, (CAST(wash_trades AS double) / CAST(wash_trades_total AS double))*100 as wash_trading_percentage\nfrom total_tx t\nleft join is_wash i\non t.nft_contract_address=i.nft_contract_address\n```"]