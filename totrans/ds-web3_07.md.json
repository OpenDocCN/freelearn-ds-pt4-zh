["```py\npip install scikit-learn\n```", "```py\npip install tensorflow\npip install keras\n```", "```py\nrandom_forest = RandomForestClassifier(random_state=42)\n```", "```py\nX_train, X_test, y_train, y_test = train_test_split(X, y,\\\n    test_size=0.33, random_state=42)\n```", "```py\nrandom_forest.fit(X_train, y_train)\n```", "```py\ny_test_pred = random_forest.predict(X_test)\nprint(classification_report(y_test_pred,y_test))\nconf_mat=confusion_matrix(y_test_pred,y_test)\n```", "```py\nmodel.add(Input(shape=(X_train.shape[1],)))\n```", "```py\nmodel.add(Dense(30, activation='relu'))\nmodel.add(Dense(10, activation='relu'))\nmodel.add(Dense(5, activation='relu'))\nmodel.add(Dense(1, activation='sigmoid'))\n```", "```py\nmodel.add(Dense(1, activation='sigmoid'))\n```", "```py\nmetrics = [\n    keras.metrics.Precision(name=\"precision\"),\\\n    keras.metrics.Recall(name=\"recall\"),\n]\n```", "```py\nmodel.compile(optimizer=keras.optimizers.Adam(1e-2), \\\n    loss=loss_function, metrics=metrics)\n```"]