["```py\nvar1 = 8\nvar2 = 160.88\nvar1 + var2\n```", "```py\nvar3 = 'Hello, '\nvar4 = 'World'\n```", "```py\nprint(var3)\nprint(var4)\n```", "```py\nprint(f\"Text: {var3} {var4}!\")\n```", "```py\nvar3 + var4\n```", "```py\nvar5 = ['I', 'love', 'data', 'science']\nprint(var5)\n```", "```py\nvar6 = ['Packt', 15019, 2020, 'Data Science']\nprint(var6)\n```", "```py\nprint(var6[0])\nprint(var6[2])\n```", "```py\nprint(var6[0:3])\n```", "```py\nfor item in var6:\n    print(item)\n```", "```py\nvar6.append('Python')\nprint(var6)\n```", "```py\nvar6.remove(15019)\nprint(var6)\n```", "```py\nvar7 = {'Topic': 'Data Science', 'Language': 'Python'}\nprint(var7)\n```", "```py\nvar7['Language']\n```", "```py\nvar7.keys()\n```", "```py\nvar7.values()\n```", "```py\nfor key, value in var7.items():\n    print(key)\n    print(value)\n```", "```py\nvar7['Publisher'] = 'Packt'\nprint(var7)\n```", "```py\ndel var7['Publisher']\nprint(var7)\n```", "```py\n    algorithm = ['Linear Regression', 'Logistic Regression', \\\n                 'RandomForest', 'a3c']\n    \\ ) to split the logic across multiple lines. When the code is executed, Python will ignore the backslash, and treat the code on the next line as a direct continuation of the current line.\n    ```", "```py\n    learning = ['Supervised', 'Supervised', 'Supervised', \\\n                'Reinforcement']\n    ```", "```py\n    algorithm_type = ['Regression', 'Classification', \\\n                      'Regression or Classification', 'Game AI']\n    ```", "```py\n    algorithm.append('k-means')\n    ```", "```py\n    print(algorithm)\n    ```", "```py\n    learning.append('Unsupervised')\n    ```", "```py\n    print(learning)\n    ```", "```py\n    algorithm_type.append('Clustering')\n    ```", "```py\n    print(algorithm_type)\n    ```", "```py\n    machine_learning = {}\n    ```", "```py\n    machine_learning['algorithm'] = algorithm\n    ```", "```py\n    print(machine_learning)\n    ```", "```py\n    machine_learning['learning'] = learning\n    ```", "```py\n    machine_learning['algorithm_type'] = algorithm_type\n    ```", "```py\n    print(machine_learning)\n    ```", "```py\n    machine_learning['algorithm'].remove('a3c')\n    ```", "```py\n    print(machine_learning['algorithm'])\n    ```", "```py\n    machine_learning['learning'].remove('Reinforcement')\n    ```", "```py\n    machine_learning['algorithm_type'].remove('Game AI')\n    ```", "```py\n    print(machine_learning)\n    ```", "```py\nalgorithm,learning,type\nLinear Regression,Supervised,Regression\nLogistic Regression,Supervised,Classification\nRandomForest,Supervised,Regression or Classification\nk-means,Unsupervised,Clustering\n```", "```py\nimport pandas as pd\n```", "```py\npd.read_csv('https://raw.githubusercontent.com/PacktWorkshops'\\\n            '/The-Data-Science-Workshop/master/Chapter01/'\\\n            'Dataset/csv_example.csv')\n```", "```py\npd.read_excel('https://github.com/PacktWorkshops'\\\n              '/The-Data-Science-Workshop/blob/master'\\\n              '/Chapter01/Dataset/excel_example.xlsx?raw=true')\n```", "```py\n{\n  \"algorithm\":{\n     \"0\":\"Linear Regression\",\n     \"1\":\"Logistic Regression\",\n     \"2\":\"RandomForest\",\n     \"3\":\"k-means\"\n  },\n  \"learning\":{\n     \"0\":\"Supervised\",\n     \"1\":\"Supervised\",\n     \"2\":\"Supervised\",\n     \"3\":\"Unsupervised\"\n  },\n  \"type\":{\n     \"0\":\"Regression\",\n     \"1\":\"Classification\",\n     \"2\":\"Regression or Classification\",\n     \"3\":\"Clustering\"\n  }\n}\n```", "```py\npd.read_json('https://raw.githubusercontent.com/PacktWorkshops'\\\n             '/The-Data-Science-Workshop/master/Chapter01'\\\n             '/Dataset/json_example.json')\n```", "```py\n    import pandas as pd\n    ```", "```py\n    csv_url = 'https://raw.githubusercontent.com/PacktWorkshops'\\\n              '/The-Data-Science-Workshop/master/Chapter01'\\\n              '/Dataset/overall_topten_2012-2013.csv'\n    ```", "```py\n    csv_df = pd.read_csv(csv_url, skiprows=1)\n    csv_df\n    ```", "```py\n    tsv_url = 'https://raw.githubusercontent.com/PacktWorkshops'\\\n              '/The-Data-Science-Workshop/master/Chapter01'\\\n              '/Dataset/overall_topten_2012-2013.tsv'\n    ```", "```py\n    tsv_df = pd.read_csv(tsv_url, skiprows=1, sep='\\t')\n    tsv_df\n    ```", "```py\n    xlsx_url = 'https://github.com/PacktWorkshops'\\\n               '/The-Data-Science-Workshop/blob/master/'\\\n               'Chapter01/Dataset'\\\n               '/overall_topten_2012-2013.xlsx?raw=true'\n    ```", "```py\n    xlsx_df = pd.read_excel(xlsx_url)\n    xlsx_df\n    ```", "```py\n    xlsx_df1 = pd.read_excel(xlsx_url, skiprows=1, sheet_name=1)\n    xlsx_df1\n    ```", "```py\nfrom sklearn.ensemble import RandomForestClassifier\n```", "```py\nrf_model = RandomForestClassifier(random_state=1)\n```", "```py\nfrom sklearn.datasets import load_wine\nfeatures, target = load_wine(return_X_y=True)\n```", "```py\nrf_model.fit(features, target)\n```", "```py\npreds = rf_model.predict(features)\npreds\n```", "```py\nfrom sklearn.metrics import accuracy_score\naccuracy_score(target, preds)\n```", "```py\n    from sklearn.datasets import load_breast_cancer\n    ```", "```py\n    features, target = load_breast_cancer(return_X_y=True)\n    ```", "```py\n    print(features)\n    ```", "```py\n    print(target)\n    ```", "```py\n    from sklearn.ensemble import RandomForestClassifier\n    ```", "```py\n    seed = 888\n    ```", "```py\n    rf_model = RandomForestClassifier(random_state=seed)\n    ```", "```py\n    rf_model.fit(features, target)\n    ```", "```py\n    preds = rf_model.predict(features)\n    ```", "```py\n    print(preds)\n    ```", "```py\n    from sklearn.metrics import accuracy_score\n    ```", "```py\n    accuracy_score(target, preds)\n    ```"]