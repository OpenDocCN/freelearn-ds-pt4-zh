["```py\nimport pandas as pd\nfile_url = 'https://raw.githubusercontent.com/PacktWorkshops'\\\n           '/The-Data-Science-Workshop/master/Chapter04/'\\\n           'Dataset/activity.csv'\ndf = pd.read_csv(file_url)\ndf.head()\n```", "```py\ntarget = df.pop('Activity')\n```", "```py\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split\\\n                                   (df, target, test_size=0.33, \\\n                                    random_state=42)\n```", "```py\nfrom sklearn.ensemble import RandomForestClassifier\n```", "```py\nrf_model = RandomForestClassifier(random_state=1, \\\n                                  n_estimators=10)\n```", "```py\nrf_model.fit(X_train, y_train)\n```", "```py\npreds = rf_model.predict(X_train)\n```", "```py\npreds\n```", "```py\nfrom sklearn.metrics import accuracy_score\n```", "```py\naccuracy_score(y_train, preds)\n```", "```py\ntest_preds = rf_model.predict(X_test)\naccuracy_score(y_test, test_preds)\n```", "```py\n    import pandas as pd\n    ```", "```py\n    file_url = 'https://raw.githubusercontent.com'\\\n               '/PacktWorkshops/The-Data-Science-Workshop'\\\n               '/master/Chapter04/Dataset'\\\n               '/openml_phpZNNasq.csv'\n    ```", "```py\n    df = pd.read_csv(file_url)\n    ```", "```py\n    df.head()\n    ```", "```py\n    df.drop(columns='animal', inplace=True)\n    ```", "```py\n    y = df.pop('type')\n    ```", "```py\n    df.head()\n    ```", "```py\n    from sklearn.model_selection import train_test_split\n    ```", "```py\n    X_train, X_test, y_train, y_test = train_test_split\\\n                                       (df, y, test_size=0.4, \\\n                                        random_state=188)\n    ```", "```py\n    from sklearn.ensemble import RandomForestClassifier\n    ```", "```py\n    rf_model = RandomForestClassifier(random_state=42, \\\n                                      n_estimators=10)\n    ```", "```py\n    rf_model.fit(X_train, y_train)\n    ```", "```py\n    train_preds = rf_model.predict(X_train)\n    train_preds\n    ```", "```py\n    from sklearn.metrics import accuracy_score\n    ```", "```py\n    train_acc = accuracy_score(y_train, train_preds)\n    print(train_acc)\n    ```", "```py\n    test_preds = rf_model.predict(X_test)\n    ```", "```py\n    test_acc = accuracy_score(y_test, test_preds)\n    print(test_acc)\n    ```", "```py\nrf_model2 = RandomForestClassifier(random_state=1, \\\n                                   n_estimators=2)\nrf_model2.fit(X_train, y_train)\npreds2 = rf_model2.predict(X_train)\ntest_preds2 = rf_model2.predict(X_test)\nprint(accuracy_score(y_train, preds2))\nprint(accuracy_score(y_test, test_preds2))\n```", "```py\nrf_model3 = RandomForestClassifier(random_state=1, \\\n                                   n_estimators=50)\nrf_model3.fit(X_train, y_train)\npreds3 = rf_model3.predict(X_train)\ntest_preds3 = rf_model3.predict(X_test)\nprint(accuracy_score(y_train, preds3))\nprint(accuracy_score(y_test, test_preds3))\n```", "```py\n    import pandas as pd\n    from sklearn.model_selection import train_test_split\n    from sklearn.ensemble import RandomForestClassifier\n    from sklearn.metrics import accuracy_score\n    ```", "```py\n    file_url = 'https://raw.githubusercontent.com'\\\n               '/PacktWorkshops/The-Data-Science-Workshop'\\\n               '/master/Chapter04/Dataset'\\\n               '/openml_phpZNNasq.csv'\n    ```", "```py\n    df = pd.read_csv(file_url)\n    ```", "```py\n    df.drop(columns='animal', inplace=True)\n    y = df.pop('type')\n    ```", "```py\n    X_train, X_test, y_train, y_test = train_test_split\\\n                                       (df, y, test_size=0.4, \\\n                                        random_state=188)\n    ```", "```py\n    rf_model = RandomForestClassifier(random_state=42, \\\n                                      n_estimators=1)\n    rf_model.fit(X_train, y_train)\n    ```", "```py\n    train_preds = rf_model.predict(X_train)\n    test_preds = rf_model.predict(X_test)\n    ```", "```py\n    train_acc = accuracy_score(y_train, train_preds)\n    test_acc = accuracy_score(y_test, test_preds)\n    ```", "```py\n    print(train_acc)\n    print(test_acc)\n    ```", "```py\n    rf_model2 = RandomForestClassifier(random_state=42, \\\n                                       n_estimators=30)\n    rf_model2.fit(X_train, y_train)\n    ```", "```py\n    train_preds2 = rf_model2.predict(X_train)\n    test_preds2 = rf_model2.predict(X_test)\n    ```", "```py\n    train_acc2 = accuracy_score(y_train, train_preds2)\n    test_acc2 = accuracy_score(y_test, test_preds2)\n    ```", "```py\n    print(train_acc2)\n    print(test_acc2)\n    ```", "```py\nrf_model4 = RandomForestClassifier(random_state=1, \\\n                                   n_estimators=50, max_depth=3)\nrf_model4.fit(X_train, y_train)\npreds4 = rf_model4.predict(X_train)\ntest_preds4 = rf_model4.predict(X_test)\nprint(accuracy_score(y_train, preds4))\nprint(accuracy_score(y_test, test_preds4))\n```", "```py\nrf_model5 = RandomForestClassifier(random_state=1, \\\n                                   n_estimators=50, \\\n                                   max_depth=10)\nrf_model5.fit(X_train, y_train)\npreds5 = rf_model5.predict(X_train)\ntest_preds5 = rf_model5.predict(X_test)\nprint(accuracy_score(y_train, preds5))\nprint(accuracy_score(y_test, test_preds5))\n```", "```py\nrf_model6 = RandomForestClassifier(random_state=1, \\\n                                   n_estimators=50, \\\n                                   max_depth=50)\nrf_model6.fit(X_train, y_train)\npreds6 = rf_model6.predict(X_train)\ntest_preds6 = rf_model6.predict(X_test)\nprint(accuracy_score(y_train, preds6))\nprint(accuracy_score(y_test, test_preds6))\n```", "```py\n    import pandas as pd\n    from sklearn.model_selection import train_test_split\n    from sklearn.ensemble import RandomForestClassifier\n    from sklearn.metrics import accuracy_score\n    ```", "```py\n    file_url = 'https://raw.githubusercontent.com'\\\n               'PacktWorkshops/The-Data-Science-Workshop'\\\n               '/master/Chapter04/Dataset'\\\n               '/openml_phpZNNasq.csv'\n    ```", "```py\n    df = pd.read_csv(file_url)\n    ```", "```py\n    df.drop(columns='animal', inplace=True)\n    y = df.pop('type')\n    ```", "```py\n    X_train, X_test, y_train, y_test = train_test_split\\\n                                       (df, y, test_size=0.4, \\\n                                        random_state=188)\n    ```", "```py\n    rf_model = RandomForestClassifier(random_state=42, \\\n                                      n_estimators=30, \\\n                                      max_depth=5)\n    rf_model.fit(X_train, y_train)\n    ```", "```py\n    train_preds = rf_model.predict(X_train)\n    test_preds = rf_model.predict(X_test)\n    ```", "```py\n    train_acc = accuracy_score(y_train, train_preds)\n    test_acc = accuracy_score(y_test, test_preds)\n    ```", "```py\n    print(train_acc)\n    print(test_acc)\n    ```", "```py\n    rf_model2 = RandomForestClassifier(random_state=42, \\\n                                       n_estimators=30, \\\n                                       max_depth=2)\n    rf_model2.fit(X_train, y_train)\n    ```", "```py\n    train_preds2 = rf_model2.predict(X_train)\n    test_preds2 = rf_model2.predict(X_test)\n    ```", "```py\n    train_acc2 = accuracy_score(y_train, train_preds2)\n    test_acc2 = accuracy_score(y_test, test_preds2)\n    ```", "```py\n    print(train_acc2)\n    print(test_acc2)\n    ```", "```py\nrf_model7 = RandomForestClassifier(random_state=1, \\\n                                   n_estimators=50, \\\n                                   max_depth=10, \\\n                                   min_samples_leaf=3)\nrf_model7.fit(X_train, y_train)\npreds7 = rf_model7.predict(X_train)\ntest_preds7 = rf_model7.predict(X_test)\nprint(accuracy_score(y_train, preds7))\nprint(accuracy_score(y_test, test_preds7))\n```", "```py\nrf_model8 = RandomForestClassifier(random_state=1, \\\n                                   n_estimators=50, \\\n                                   max_depth=10, \\\n                                   min_samples_leaf=10)\nrf_model8.fit(X_train, y_train)\npreds8 = rf_model8.predict(X_train)\ntest_preds8 = rf_model8.predict(X_test)\nprint(accuracy_score(y_train, preds8))\nprint(accuracy_score(y_test, test_preds8))\n```", "```py\nrf_model9 = RandomForestClassifier(random_state=1, \\\n                                   n_estimators=50, \\\n                                   max_depth=10, \\\n                                   min_samples_leaf=25)\nrf_model9.fit(X_train, y_train)\npreds9 = rf_model9.predict(X_train)\ntest_preds9 = rf_model9.predict(X_test)\nprint(accuracy_score(y_train, preds9))\nprint(accuracy_score(y_test, test_preds9))\n```", "```py\n    import pandas as pd\n    from sklearn.model_selection import train_test_split\n    from sklearn.ensemble import RandomForestClassifier\n    from sklearn.metrics import accuracy_score\n    ```", "```py\n    file_url = 'https://raw.githubusercontent.com'\\\n               '/PacktWorkshops/The-Data-Science-Workshop'\\\n               '/master/Chapter04/Dataset/openml_phpZNNasq.csv'\n    ```", "```py\n    df = pd.read_csv(file_url)\n    ```", "```py\n    df.drop(columns='animal', inplace=True)\n    y = df.pop('type')\n    ```", "```py\n    X_train, X_test, \\\n    y_train, y_test = train_test_split(df, y, test_size=0.4, \\\n                                       random_state=188)\n    ```", "```py\n    rf_model = RandomForestClassifier(random_state=42, \\\n                                      n_estimators=30, \\\n                                      max_depth=2, \\\n                                      min_samples_leaf=3)\n    rf_model.fit(X_train, y_train)\n    ```", "```py\n    train_preds = rf_model.predict(X_train)\n    test_preds = rf_model.predict(X_test)\n    ```", "```py\n    train_acc = accuracy_score(y_train, train_preds)\n    test_acc = accuracy_score(y_test, test_preds)\n    ```", "```py\n    print(train_acc)\n    print(test_acc)\n    ```", "```py\n    rf_model2 = RandomForestClassifier(random_state=42, \\\n                                       n_estimators=30, \\\n                                       max_depth=2, \\\n                                       min_samples_leaf=7)\n    rf_model2.fit(X_train, y_train)\n    ```", "```py\n    train_preds2 = rf_model2.predict(X_train)\n    test_preds2 = rf_model2.predict(X_test)\n    ```", "```py\n    train_acc2 = accuracy_score(y_train, train_preds2)\n    test_acc2 = accuracy_score(y_test, test_preds2)\n    ```", "```py\n    print(train_acc2)\n    print(test_acc2)\n    ```", "```py\nrf_model10 = RandomForestClassifier(random_state=1, \\\n                                    n_estimators=50, \\\n                                    max_depth=10, \\\n                                    min_samples_leaf=25, \\\n                                    max_features=2)\nrf_model10.fit(X_train, y_train)\npreds10 = rf_model10.predict(X_train)\ntest_preds10 = rf_model10.predict(X_test)\nprint(accuracy_score(y_train, preds10))\nprint(accuracy_score(y_test, test_preds10))\n```", "```py\nrf_model11 = RandomForestClassifier(random_state=1, \\\n                                    n_estimators=50, \\\n                                    max_depth=10, \\\n                                    min_samples_leaf=25, \\\n                                    max_features=0.7)\nrf_model11.fit(X_train, y_train)\npreds11 = rf_model11.predict(X_train)\ntest_preds11 = rf_model11.predict(X_test)\nprint(accuracy_score(y_train, preds11))\nprint(accuracy_score(y_test, test_preds11))\n```", "```py\nrf_model12 = RandomForestClassifier(random_state=1, \\\n                                    n_estimators=50, \\\n                                    max_depth=10, \\\n                                    min_samples_leaf=25, \\\n                                    max_features='log2')\nrf_model12.fit(X_train, y_train)\npreds12 = rf_model12.predict(X_train)\ntest_preds12 = rf_model12.predict(X_test)\nprint(accuracy_score(y_train, preds12))\nprint(accuracy_score(y_test, test_preds12))\n```", "```py\n    import pandas as pd\n    from sklearn.model_selection import train_test_split\n    from sklearn.ensemble import RandomForestClassifier\n    from sklearn.metrics import accuracy_score\n    ```", "```py\n    file_url = 'https://raw.githubusercontent.com'\\\n               '/PacktWorkshops/The-Data-Science-Workshop'\\\n               '/master/Chapter04/Dataset/openml_phpZNNasq.csv'\n    ```", "```py\n    df = pd.read_csv(file_url)\n    ```", "```py\n    df.drop(columns='animal', inplace=True)\n    y = df.pop('type')\n    ```", "```py\n    X_train, X_test, \\\n    y_train, y_test = train_test_split(df, y, test_size=0.4, \\\n                                       random_state=188)\n    ```", "```py\n    rf_model = RandomForestClassifier(random_state=42, \\\n                                      n_estimators=30, \\\n                                      max_depth=2, \\\n                                      min_samples_leaf=7, \\\n                                      max_features=10)\n    rf_model.fit(X_train, y_train)\n    ```", "```py\n    train_preds = rf_model.predict(X_train)\n    test_preds = rf_model.predict(X_test)\n    ```", "```py\n    train_acc = accuracy_score(y_train, train_preds)\n    test_acc = accuracy_score(y_test, test_preds)\n    ```", "```py\n    print(train_acc)\n    print(test_acc)\n    ```", "```py\n    rf_model2 = RandomForestClassifier(random_state=42, \\\n                                       n_estimators=30, \\\n                                       max_depth=2, \\\n                                       min_samples_leaf=7, \\\n                                       max_features=0.2)\n    rf_model2.fit(X_train, y_train)\n    ```", "```py\n    train_preds2 = rf_model2.predict(X_train)\n    test_preds2 = rf_model2.predict(X_test)\n    ```", "```py\n    train_acc2 = accuracy_score(y_train, train_preds2)\n    test_acc2 = accuracy_score(y_test, test_preds2)\n    ```", "```py\n    print(train_acc2)\n    print(test_acc2)\n    ```"]