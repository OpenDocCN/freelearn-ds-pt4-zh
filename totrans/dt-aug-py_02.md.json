["```py\n# load from official GitHub repo.\n!git clone https://github.com/PacktPublishing/Data-Augmentation-with-Python\n# optional step, sustitute duchaba with your GitHub space\n!git clone https://github.com/duchaba/Data-Augmentation-with-Python\n```", "```py\n# instantiate pluto\npluto_file='Data-Augmentation-with-Python/pluto/pluto_chapter_1.py'\n%run {pluto_file}\n```", "```py\n---------------------------- : ---------------------------\n            Hello from class : <class '__main__.PackTDataAug'> Class: PackTDataAug\n                   Code name : Pluto\n                   Author is : Duc Haba\n---------------------------- : ---------------------------\n```", "```py\n# Are you ready to play?\npluto.say_sys_info()\n```", "```py\n---------------------------- : ----------------------------\n                 System time : 2022/08/16 06:26\n                    Platform : linux\n       Python version (3.7+) : 3.7.13 (default, Apr 24 2022, 01:04:09) [GCC 7.5.0]\n     Pluto Version (Chapter) : 1.0\n            PyTorch (1.11.0) : actual: 1.12.1+cu113\n              Pandas (1.3.5) : actual: 1.3.5\n                 PIL (9.0.0) : actual: 7.1.2\n          Matplotlib (3.2.2) : actual: 3.2.2\n                   CPU count : 2\n                  CPU speed : NOT available\n---------------------------- : ----------------------------\n```", "```py\n# install opendatasets library\n!pip install opendatasets --upgrade\nimport opendatasets\n```", "```py\n# method definition\ndef remember_kaggle_access_keys(self,username,key):\n```", "```py\n# save Kaggle username and key\npluto.remember_kaggle_access_keys(\"your_username_here\",\n  \"your_key_here\")\n```", "```py\n# code snippet for fetcing competition data\nkaggle.api.competition_download_cli(str(path))\n```", "```py\n# fetching real-world dataset for the Kaggle website\nopendatasets.download(url,data_dir=dest)\n```", "```py\n# fetch real-world data\npluto.fetch_kaggle_comp_data(\n  \"state-farm-distracted-driver-detection\")\n```", "```py\nfetch_kaggle_dataset(url)\n```", "```py\n# example of correct syntax\npluto.fetch_kaggle_dataset(url)\n```", "```py\n# read the image file\nf = 'state-farm-distracted-driver-detection/imgs/train/c0/img_100026.jpg'\nimg = PIL.Image.open(f)\n# display image using Python Notebook build-in command\ndisplay(img)\n```", "```py\n# code snippet to import into Pandas\ndf = pandas.read_csv(csv)\n```", "```py\n# fetch data\npluto.df_sf_data = pluto.fetch_df('state-farm-distracted-driver-detection/driver_imgs_list.csv')\n# display last three records\npluto.df_sf_data.tail(3)\n```", "```py\n# code snippet to create full image path\nroot = 'state-farm-distracted-driver-detection/imgs/train/'\ndf[\"fname\"] = f'{root}/{df.classname}/{df.img}\n```", "```py\n#create new fname column\npluto.build_sf_fname(pluto.df_sf_data)\npluto.df_sf_data.head(3)\n```", "```py\n# display the image\nimg = PIL.Image.open(pluto.df_sf_data.fname[0])\ndisplay(img)\n```", "```py\n# function definition\ndef draw_batch(self, df_filenames,\n  disp_max=10,\n  is_shuffle=False,\n  figsize=(16,8)):\n```", "```py\n# display image batch\nx = pluto.draw_batch(pluto.df_sf_data[\"fname\"],\n  is_shuffle=True)\n```", "```py\n# display image batch\nx = pluto.draw_batch(pluto.df_sf_data[\"fname\"],\n  is_shuffle=True,\n  disp_max=20,\n  figsize=(18,14))\n```", "```py\n# code snippet for generating meta data\nfor root, dirs, files in os.walk(start_path, topdown=False):\n   for name in files:\n```", "```py\n# 1\\. fetch data\nfname='https://www.kaggle.com/datasets/die9origephit/nike-adidas-and-converse-imaged'\npluto.fetch_kaggle_dataset(fname)\n# 2\\. import meta data to Pandas\npluto.df_shoe_data = pluto.build_shoe_fname(\n  'kaggle/nike-adidas-and-converse-imaged/train')\n# 3\\. display image batch\nx = pluto.draw_batch(pluto.df_shoe_data[\"fname\"],\n  is_shuffle=True,\n  disp_max=20,\n  figsize=(18,14))\n```", "```py\n# remove white space from file and directory name\nf2 = 'kaggle/grapevine-leaves-image-dataset/Grapevine_Leaves_Image_Dataset'\n!find {f2} -name \"* *\" -type f | rename 's/ /_/g'\n```", "```py\n# fetch data\nfname=' https://www.kaggle.com/datasets/muratkokludataset/grapevine-leaves-image-dataset'\npluto.fetch_kaggle_dataset(fname)\n# import to Pandas\npluto.df_grapevine_data=pluto.fetch_df(\"kaggle/grapevine-leaves-image-dataset/Grapevine_Leaves_Image_Dataset\")\n# display image batch\nx = pluto.draw_batch(pluto.df_grapevine_data[\"fname\"],\n  is_shuffle=True,\n  disp_max=20,\n  figsize=(18,14))\n```", "```py\n# fectch real-world dataset\nfname='https://www.kaggle.com/datasets/infamouscoder/dataset-Netflix-shows'\npluto.fetch_kaggle_dataset(fname)\n```", "```py\n# import metadata into Pandas\npluto.df_netflix_data = pluto.fetch_df(\n  'kaggle/dataset-Netflix-shows/Netflix_titles.csv')\npluto.df_netflix_data[['show_id',\n  'type', 'title', 'director', 'cast']].head(3)\n```", "```py\n# define wrapper function\ndef print_batch_text(self, df_orig,\n  disp_max=10,\n  cols= [\"title\", \"description\"]):\n  df = df_orig[cols]\n  with pandas.option_context(\"display.max_colwidth\", None):\n    display(df.sample(disp_max))\n  return\n```", "```py\n# print text batch\npluto.print_batch_text(pluto.df_netflix_data)\n```", "```py\n# attempt at fairness matrix, count words\ndef count_word(self, df, col_dest=\"description\"):\n  df['wordc'] = df[col_dest].apply(lambda x: len(x.split()))\n  return\n```", "```py\n# count words and dislay result\npluto.count_word(pluto.df_netflix_data)\npluto.print_batch_text(pluto.df_netflix_data,\n  cols=['description','wordc'])\n```", "```py\n# code snippet for draw word count\ndf.boxplot(ax=pic[0],\n  column=[wc],\n  vert=False,\n  color=\"black\")\ndf[wc].hist(ax=pic[1],\n  color=\"cornflowerblue\",\n  alpha=0.9)\n```", "```py\n# draw word count\npluto.draw_word_count(pluto.df_netflix_data)\n```", "```py\n# code snippet for check spelling\ndf[\"misspelled\"] = df[col_dest].apply(\n  lambda x: spell.unknown(self._strip_punc(x).split()))\ndf[\"misspelled_count\"] = df[\"misspelled\"].apply(\n  lambda x: len(x))\n```", "```py\n# check spelling\npluto.check_spelling(pluto.df_netflix_data)\n# print batch text withh correct spelling\npluto.print_batch_text(pluto.df_netflix_data,\n  cols=['description', 'misspelled'])\n```", "```py\n# draw word count\npluto.draw_word_count(pluto.df_netflix_data,\n  wc='misspelled_count')\n```", "```py\n# fetch data\npluto.fetch_kaggle_dataset(\n  'https://www.kaggle.com/datasets/tarkkaanko/amazon')\n# import to Pandas\npluto.df_amazon_data = pluto.fetch_df(\n  'kaggle/amazon/amazon_reviews.csv')\n# count words and misspell\npluto.count_word(pluto.df_amazon_data,\n  col_dest='reviewText')\npluto.check_spelling(pluto.df_amazon_data,\n  col_dest='reviewText')\n```", "```py\n# display misspelled words\npluto.print_batch_text(pluto.df_amazon_data,\n  cols=['reviewText','misspelled'])\n```", "```py\n# display word count\npluto.draw_word_count(pluto.df_amazon_data)\n# draw misspelled words\npluto.draw_word_count(pluto.df_amazon_data,\n  wc='misspelled_count')\n```"]