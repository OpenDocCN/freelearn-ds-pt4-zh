["```py\n# define synonym words, pseudo-code\nreserved = [['happy', 'joyful', 'cheerful'],\n  ['sad', 'sorrowful', 'regretful']]\n# substitute the word with its synonym, pseudo-code\nfor i, word in (input_text)\n  for set_word in (reserved)\n    for i, syn in set_word\n      if (syn == word)\n        input_text[i] = set_word[i+1]\n```", "```py\n# clone Packt GitHub repo.\n!git clone 'https://github.com/PacktPublishing/Data-Augmentation-with-Python'\n# Instantiate Pluto\n%run 'Data-Augmentation-with-Python/pluto/pluto_chapter_5.py'\n```", "```py\n---------------------------- : ----------------------------\n                        Hello from class : <class '__main__.PacktDataAug'> Class: PacktDataAug\n                                     Code name : Pluto\n                                     Author is : Duc Haba\n---------------------------- : ----------------------------\n```", "```py\n# Am I alive?\npluto.say_sys_info()\n```", "```py\n---------------------------- : ----------------------------\n                 System time : 2022/11/09 05:31\n                    Platform : linux\n     Pluto Version (Chapter) : 5.0\n             Python (3.7.10) : actual: 3.7.15 (default, Oct 12 2022, 19:14:55) [GCC 7.5.0]\n            PyTorch (1.11.0) : actual: 1.12.1+cu113\n              Pandas (1.3.5) : actual: 1.3.5\n                 PIL (9.0.0) : actual: 7.1.2\n          Matplotlib (3.2.2) : actual: 3.2.2\n                   CPU count : 12\n                  CPU speed : NOT available\n---------------------------- : ----------------------------\n```", "```py\n# check to see the files are there\nf = 'Data-Augmentation-with-Python/pluto_data'\n!ls -la {f}\n```", "```py\ndrwxr-xr-x 2 root root    4096 Nov 13 06:07 .\ndrwxr-xr-x 6 root root    4096 Nov 13 06:07 ..\n-rw-r--r-- 1 root root 3423079 Nov 13 06:07 netflix_data.csv\n-rw-r--r-- 1 root root 6072376 Nov 13 06:07 twitter_data.csv\n```", "```py\n# import to Pandas\nf = 'Data-Augmentation-with-Python/pluto_data/netflix_data.csv'\npluto.df_netflix_data = pluto.fetch_df(f,sep='~')\n```", "```py\n# import to Pandas\nf = 'Data-Augmentation-with-Python/pluto_data/twitter_data.csv'\npluto.df_twitter_data = pluto.fetch_df(f,sep='~')\n```", "```py\n# draw infographic plot\npluto.draw_text_wordcloud(pluto.df_netflix_data.description,\n  xignore_words=wordcloud.STOPWORDS,\n  title='Word Cloud: Netflix Movie Review')\n```", "```py\n# draw infographic plot\npluto.draw_text_wordcloud(pluto.df_twitter_data.clean_tweet,\n  xignore_words=wordcloud.STOPWORDS,\n  title='Word Cloud: Twitter Tweets')\n```", "```py\n# code snippet for print_aug_ai_word2vec()\nmodel_type = 'word2vec',\nmodel_path = 'GoogleNews-vectors-negative300.bin'\naction = 'insert'    # or 'substitute'\nnlpaug.augmenter.word.WordEmbsAug(model_type,\n  model_path,\n  action)\n```", "```py\n# augment using word2vec\npluto.print_aug_ai_word2vec(pluto.df_netflix_data,\n  col_dest='description',\n  action='insert',\n  aug_name='Word2Vec-GoogleNews Word Embedding Augment')\n```", "```py\n# augment using word2vec\npluto.print_aug_ai_word2vec(pluto.df_twitter_data,\n  col_dest='clean_tweet',\n  action='insert',\n  aug_name='Word2Vec-GoogleNews Word Embedding Augment')\n```", "```py\n# augmenting using word2vec\npluto.print_aug_ai_word2vec(pluto.df_netflix_data,\n  col_dest='description',\n  action='substitute',\n  aug_name='Word2Vec-GoogleNews Word Embedding Augment')\n```", "```py\n# augmenting using word2vec\npluto.print_aug_ai_word2vec(pluto.df_twitter_data,\n  col_dest='clean_tweet',\n  action='substitute',\n  aug_name='Word2Vec-GoogleNews Word Embedding Augment')\n```", "```py\n# code snippet for print_aug_id_bert()\nmodel_path='bert-base-uncased'\naug_func = nlpaug.augmenter.word.ContextualWordEmbsAug(\n  action=action,\n  model_path=model_path)\n```", "```py\n# Augmenting using BERT\npluto.print_aug_ai_bert(pluto.df_netflix_data,\n  col_dest='description',\n  action='insert',\n  aug_name='BERT Embedding Insert Augment')\n```", "```py\n# augmenting using BERT\npluto.print_aug_ai_bert(pluto.df_twitter_data,\n  col_dest='clean_tweet',\n  action='insert',\n  aug_name='BERT Embedding Insert Augment')\n```", "```py\n# augmenting using BERT\npluto.print_aug_ai_bert(pluto.df_netflix_data,\n  col_dest='description',\n  action='substitute',\n  aug_name='BERT Embedding Substitute Augment')\n```", "```py\n# augmenting using BERT\npluto.print_aug_ai_bert(pluto.df_twitter_data,\n  col_dest='clean_tweet',\n  action='substitute',\n  aug_name='BERT Embedding Substitute Augment')\n```", "```py\n# augmenting using Roberta\npluto.print_aug_ai_bert(pluto.df_netflix_data,\n  col_dest='description',\n  model_path='roberta-base',\n  action='insert',\n  aug_name='Roberta Embedding Insert Augment')\n```", "```py\n# augmenting using Roberta\npluto.print_aug_ai_bert(pluto.df_twitter_data,\n  col_dest='clean_tweet',\n  model_path='roberta-base',\n  action='insert',\n  aug_name='Roberta Embedding Insert Augment')\n```", "```py\n# augmenting using Roberta\npluto.print_aug_ai_bert(pluto.df_netflix_data,\n  col_dest='description',\n  model_path='roberta-base',\n  action='substitute',\n  aug_name='Roberta Embedding Substitute Augment')\n```", "```py\npluto.print_aug_ai_bert(pluto.df_twitter_data,\n  col_dest='clean_tweet',\n  model_path='roberta-base',\n  action='substitute',\n  aug_name='Roberta Embedding Substitute Augment')\n```", "```py\n# code snippet for back translation\nfrom_model_name='facebook/wmt19-en-de'\nto_model_name='facebook/wmt19-de-en'\naug_func = nlpaug.augmenter.word.BackTranslationAug(\n  from_model_name=from_model_name,\n  to_model_name=to_model_name)\n```", "```py\n# augmenting using back translation\npluto.print_aug_ai_back_translation(pluto.df_netflix_data,\n  col_dest='description',\n  from_model_name='facebook/wmt19-en-de',\n  to_model_name='facebook/wmt19-de-en',\n  aug_name='FaceBook Back Translation: English <-> German Augment')\n```", "```py\n# augmenting using back translation\npluto.print_aug_ai_back_translation(pluto.df_twitter_data,\n  col_dest='clean_tweet',\n  from_model_name='facebook/wmt19-en-de',\n  to_model_name='facebook/wmt19-de-en',\n  aug_name='FaceBook Back Translation: English <-> German Augment')\n```", "```py\n# code snippet for back translation to Russian\nfrom_model_name='facebook/wmt19-en-ru'\nto_model_name='facebook/wmt19-ru-en'\n```", "```py\n# augmenting using back translation\npluto.print_aug_ai_back_translation(pluto.df_netflix_data,\n  col_dest='description',\n  from_model_name='facebook/wmt19-en-ru',\n  to_model_name='facebook/wmt19-ru-en',\n  aug_name='FaceBook Back Translation: English <-> Russian Augment')\n```", "```py\n# augmenting using back translation\npluto.print_aug_ai_back_translation(pluto.df_twitter_data,\n  col_dest='clean_tweet',\n  from_model_name='facebook/wmt19-en-ru',\n  to_model_name='facebook/wmt19-ru-en',\n  aug_name='FaceBook Back Translation: English <-> Russian Augment')\n```", "```py\naug_func = nlpaug.augmenter.sentence.AbstSummAug(\n  model_path='t5-base')\n```", "```py\n# Alice in Wonderland\npluto.df_t5_carroll = pluto.print_aug_ai_t5(\n  pluto.orig_carroll_page,\n  bsize=1)\n# Tale of Two Cities\npluto.df_t5_dickens = pluto.print_aug_ai_t5(\n  pluto.orig_dickens_page,\n  bsize=1)\n# Moby Dick\npluto.df_t5_melville = pluto.print_aug_ai_t5(\n  pluto.orig_melville_page,\n  bsize=1)\n# This chapter first page\npluto.df_t5_self = pluto.print_aug_ai_t5(\n  pluto.orig_self,\n  bsize=1)\n```", "```py\n# augment using uloVe\npluto.ai_aug_glove = nlpaug.augmenter.word.WordEmbsAug(\n    model_type='glove', model_path='glove.6B.300d.txt',\n    action=\"substitute\")\n# augment using BERT\npluto.ai_aug_bert = nlpaug.augmenter.word.ContextualWordEmbsAug(\n  model_path='bert-base-uncased',\n  action='substitute',\n  top_k=20)\n```", "```py\n# augment using sequential\naug_func = nlpaug.flow.Sequential(\n  [self.ai_aug_bert, self.ai_aug_glove])\n```", "```py\n# Alice in Wonderland\npluto.print_aug_ai_sequential(pluto.df_t5_carroll)\n# Tale of Two Cities\npluto.print_aug_ai_sequential(pluto.df_t5_dickens)\n# Moby Dick\npluto.print_aug_ai_sequential(pluto.df_t5_melville)\n# This chapter\npluto.print_aug_ai_sequential(pluto.df_t5_self)\n```"]