- en: <st c="0">3</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="2">Rate of Growth for Complexity Analysis</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="40">In the domain of algorithm design and analysis, understanding the
    rate at which an algorithm’s running time increases with the size of the input
    data is paramount.</st> <st c="205">This concept, known as</st> <st c="227">the</st>
    **<st c="232">rate of growth</st>**<st c="246">, allows us to predict and compare
    the performance of various algorithms, ensuring that we select the most efficient
    solutions for our computational problems.</st> <st c="405">As input sizes expand,
    the efficiency of an algorithm becomes increasingly critical, particularly in
    fields such as data processing, machine learning, and artificial intelligence
    where large datasets are</st> <st c="609">the norm.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="618">The rate of growth is described using asymptotic notations, which
    provide a framework for categorizing algorithms based on their running time or
    space requirements relative to the size of the input.</st> <st c="818">These notations,
    including big O,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="normal">Ω</mml:mi></mml:math>](img/39.png)<st
    c="852"><st c="853">, and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="normal">Θ</mml:mi></mml:math>](img/6.png)<st
    c="859"><st c="860">, help us formalize the efficiency of algorithms by expressing
    their upper, lower, and tight bounds, respectively.</st> <st c="975">Through this
    formalism, we can better understand the scalability of algorithms and make informed
    decisions about their suitability for specific tasks</st> <st c="1125">and environments.</st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1142">In this chapter, we will explore the intricacies of these asymptotic
    notations, providing detailed explanations and practical examples to illustrate
    their application.</st> <st c="1311">We will explore common growth rates, such
    as constant, logarithmic, linear, log-linear, polynomial, exponential, and factorial,
    highlighting their implications for algorithm performance.</st> <st c="1498">By
    the end of this chapter, you will have a solid grasp of how to analyze and interpret
    the complexity of algorithms, equipping you with the knowledge to design more
    efficient and effective</st> <st c="1688">computational solutions.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1712">The following topics will be covered in</st> <st c="1753">this
    chapter:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1766">Unpacking the rate of growth</st> <st c="1796">in algorithms</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1809">Asymptotic notations</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1830">Confronting the unsolvable – non-deterministic polynomial time
    (</st><st c="1895">NP)-hard problems</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1913">Unpacking the rate of growth in algorithms</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="1956">Let’s revisit the</st> <st c="1974">initial discussion on the goal
    of studying algorithms.</st> <st c="2030">One of the primary objectives is to
    analyze algorithms to predict their behavior and performance.</st> <st c="2128">This
    analysis is crucial for two</st> <st c="2161">main reasons:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2174">To make informed</st> <st c="2192">design decisions</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="2208">To understand how to design efficient and</st> <st c="2251">low-cost
    algorithms</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="2270">The cost of an algorithm depends on many parameters throughout
    its life cycle.</st> <st c="2350">However, our focus here is on the cost of running
    an algorithm.</st> <st c="2414">While the costs associated with designing, maintaining,
    testing, and retiring an algorithm are also important, they fall outside the scope
    of our</st> <st c="2560">current discussion.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2579">The cost of running an algorithm, or its complexity, is generally
    measured or estimated in two dimensions:</st> *<st c="2687">time</st>* <st c="2691">and</st>
    *<st c="2696">space</st>*<st c="2701">.</st> **<st c="2703">Time complexity</st>**
    <st c="2718">refers</st> <st c="2725">to the duration needed to produce the expected
    output.</st> <st c="2781">This assumes that the algorithm will eventually terminate,
    although there are instances where algorithms may never terminate due to design
    flaws or other errors.</st> **<st c="2943">Space complexity</st>**<st c="2959">,
    on the other hand, refers to the memory required to run the</st> <st c="3021">algorithm.</st>
    <st c="3032">Both time and space complexities are crucial considerations due to
    the inherent limitations of our computational resources.</st> <st c="3156">If
    we hypothetically had access to instantaneous computing, allowing us to run any
    algorithm with any amount of data in constant time, and unlimited memory, the
    study of computational complexity would be unnecessary.</st> <st c="3373">However,
    given the current state of technology, these constraints make the study of computational
    complexity essential for designing</st> <st c="3506">efficient algorithms.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="3527">Both time and space complexities are measured as functions of the
    size of the input data, commonly represented by</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mfenced
    open="{" close="}" separators="|"><mml:mrow><mml:mn>0,1</mml:mn><mml:mo>,</mml:mo><mml:mn>2,3</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo></mml:mrow></mml:mfenced><mml:mo>.</mml:mo></mml:math>](img/41.png)
    <st c="3642"><st c="3643">This is straightforward because the goal of every algorithm
    is to produce an expected output by processing input data.</st> <st c="3763">Regardless
    of whether the input data is numerical, textual, images, or videos, we are interested
    in understanding how the complexity changes as the amount of input data increases.</st>
    <st c="3943">This concept is known as the rate of growth and is denoted by big
    O, which describes the upper bound or worst-case scenario of time complexity relative
    to the input size.</st> <st c="4114">The complexity of an algorithm, denoted by</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/42.png)<st
    c="4157"><st c="4169">, is then estimated using big O analysis.</st> <st c="4211">We
    will discuss in detail techniques to calculate</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/43.png)<st
    c="4261"><st c="4262">, especially for recursive algorithms, which are more challenging.</st>
    <st c="4329">It might seem trivial, but it’s worth mentioning that a higher or
    faster growth rate generally means the algorithm takes more time to produce the</st>
    <st c="4475">expected results.</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="4492">The rate of growth</st> <st c="4512">is a function of data size
    and can take various mathematical forms.</st> <st c="4580">However, we focus on
    certain well-known patterns that facilitate the comparison of algorithms.</st>
    <st c="4675">By comparing algorithms that perform the same task, we aim to identify
    the most efficient one in terms of time and space.</st> <st c="4797">While the
    primary focus will be on time complexity, the concepts can also be generalized
    to space and</st> <st c="4899">memory complexity.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="4917">Constant growth</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="4933">The root of all challenges in</st> <st c="4964">computational complexity
    lies in the iterative nature of computation.</st> <st c="5034">As discussed in
    the previous chapter, the iteration component, which we likened to the engine
    of algorithms, can be</st> <st c="5150">implemented either through</st> **<st
    c="5177">loops</st>** <st c="5182">or</st> **<st c="5186">recursion</st>**<st
    c="5195">. Regardless of the specific implementation – though it is true that
    the</st> <st c="5268">choice between loops and recursion can significantly impact
    an algorithm’s complexity – the number of iterations ultimately dictates the complexity
    of an algorithm.</st> <st c="5433">Understanding how these iterations contribute
    to overall complexity is crucial for designing</st> <st c="5526">efficient algorithms.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5547">The slowest growth rate occurs when the complexity of an algorithm
    is independent of the size of the input data.</st> <st c="5661">This family of
    growth functions is</st> <st c="5695">called</st> **<st c="5703">constant</st>**<st
    c="5711">, represented by</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:math>](img/44.png)<st
    c="5728"><st c="5729">. An algorithm is said to have constant time complexity,
    denoted as</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:math>](img/45.png)<st
    c="5797"><st c="5804">, if the value of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>C</mml:mi></mml:math>](img/46.png)<st
    c="5822"><st c="5823">, which means it is bounded by a constant that does not
    depend on the size of the input.</st> <st c="5912">The question is, in what situations
    might we have a constant growth rate, with an increasing number of input data?</st>
    <st c="6027">The answer is that this happens in very rare cases.</st> <st c="6079">Here
    are some examples of situations with a constant</st> <st c="6132">growth rate:</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="6144">Reporting the first number entered</st>**<st c="6179">: This
    is independent of the number</st> <st c="6216">of inputs</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="6225">Accessing an element of an array</st>**<st c="6258">: Retrieving
    an element by its index is a constant</st> <st c="6310">time operation</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="6324">Inserting an element at the beginning of a linked list</st>**<st
    c="6379">: This operation involves updating a few pointers, which takes</st> <st
    c="6443">constant time</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="6456">In none of these examples</st> <st c="6483">do we use a loop to
    implement the algorithm.</st> <st c="6528">However, it’s important to note that
    the existence of any loop typically makes the complexity non-constant.</st> <st
    c="6636">If the iteration is controlled by the size of the input data</st> ![<math
    xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>n</mi></mrow></math>](img/47.png)<st
    c="6697"><st c="6700">, the algorithm cannot be constant.</st> <st c="6736">The
    key is that for an algorithm to have a constant growth rate, the number of operations
    it performs must not depend on the size of</st> <st c="6869">the input.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="6879">Sub-linear growth</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="6897">Except for constant growth functions, all</st> <st c="6940">other
    growth rates depend on the size of the input data,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)<st
    c="6997"><st c="7046">. Between constant growth and linear growth (the complexity
    of linear time algorithms), there exists a family of sub-linear functions.</st>
    **<st c="7181">Sub-linear time algorithms</st>** <st c="7207">are</st> <st c="7212">those
    whose time complexity grows slower than the size of the input data, denoted as</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/49.png)<st
    c="7297"><st c="7314">. In other words, these algorithms do not need to examine
    every element of the input to produce an output.</st> <st c="7421">The goal of
    these algorithms is to achieve efficiency by performing fewer operations than
    the total number of elements in</st> <st c="7543">the input.</st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7553">As a rule of thumb, whenever a problem requires examining every
    single input element, such as in a sequential search algorithm, the complexity
    is at least linear time,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/50.png)<st
    c="7722"><st c="7727">. In these cases, we cannot achieve a better time complexity
    because each element must be checked to ensure correctness.</st> <st c="7848">Sublinear
    time algorithms are typically characterized by time complexities, such as</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/51.png)
    <st c="7932"><st c="7933">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msqrt><mml:mi>n</mml:mi></mml:msqrt></mml:mrow></mml:mfenced></mml:math>](img/52.png)<st
    c="7938"><st c="7939">. Here are some examples of sublinear</st> <st c="7977">time
    algorithms:</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7993">Binary search (</st>****![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/53.png)****<st
    c="8011">)</st>**<st c="8012">: Binary search</st> <st c="8027">is an efficient
    algorithm for finding an element in a</st> <st c="8082">sorted array by repeatedly
    dividing the search interval in half.</st> <st c="8147">This algorithm is particularly
    useful for large, sorted datasets.</st> <st c="8213">The following is a simple
    Python implementation of the binary</st> <st c="8274">search algorithm.</st> <st
    c="8293">The iterative component is</st> <st c="8319">implemented using a</st>
    <st c="8340">while loop:</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: <st c="8573">Binary search has a worst-case time complexity of</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi> </mml:mi><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/54.png)
    <st c="8624"><st c="8628">when the item being searched for is located at the bottom
    of the binary tree.</st> <st c="8706">In the best-case scenario, its time complexity
    is</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:math>](img/55.png)<st
    c="8756"><st c="8757">. The logarithmic rate of growth,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/56.png)<st
    c="8791"><st c="8792">, is a special case of polylogarithmic growth, denoted by</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mfenced separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/57.png)
    <st c="8850"><st c="8851">or</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/58.png)<st
    c="8855"><st c="8856">, where</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi><mml:mo>></mml:mo><mml:mn>0</mml:mn></mml:math>](img/59.png)
    <st c="8864"><st c="8865">and constant.</st> <st c="8880">In logarithmic growth,
    we</st> <st c="8906">have</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math>](img/60.png)<st
    c="8911"><st c="8912">.</st></st></st></st></st></st></st></st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="8913">Jump search (</st>****![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msqrt><mml:mi>n</mml:mi></mml:msqrt></mml:mrow></mml:mfenced></mml:math>](img/61.png)****<st
    c="8929">)</st>**<st c="8930">: Jump</st> <st c="8936">search (or block search)
    is an algorithm designed to efficiently</st> <st c="9002">search for an element
    in a sorted array by jumping ahead by fixed steps and then performing a linear
    search within the identified block.</st> <st c="9139">This method is particularly
    useful for large, sorted arrays where a linear search would be too slow.</st>
    <st c="9240">Presented</st> <st c="9249">here is the Python code implementation
    for the jump</st> <st c="9302">search</st> <st c="9308">algorithm:</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**<st c="9559">Interpolation search (</st>****![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/62.png)****<st
    c="9584">)</st>**<st c="9585">: An example of an algorithm with complexity</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/62.png)
    <st c="9630"><st c="9631">is the interpolation search</st> <st c="9659">algorithm.</st>
    <st c="9671">Interpolation search is an</st> <st c="9697">improvement over binary
    search for instances where the values in a sorted array are uniformly distributed.</st>
    <st c="9805">The search can be performed in</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/64.png)
    <st c="9836"><st c="9872">time complexity when the data is</st> <st c="9905">uniformly
    distributed.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="9927">Interpolation search works on the principle of estimating the position
    of the target value within the sorted array.</st> <st c="10044">It calculates
    the probable position of the target using the formula based on the array’s range
    and the target value.</st> <st c="10161">If the distribution of the data is uniform,
    the position estimate is quite accurate, leading to a significant reduction in
    the number of comparisons.</st> <st c="10311">Presented in the following is the</st>
    <st c="10345">Python implementation of interpolation</st> <st c="10384">search
    for</st> <st c="10395">your examination:</st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE2]</st></st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="10726">Both jump search and interpolation search exhibit sublinear growth
    rates, offering potential efficiency gains over linear search.</st> <st c="10857">In
    the next subsection, we will discuss the concept of linear growth patterns, illustrating
    their characteristics through</st> <st c="10979">pertinent examples.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10998">Linear growth</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: "<st c=\"11012\">The most straightforward rate of growth function in algorithm\
    \ analysis is linear time, represented as</st> ![<mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"\
    \ xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"><mml:mi>O</mml:mi><mml:mfenced\
    \ separators=\"|\"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/50.png)<st\
    \ c=\"11115\"><st c=\"11120\">.</st> **<st c=\"11122\">Linear growth</st>** <st\
    \ c=\"11135\">serves</st> <st c=\"11143\">as a crucial dividing line between fast\
    \ algorithms, such as those with constant time (</st>![<mml:math xmlns:mml=\"\
    http://www.w3.org/1998/Math/MathML\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"\
    ><mml:mi>O</mml:mi><mml:mfenced separators=\"|\"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:math>](img/66.png)<st\
    \ c=\"11229\"><st c=\"11248\">) and sublinear time (e.g.,</st> ![<mml:math xmlns:mml=\"\
    http://www.w3.org/1998/Math/MathML\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"\
    ><mml:mi>O</mml:mi><mml:mfenced separators=\"|\"><mml:mrow><mml:mrow><mml:mrow><mml:mi\
    \ mathvariant=\"normal\">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/67.png)<st\
    \ c=\"11276\"><st c=\"11277\">,</st> ![<math xmlns=\"http://www.w3.org/1998/Math/MathML\"\
    ><mrow><mrow><mi>O</mi><mfenced open=\"(\" close=\")\"><mrow><msqrt><mi>n</mi></msqrt><mi\
    \ mathvariant=\"normal\">\uFEFF</mi><mo>)</mo></mrow></mfenced></mrow></mrow></math>](img/68.png)<st\
    \ c=\"11279\"><st c=\"11280\">, and slower or extremely slow algorithms, such\
    \ as polynomial time (</st>![<mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"\
    \ xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"><mml:mi>O</mml:mi><mml:mfenced\
    \ separators=\"|\"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/69.png)<st\
    \ c=\"11348\"><st c=\"11362\">,</st> ![<mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"\
    \ xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"><mml:mi>O</mml:mi><mml:mfenced\
    \ separators=\"|\"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/70.png)<st\
    \ c=\"11364\"><st c=\"11365\">) and exponential time (</st>![<mml:math xmlns:mml=\"\
    http://www.w3.org/1998/Math/MathML\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"\
    ><mml:mi>O</mml:mi><mml:mfenced separators=\"|\"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/71.png)<st\
    \ c=\"11389\"><st c=\"11391\">), which are</st> <st c=\"11404\">considered non-linear.</st></st></st></st></st></st></st></st>"
  prefs: []
  type: TYPE_NORMAL
- en: "<st c=\"11426\">An algorithm is said to have linear time complexity when its\
    \ running time increases in direct proportion to the size of the input data.</st>\
    \ <st c=\"11563\">In other words, the running time of a linear time algorithm\
    \ is</st> ![<math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow><mrow><mi>T</mi><mfenced\
    \ open=\"(\" close=\")\"><mi>n</mi></mfenced><mo>=</mo><mspace width=\"0.25em\"\
    \ /><mi mathvariant=\"normal\">\uFEFF</mi><mi>c</mi><mi>n</mi><mo mathvariant=\"\
    italic\">,</mo></mrow></mrow></math>](img/72.png)<st c=\"11626\"><st c=\"11627\"\
    >where</st> ![<math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow><mi>c</mi></mrow></math>](img/73.png)<st\
    \ c=\"11633\"><st c=\"11649\">is a constant.</st> <st c=\"11664\">Linear time\
    \ algorithms are essential for addressing problems where every single input element\
    \ must be processed.</st> <st c=\"11777\">In such scenarios, the number of operations\
    \ grows directly in proportion to the size of the input data.</st> <st c=\"11881\"\
    >This means that if the input size doubles, the time required to process the input\
    \ also doubles.</st> <st c=\"11977\">Examples of linear time algorithms include\
    \ sequential search, finding the minimum or maximum element in an array, and summing\
    \ up the elements in</st> <st c=\"12122\">an array.</st></st></st>"
  prefs: []
  type: TYPE_NORMAL
- en: <st c="12131">One notable linear time algorithm is to compute the factorial
    of a non-negative integer 𝑛 (denoted as</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mo>!</mml:mo></mml:math>](img/74.png)<st
    c="12235"><st c="12236">).</st> <st c="12239">Here is a simple iterative implementation
    of the factorial algorithm</st> <st c="12308">in Python:</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: <st c="12399">Due to the nature of the problem, where every single number from
    1 to</st> *<st c="12470">n</st>* <st c="12471">must be visited, the recursive
    implementation cannot achieve better complexity than</st> <st c="12556">linear
    time:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: <st c="12670">Linear time</st> <st c="12682">algorithms are crucial because
    they provide a balance between efficiency and thoroughness.</st> <st c="12774">They
    ensure that every element is considered, making them suitable for problems where
    skipping elements could lead to incorrect or incomplete results.</st> <st c="12925">However,
    it is important to recognize that while linear time algorithms are efficient for
    moderate-sized inputs, they can become impractical for very large datasets.</st>
    <st c="13091">In such cases, more sophisticated algorithms with sublinear time
    complexities may be required to achieve</st> <st c="13196">acceptable performance.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13219">Non-linear growth</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="13237">The</st> **<st c="13242">non-linear time family of algorithms</st>**
    <st c="13278">encompasses</st> <st c="13290">a vast array of well-known problems
    across various domains, including data processing, optimization, machine learning,
    and artificial intelligence.</st> <st c="13439">These algorithms exhibit growth
    rates that are more complex than linear time, ranging from relatively efficient
    algorithms with complexities such as</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/75.png)
    <st c="13588"><st c="13589">to extremely costly ones with non-polynomial growth
    such as exponential</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/71.png)
    <st c="13662"><st c="13663">and factorial</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfenced></mml:math>](img/77.png)
    <st c="13678"><st c="13682">time.</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13688">The following are examples of</st> <st c="13718">non-linear algorithms:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/78.png)
    <st c="13740">**<st c="13742">algorithms</st>**<st c="13753">: Algorithms such</st>
    <st c="13772">as</st> **<st c="13775">merge sort</st>**<st c="13785">,</st> **<st
    c="13787">quick sort</st>**<st c="13797">, and</st> **<st c="13803">heap sort</st>**
    <st c="13812">fall</st> <st c="13817">into this category.</st> <st c="13838">These
    are classic sorting algorithms that</st> <st c="13879">have a time complexity
    of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/79.png)<st
    c="13906"><st c="13907">. They are highly</st> <st c="13924">efficient for large
    datasets and are frequently used in practical applications due to their relatively
    manageable growth rates.</st> <st c="14053">In the upcoming chapters, we will
    discuss this family of algorithms in detail.</st> <st c="14132">These algorithms
    are fundamental in computer science due to their efficiency and widespread applicability
    in various</st> <st c="14249">sorting tasks.</st></st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="14263">Log-linear time</st>**<st c="14279">: Log-linear time algorithms,
    also</st> <st c="14315">referred to as</st> **<st c="14330">quasi-linear time
    algorithms</st>**<st c="14358">, have a</st> <st c="14367">time complexity of</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi> </mml:mi><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="normal">l</mml:mi><mml:mi
    mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">g</mml:mi></mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">k</mml:mi></mml:mrow></mml:msup><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/80.png)<st
    c="14386"><st c="14387">, where</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>k</mi></mrow></math>](img/81.png)<st
    c="14395"><st c="14396">is a positive constant.</st> <st c="14420">Many well-known
    algorithms fall into this category and are essential for efficiently processing
    large datasets.</st> <st c="14532">Examples of log-linear time algorithms are</st>
    <st c="14575">as follows:</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="14586">Merge sort</st>**<st c="14597">: A</st> <st c="14602">classic</st>
    <st c="14610">divide-and-conquer sorting algorithm that splits the input array
    into smaller subarrays, sorts them, and then merges them back together.</st> <st
    c="14747">Its time complexity</st> <st c="14767">is</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/78.png)<st
    c="14770"><st c="14771">.</st></st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="14772">Heap sort</st>**<st c="14782">: This</st> <st c="14790">sorting
    algorithm builds a heap data structure from the input</st> <st c="14852">data
    and then repeatedly extracts the maximum element to build a sorted array.</st>
    <st c="14931">Its time complexity</st> <st c="14951">is</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/78.png)<st
    c="14954"><st c="14955">.</st></st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="14956">Quick sort</st>**<st c="14967">: Another</st> <st c="14978">divide-and-conquer
    sorting algorithm that selects a</st> <st c="15030">pivot element and partitions
    the array around the pivot.</st> <st c="15087">In the average case, its time complexity</st>
    <st c="15128">is</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/78.png)<st
    c="15131"><st c="15132">.</st></st></st></st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="15133">Polynomial time algorithms</st>**<st c="15160">: Polynomial</st>
    <st c="15174">time algorithms have a complexity of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/85.png)<st
    c="15211"><st c="15212">, where</st> *<st c="15220">a</st>* <st c="15221">is a
    small constant.</st> <st c="15243">These algorithms are generally considered efficient
    for moderate-sized inputs, but their performance can degrade significantly as
    the input size increases.</st> <st c="15399">Here are</st> <st c="15408">some
    examples:</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="15422">Matrix multiplication</st>**<st c="15444">: The</st> <st c="15451">standard
    algorithm for multiplying</st> <st c="15485">two matrices has a time complexity
    of</st>![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>O</mi><mfenced
    open="(" close=")"><msup><mi>n</mi><mn>3</mn></msup></mfenced></mrow></mrow></math>](img/86.png)<st
    c="15523"><st c="15543">. More advanced algorithms, such as Strassen’s algorithm,
    can reduce this complexity to approximately</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2.81</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/87.png)<st
    c="15645"><st c="15646">, but it is</st> <st c="15658">still polynomial.</st></st></st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="15675">Floyd-Warshall shortest path</st>**<st c="15704">: This</st>
    <st c="15712">algorithm finds the shortest</st> <st c="15741">path from a source
    node to all other nodes in a graph with non-negative weights.</st> <st c="15822">Its
    time complexity is</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/88.png)<st
    c="15845"><st c="15846">, where 𝑉 is the number of vertices in</st> <st c="15886">the
    graph.</st></st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="15896">Polynomial time algorithms</st> <st c="15924">are essential for
    many practical applications due to their relatively predictable performance.</st>
    <st c="16019">However, their efficiency can become problematic as input sizes
    grow, making them less suitable for very large datasets.</st> <st c="16140">Despite
    this, they remain a cornerstone of algorithm design, providing feasible solutions
    for a wide range of problems in computer science</st> <st c="16279">and engineering.</st></st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="16295">Exponential time algorithms</st>**<st c="16323">: These</st>
    <st c="16332">algorithms are characterized by their extremely slow and computationally
    expensive nature.</st> <st c="16423">The general form of their complexity is</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/89.png)<st
    c="16463"><st c="16473">, where</st> *<st c="16481">𝑎</st>* <st c="16483">is a
    positive constant.</st> <st c="16508">A common special case of these algorithms
    is</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/90.png)<st
    c="16553"><st c="16568">. One well-known example of an exponential</st> <st c="16610">time
    algorithm is recursive solutions to the</st> **<st c="16656">Tower of</st>** **<st
    c="16665">Hanoi problem</st>**<st c="16678">.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="16679">The Tower of Hanoi problem involves moving</st> *<st c="16723">𝑛</st>*
    <st c="16725">disks from one peg to another, using a third peg as an auxiliary,
    following</st> <st c="16802">these rules:</st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="16814">Only one disk can be moved at</st> <st c="16845">a time</st>
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="16851">A disk can only be placed on top of a</st> <st c="16890">larger
    disk</st>
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="16901">The recursive solution to the Tower of Hanoi has a time complexity
    of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/91.png)<st
    c="16972"><st c="16973">, as each move involves recursively solving two subproblems
    of size 𝑛−1\.</st> <st c="17047">The time complexity of the Tower of Hanoi problem,
    which is</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/92.png)<st
    c="17107"><st c="17109">, will be thoroughly explored in subsequent chapters when
    we discuss recurrence functions.</st> <st c="17200">The recurrence function for
    this problem,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:math>](img/93.png)<st
    c="17242">![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:math>](img/94.png)<st
    c="17247"><st c="17248">, will be analyzed using techniques such as substitution
    and the master method to derive the complexity.</st> <st c="17353">Through these
    methods, it will be shown that</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/95.png)<st
    c="17398"><st c="17404">. For a comprehensive understanding, please refer to</st>
    *<st c="17457">Chapters 4</st>* <st c="17467">and</st> *<st c="17472">5</st>*<st
    c="17473">.</st></st></st></st></st></st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="17474">Here is a recursive Python implementation of the Tower of</st>
    <st c="17533">Hanoi problem:</st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: <st c="17811">Exponential time algorithms are</st> <st c="17844">often impractical
    for large input sizes because their running time increases dramatically as the
    input size grows.</st> <st c="17959">These algorithms are typically used for problems
    where no efficient solution is known, and they serve as a baseline for comparing
    the performance of more</st> <st c="18113">sophisticated algorithms.</st></st></st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="18138">Factorial time algorithms</st>**<st c="18164">: These</st>
    <st c="18173">algorithms generate all permutations of a set, making them extremely
    computationally expensive.</st> <st c="18269">One notable example is the brute
    force solution to</st> <st c="18320">the</st> **<st c="18324">traveling salesman
    problem</st>** <st c="18350">(</st>**<st c="18352">TSP</st>**<st c="18355">),
    which has a factorial time complexity</st> <st c="18397">of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfenced></mml:math>](img/77.png)<st
    c="18400"><st c="18404">.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="18405">The TSP is a classic optimization problem where a salesman must
    find the shortest possible route that visits a set of cities exactly once and
    returns to the starting city.</st> <st c="18578">Given a list of cities and the
    distances between each pair of cities, the objective is to determine the most
    efficient tour that minimizes the total</st> <st c="18727">travel distance.</st></st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="18743">The brute force approach to solving TSP involves generating all
    possible permutations of the cities and calculating the total distance for each
    permutation to find the shortest one.</st> <st c="18926">This results in a time
    complexity of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfenced></mml:math>](img/97.png)<st
    c="18963"><st c="18984">. The number of permutations of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/98.png)
    <st c="19016"><st c="19017">cities is</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mo>!</mml:mo></mml:math>](img/99.png)
    <st c="19028"><st c="19031">(n factorial) where</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/98.png)
    <st c="19051"><st c="19052">is the number of cities.</st> <st c="19078">The following
    is a simple implementation of TSP problem:</st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: <st c="19822">Factorial time algorithms</st> <st c="19848">are highly impractical
    for all but the smallest input sizes because the runtime increases extraordinarily
    fast.</st> <st c="19961">As the number of cities (or elements) grows, the number
    of permutations and thus the computational effort required to solve the problem
    increases factorially.</st> <st c="20120">Due to their factorial time complexity,
    these algorithms become infeasible for larger datasets, underscoring the need
    for more efficient heuristic or approximation algorithms in</st> <st c="20298">practical
    applications.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="20321">In summary, non-linear time algorithms are</st> <st c="20365">fundamental
    in tackling complex and computationally intensive problems across various fields.</st>
    <st c="20459">While they offer powerful solutions, their performance can vary
    significantly based on the input size and the specific growth rate of the algorithm.</st>
    <st c="20608">Understanding these complexities helps in choosing the appropriate
    algorithm and optimizing performance for</st> <st c="20716">specific applications.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '*<st c="20738">Table 3.1</st>* <st c="20748">provides examples of actual growth
    rates for various input data sizes.</st> <st c="20820">It clearly demonstrates
    that</st> <st c="20849">non-linear algorithms, particularly those with exponential
    and factorial growth rates, experience an extremely rapid increase in computational
    complexity as the input size grows.</st> <st c="21028">This rapid escalation in
    resource requirements makes such algorithms computationally impractical for all
    but the</st> <st c="21141">smallest datasets.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | **<st c="21159">The size of input</st>** **<st c="21178">data (n)</st>**
    |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="21186">Growth rate</st>** | ![<math xmlns="http://www.w3.org/1998/Math/MathML"
    display="block"><mrow><mn>16</mn></mrow></math>](img/101.png) | ![<math xmlns="http://www.w3.org/1998/Math/MathML"
    display="block"><mrow><mn>256</mn></mrow></math>](img/102.png) | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math" display="block"><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>20</mml:mn></mml:mrow></mml:msup></mml:math>](img/103.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>30</mml:mn></mml:mrow></mml:msup></mml:math>](img/104.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>O</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:math>](img/105.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mi>C</mi></mrow></math>](img/106.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mi>C</mi></mrow></math>](img/106.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mi>C</mi></mrow></math>](img/106.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mi>C</mi></mrow></math>](img/106.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>O</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/110.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>2</mn></mrow></math>](img/111.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>3</mn></mrow></math>](img/112.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>4.32</mn></mrow></math>](img/113.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>4.32</mn></mrow></math>](img/113.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>O</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/115.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>4</mn></mrow></math>](img/116.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>8</mn></mrow></math>](img/117.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>20</mn></mrow></math>](img/118.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>30</mn></mrow></math>](img/119.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>O</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/120.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>16</mn></mrow></math>](img/101.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>256</mn></mrow></math>](img/102.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>1,048,576</mn></mrow></math>](img/123.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>1.073</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>9</mml:mn></mml:mrow></mml:msup></mml:math>](img/124.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>O</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/125.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>64</mn></mrow></math>](img/126.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>2.048</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:math>](img/127.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>20.971</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>6</mml:mn></mml:mrow></mml:msup></mml:math>](img/128.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>32.212</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>9</mml:mn></mml:mrow></mml:msup></mml:math>](img/129.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>O</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/130.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>265</mn></mrow></math>](img/131.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>65,536</mn></mrow></math>](img/132.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>1.099</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>12</mml:mn></mml:mrow></mml:msup></mml:math>](img/133.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>1.152</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>18</mml:mn></mml:mrow></mml:msup></mml:math>](img/134.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>O</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/135.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mn>4,096</mn></mrow></math>](img/136.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>16.777</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>6</mml:mn></mml:mrow></mml:msup></mml:math>](img/137.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>1.152</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>18</mml:mn></mml:mrow></mml:msup></mml:math>](img/134.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>1.237</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>27</mml:mn></mml:mrow></mml:msup></mml:math>](img/139.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>O</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/140.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>65</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:math>](img/141.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>11.57</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>76</mml:mn></mml:mrow></mml:msup></mml:math>](img/142.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mi>E</mi></mrow></math>](img/143.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mi>E</mi></mrow></math>](img/143.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>O</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:mi>n</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfenced></mml:math>](img/145.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>20.92</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>12</mml:mn></mml:mrow></mml:msup></mml:math>](img/146.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mi>E</mi></mrow></math>](img/143.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mi>E</mi></mrow></math>](img/143.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mi>E</mi></mrow></math>](img/143.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>O</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/150.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>18.44</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>18</mml:mn></mml:mrow></mml:msup></mml:math>](img/151.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mi>E</mi></mrow></math>](img/143.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mi>E</mi></mrow></math>](img/143.png)
    | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mi>E</mi></mrow></math>](img/143.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '<st c="21400">Table 3.1: Examples of actual growth rates for various input
    sizes (</st>![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi
    mathvariant="bold-italic">C</mml:mi></mml:math>](img/155.png)<st c="21468"><st
    c="21470">: A constant number and computationally negligible;</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi
    mathvariant="bold-italic">E</mml:mi></mml:math>](img/156.png)<st c="21522"><st
    c="21528">: Extremely large number and computationally impractical)</st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '*<st c="21585">Figure 3</st>**<st c="21594">.1</st>* *<st c="21596">(a)</st>*
    <st c="21600">and</st> *<st c="21605">(b)</st>* <st c="21608">present</st> <st
    c="21616">graphs that illustrate the rate of growth for various functions with
    input sizes ranging from</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow></mrow></math>](img/22.png)<st
    c="21711"><st c="21712">to</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1000</mml:mn></mml:math>](img/158.png)<st
    c="21715"><st c="21716">. These graphs provide a visual comparison of different
    time complexities, demonstrating how they scale with increasing input sizes.</st>
    <st c="21849">These figures collectively illustrate the impact of different time
    complexities on algorithm performance, emphasizing the importance of selecting
    efficient algorithms for</st> <st c="22020">large-scale problems.</st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22248_03_1_a.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="22196">(a)</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22248_03_1_b.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="22227">(b)</st>
  prefs: []
  type: TYPE_NORMAL
- en: '<st c="22230">Figure 3.1 (a) and (b): Graphs illustrating the rate of growth
    for</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi mathvariant="bold-italic">n</mi><mo>=</mo><mn>1</mn></mrow></mrow></math>](img/159.png)<st
    c="22298"><st c="22299">to</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">n</mml:mi><mml:mo>=</mml:mo><mml:mn>1000</mml:mn></mml:math>](img/160.png)</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="22303">This section</st> <st c="22315">discussed the importance of understanding
    how the complexity of algorithms scaled with the size of input data, commonly
    represented by</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/161.png)<st
    c="22451"><st c="22452">. It emphasized that both time and space complexities
    were crucial metrics for evaluating algorithm performance.</st> <st c="22565">The
    section explained that growth rates could vary significantly, ranging from constant
    time</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>O</mi><mfenced
    open="(" close=")"><mn>1</mn></mfenced></mrow></mrow></math>](img/162.png)<st
    c="22658"><st c="22659">to factorial time</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfenced></mml:math>](img/77.png)<st
    c="22677"><st c="22681">, with intermediate complexities such as logarithmic</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/51.png)<st
    c="22734"><st c="22735">, linear</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/165.png)<st
    c="22744"><st c="22750">, and log-linear</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/79.png)<st
    c="22767"><st c="22768">. The rate of growth was critical for making informed
    design decisions and ensuring efficient algorithm implementation, especially for
    large datasets.</st> <st c="22919">By comparing different growth rates, one could
    better understand the trade-offs between algorithm efficiency and computational
    resource requirements.</st> <st c="23069">Now, it is time to introduce a mathematical
    framework for studying the behavior of algorithms, which is directly connected
    to the rate of growth of</st> <st c="23217">the algorithms.</st></st></st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="23232">Asymptotic notations</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**<st c="23253">Asymptotic notation</st>** <st c="23273">is a mathematical</st>
    <st c="23292">framework used to describe the behavior of algorithms in terms of
    their time and space complexities as the input size approaches infinity.</st>
    <st c="23431">It classifies algorithms according to their growth rates, allowing
    for the comparison of efficiency across different algorithms independently of
    hardware or implementation details.</st> <st c="23612">Adapted from the field
    of mathematical analysis, asymptotic notation describes the limiting behavior
    of mathematical functions.</st> <st c="23740">As its name suggests, asymptotic
    notation does not provide specific solutions but rather a formal representation
    of the behavior of functions as</st> <st c="23885">they scale.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="23896">Let’s assume we have a function like</st> <st c="23934">the following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>f</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi> </mml:mi><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi> </mml:mi><mml:mn>1000</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi> </mml:mi><mml:mn>6</mml:mn><mml:mi>n</mml:mi><mml:mi> </mml:mi><mml:mo>+</mml:mo><mml:mi> </mml:mi><mml:mn>5</mml:mn><mml:mi> </mml:mi><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>5</mml:mn></mml:mrow></mml:msup></mml:math>](img/167.png)'
  prefs: []
  type: TYPE_IMG
- en: "<st c=\"23982\">We want to predict the behavior of</st> ![<mml:math xmlns:mml=\"\
    http://www.w3.org/1998/Math/MathML\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"\
    ><mml:mi>f</mml:mi><mml:mfenced separators=\"|\"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/168.png)\
    \ <st c=\"24017\"><st c=\"24020\">as</st> ![<mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"\
    \ xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"><mml:mi>n</mml:mi><mml:mo>→</mml:mo><mml:mi>∞</mml:mi></mml:math>](img/169.png)<st\
    \ c=\"24023\"><st c=\"24024\">. Although the term</st> ![<mml:math xmlns:mml=\"\
    http://www.w3.org/1998/Math/MathML\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"\
    ><mml:mn>1000</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math>](img/170.png)\
    \ <st c=\"24044\"><st c=\"24052\">has a very large coefficient and there is a\
    \ large constant</st> ![<mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"\
    \ xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"><mml:mn>5</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>5</mml:mn></mml:mrow></mml:msup></mml:math>](img/171.png)<st\
    \ c=\"24111\"><st c=\"24118\">, all terms except</st> ![<mml:math xmlns:mml=\"\
    http://www.w3.org/1998/Math/MathML\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"\
    ><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:math>](img/172.png)\
    \ <st c=\"24137\"><st c=\"24138\">become insignificant when</st>![<math xmlns=\"\
    http://www.w3.org/1998/Math/MathML\"><mrow><mrow><mspace width=\"0.25em\" /><mi>n</mi></mrow></mrow></math>](img/173.png)<st\
    \ c=\"24164\"><st c=\"24166\">grows very large.</st> <st c=\"24184\">In mathematical\
    \ analysis, we symbolically write</st>![<math xmlns=\"http://www.w3.org/1998/Math/MathML\"\
    ><mrow><mrow><mi mathvariant=\"normal\">\uFEFF</mi><mi>f</mi><mfenced open=\"\
    (\" close=\")\"><mi>n</mi></mfenced><mo>∼</mo><msup><mi>n</mi><mn>3</mn></msup></mrow></mrow></math>](img/174.png)\
    \ <st c=\"24231\"><st c=\"24240\">and read it as “</st>![<mml:math xmlns:mml=\"\
    http://www.w3.org/1998/Math/MathML\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"\
    ><mml:mi>f</mml:mi><mml:mfenced separators=\"|\"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/175.png)\
    \ <st c=\"24256\"><st c=\"24265\">is</st> <st c=\"24268\">asymptotically</st>\
    \ ![<mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"\
    ><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:math>](img/176.png)<st\
    \ c=\"24283\"><st c=\"24284\">.”</st></st></st></st></st></st></st></st></st></st>"
  prefs: []
  type: TYPE_NORMAL
- en: <st c="24286">In algorithm analysis,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>f</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/177.png)
    <st c="24310"><st c="24320">is replaced by</st>![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi> </mml:mi><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/178.png)<st
    c="24334"><st c="24336">, which represents the complexity of the function describing
    the running time of the algorithm under study.</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi> </mml:mi><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/179.png)
    <st c="24444"><st c="24454">can be estimated directly by analyzing the algorithm
    when it is implemented using an iterative (non-recursive) approach, or it can
    be described by a recurrence relation, which is specific to the recursive implementation
    of algorithms.</st> <st c="24689">Once we have</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi> </mml:mi><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/180.png)<st
    c="24702"><st c="24703">, we can predict the behavior of the algorithm as</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/23.png)
    <st c="24753"><st c="24754">(the number of data elements or the problem size)
    grows very large using</st> <st c="24828">asymptotic notations.</st></st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="24849">Before describing the</st> <st c="24872">asymptotic notations
    in algorithm analysis, we need to explain the simplification guideline to deal
    with equations and inequalities when using</st> <st c="25015">asymptotic notations.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="25036">Simplification rules in asymptotic notation</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="25080">Asymptotic notation</st> <st c="25100">provides a way to describe
    the behavior of functions as the input size grows toward infinity.</st> <st c="25195">When
    working with asymptotic notation, it’s important to simplify the expressions to
    focus on the most significant terms.</st> <st c="25317">Here are the key</st>
    <st c="25334">simplification rules:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="25355">Drop constants</st>**<st c="25370">: Ignore constant coefficients
    because they do not affect the</st> <st c="25433">growth rate.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="25445">Example</st>**<st c="25453">:</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi> </mml:mi><mml:mn>5</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi> </mml:mi><mml:mn>3</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi> </mml:mi><mml:mn>2</mml:mn><mml:mi>n</mml:mi><mml:mi> </mml:mi><mml:mo>+</mml:mo><mml:mi> </mml:mi><mml:mn>7</mml:mn></mml:math>](img/182.png)
    <st c="25456"><st c="25477">simplifies to</st>![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi> </mml:mi><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/183.png)<st
    c="25490"><st c="25495">.</st></st></st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="25496">Keep the most significant term</st>**<st c="25527">: Retain
    the term with the highest growth rate, as it dominates the function as</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="25608"><st c="25657">becomes large.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="25671">Example</st>**<st c="25679">:</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi> </mml:mi><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi> </mml:mi><mml:mn>1000</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi> </mml:mi><mml:mn>50</mml:mn><mml:mi>n</mml:mi></mml:math>](img/185.png)
    <st c="25682"><st c="25706">simplifies</st> <st c="25717">to</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/186.png)<st
    c="25720"><st c="25726">.</st></st></st></st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="25727">Combine similar terms</st>**<st c="25749">: When adding functions,
    keep the term with the highest</st> <st c="25806">growth rate.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="25818">Example</st>**<st c="25826">:</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi> </mml:mi><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mi> </mml:mi><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/187.png)
    <st c="25829"><st c="25848">simplifies</st> <st c="25859">to</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/188.png)<st
    c="25862"><st c="25868">.</st></st></st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="25869">Product of terms</st>**<st c="25886">: When multiplying functions,
    multiply their</st> <st c="25932">growth rates.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="25945">Example</st>**<st c="25953">:</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>×</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/189.png)
    <st c="25956"><st c="25978">simplifies</st> <st c="25989">to</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/78.png)<st
    c="25992"><st c="25993">.</st></st></st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="25994">Nested functions</st>**<st c="26011">: For nested functions,
    the outer function’s growth</st> <st c="26064">rate dominates.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: "**<st c=\"26079\">Example</st>**<st c=\"26087\">:</st> ![<math xmlns=\"http://www.w3.org/1998/Math/MathML\"\
    ><mrow><mrow><mi>T</mi><mfenced open=\"(\" close=\")\"><mi>n</mi></mfenced><mo>=</mo><mspace\
    \ width=\"0.25em\" /><mi>O</mi><mfenced open=\"(\" close=\")\"><msup><mn>2</mn><mfenced\
    \ open=\"{\" close=\"}\"><mrow><mi>O</mi><mfenced open=\"(\" close=\")\"><mrow><mi>n</mi><mi>\uFEFF\
    </mi></mrow></mfenced></mrow></mfenced></msup></mfenced></mrow></mrow></math>](img/191.png)\
    \ <st c=\"26090\"><st c=\"26104\">simplifies</st> <st c=\"26115\">to</st> ![<mml:math\
    \ xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"\
    ><mml:mi>O</mml:mi><mml:mfenced separators=\"|\"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/71.png)<st\
    \ c=\"26118\"><st c=\"26119\">.</st></st></st>"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="26120">Let’s practice the simplification</st> <st c="26155">rules in
    the</st> <st c="26168">following examples:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="26187">Example 3.1</st>**<st c="26199">:</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="26201">Simplify</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi> </mml:mi><mml:mn>3</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi> </mml:mi><mml:mn>2</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi> </mml:mi><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math>](img/193.png)<st
    c="26210"><st c="26232">.</st></st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="26233">Solution</st>**<st c="26242">: Drop constants and lower-order</st>
    <st c="26276">terms:</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi> </mml:mi><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/194.png)<st
    c="26283"><st c="26296">.</st></st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="26297">Example 3.2</st>**<st c="26309">:</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="26311">Simplify</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mn>100</mml:mn><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:mn>50</mml:mn><mml:mi>n</mml:mi></mml:math>](img/195.png)<st
    c="26320"><st c="26342">.</st></st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="26343">Solution</st>**<st c="26352">: Drop the lower-order</st> <st
    c="26376">term:</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/196.png)<st
    c="26382"><st c="26398">.</st></st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="26399">Example 3.3</st>**<st c="26411">:</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="26413">Simplify</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/197.png)<st
    c="26422"><st c="26444">.</st></st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="26445">Solution</st>**<st c="26454">: Retain the term with the highest</st>
    <st c="26490">growth rate:</st>![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi> </mml:mi><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi> </mml:mi><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/198.png)<st
    c="26502"><st c="26504">.</st></st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="26505">Example 3.4</st>**<st c="26517">:</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="26519">Simplify</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/199.png)<st
    c="26528"><st c="26550">.</st></st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="26551">Solution</st>**<st c="26560">: Multiply the growth</st> <st
    c="26583">rates:</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/200.png)<st
    c="26590"><st c="26599">.</st></st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="26600">Example 3.5</st>**<st c="26612">:</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="26614">Simplify</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/201.png)<st
    c="26623"><st c="26624">.</st></st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**<st c="26625">Solution</st>**<st c="26634">: Simplify the inner</st> <st
    c="26656">function first:</st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mn>2</mml:mn><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/202.png)<st
    c="26671"><st c="26681">.</st></st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '<st c="26682">Having established a</st> <st c="26703">foundation in asymptotic
    notation and simplification techniques, we will now turn our attention to a crucial
    aspect of this chapter: the asymptotic bounds denoted by</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:math>](img/203.png)<st
    c="26870"><st c="26871">,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>Θ</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:math>](img/204.png)<st
    c="26873"><st c="26874">,</st> <st c="26876">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>Ω</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:math>](img/205.png)<st
    c="26880"><st c="26881">.</st></st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="26882">Asymptotic bounds</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="26900">The key to analyzing the complexity</st> <st c="26937">of an algorithm
    lies in studying its running time.</st> <st c="26988">But which running time should
    we consider?</st> <st c="27031">Algorithms can behave differently depending on
    the nature of the input data and its distribution.</st> <st c="27129">Generally,
    we aim to understand the worst-case scenario, as it provides a guarantee on the
    upper limit of the algorithm’s running time for any input.</st> <st c="27279">However,
    we may also be interested in the average-case scenario, which gives a more practical
    expectation of the algorithm’s performance over a typical set of inputs.</st>
    <st c="27446">Ultimately, our goal is to draw general conclusions about the algorithm’s
    behavior that are independent of specific input data and its distribution.</st>
    <st c="27595">Let’s discuss these different scenarios</st> <st c="27635">in detail:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="27645">Worst-case scenario</st>**<st c="27665">: The worst-case scenario
    considers the maximum time an algorithm can take to complete, given the most challenging
    possible input of size</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)<st
    c="27804"><st c="27853">. This analysis provides a guarantee that the algorithm
    will not exceed this time, making it particularly important for applications where
    performance guarantees are critical.</st> <st c="28029">The asymptotic notation
    used to describe the worst-case scenario is</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>O</mi></mrow></math>](img/207.png)<st
    c="28097"><st c="28098">notation (big O notation).</st> <st c="28125">This is</st>
    <st c="28132">called the</st> **<st c="28144">asymptotic</st>** **<st c="28155">upper
    bound</st>**<st c="28166">.</st></st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="28167">Average-case scenario</st>**<st c="28189">: The average-case
    scenario evaluates the expected running time of an algorithm over all possible
    inputs of size</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)<st
    c="28303"><st c="28352">, assuming a certain probability distribution of the inputs.</st>
    <st c="28413">This analysis provides a more realistic measure of an algorithm’s
    performance in typical use cases, giving insights into its efficiency under normal
    operating conditions.</st> <st c="28584">The asymptotic notation used to describe
    the average-case scenario is typically</st>![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi> </mml:mi><mml:mi
    mathvariant="normal">Θ</mml:mi></mml:math>](img/209.png) <st c="28663"><st c="28665">notation
    (big Theta notation).</st> <st c="28697">This is known as</st> <st c="28713">the</st>
    **<st c="28718">asymptotic</st>** **<st c="28729">tight bound</st>**<st c="28740">.</st></st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="28741">Best-case scenario</st>**<st c="28760">: The best-case scenario
    examines the minimum time an algorithm takes to complete, given the most favorable
    input of size</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/210.png)<st
    c="28883"><st c="28884">. While less commonly used in performance analysis, it
    can highlight the efficiency of an algorithm under optimal conditions.</st> <st
    c="29010">The asymptotic notation, called</st> **<st c="29042">asymptotic lower
    bound</st>**<st c="29064">, which is</st> <st c="29075">used to describe the best-case
    scenario, is typically</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="normal">Ω</mml:mi></mml:math>](img/211.png)<st
    c="29129"><st c="29130">-notation (big</st> <st c="29145">Omega notation).</st></st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '<st c="29161">Having explored the three scenarios of time complexity (best,
    average, and worst case), we will now introduce three fundamental asymptotic bounds:
    upper, tight, and</st> <st c="29327">lower bounds.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="29340">Asymptotic upper bound (O notation)</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="29376">An algorithm is classified</st> <st c="29404">as</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>g</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:math>](img/212.png)<st
    c="29407"><st c="29414">) if there exist positive constants</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>c</mml:mi></mml:math>](img/213.png)
    <st c="29450"><st c="29451">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/214.png)<st
    c="29456"><st c="29457">, such that the time complexity of the algorithm or its
    running time</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:math>](img/215.png)
    <st c="29526"><st c="29527">satisfies the inequality</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>≤</mml:mo><mml:mi>c</mml:mi><mml:mo>⋅</mml:mo><mml:mi>g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/216.png)
    <st c="29553"><st c="29571">for all</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/217.png)<st
    c="29579"><st c="29582">. Formally speaking,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/218.png)
    <st c="29603"><st c="29621">represents a set of functions or running times that
    share a similar asymptotic</st> <st c="29700">upper bound:</st></st></st></st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>O</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mfenced
    open="{" close="}" separators="|"><mml:mrow><mml:mi>T</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>:</mml:mo><mml:mi> </mml:mi><mml:mo>∃</mml:mo><mml:mi> </mml:mi><mml:mi>c</mml:mi><mml:mo>></mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi> </mml:mi><mml:mo>∃</mml:mo><mml:mi> </mml:mi><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>></mml:mo><mml:mn>0</mml:mn><mml:mi> </mml:mi><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>c</mml:mi><mml:mi>h</mml:mi><mml:mi> </mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi> </mml:mi><mml:mo>∀</mml:mo><mml:mi> </mml:mi><mml:mi>n</mml:mi><mml:mi> </mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi> </mml:mi><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>≤</mml:mo><mml:mi>c</mml:mi><mml:mo>⋅</mml:mo><mml:mi>g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/219.png)'
  prefs: []
  type: TYPE_IMG
- en: '*<st c="29778">Figure 3</st>**<st c="29786">.2</st>* <st c="29788">illustrates
    hypothetical graphs for</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/220.png)
    <st c="29825"><st c="29826">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/221.png)<st
    c="29831"><st c="29836">. The asymptotic upper bound, represented by</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/222.png)<st
    c="29881"><st c="29882">, provides a way to describe the worst-case growth rate
    of the algorithm’s running time as the input size increases, ensuring that</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/223.png)
    <st c="30013"><st c="30014">grows no faster than</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>c</mml:mi><mml:mo>.</mml:mo><mml:mi>g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/224.png)<st
    c="30036"><st c="30037">. The following example demonstrates how to determine
    the upper asymptotic bound of a function and the method used to</st> <st c="30155">prove
    it:</st></st></st></st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="30164">Example 3.6</st>**<st c="30176">:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30178">Prove that</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mn>4</mn><msup><mi>n</mi><mn>2</mn></msup><mo>=</mo><mspace
    width="0.25em" /><mi>O</mi><mfenced open="(" close=")"><msup><mi>n</mi><mn>3</mn></msup></mfenced></mrow></mrow></math>](img/225.png)<st
    c="30189"><st c="30201">by determining the constants</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>c</mi></mrow></math>](img/73.png)<st
    c="30230"><st c="30246">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/227.png)<st
    c="30250"><st c="30251">.</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="30252">Solution</st>**<st c="30261">: From the formal definition of</st>
    ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>O</mi></mrow></math>](img/207.png)<st
    c="30294"><st c="30295">notation, we need to show</st> <st c="30321">the following:</st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>4</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>≤</mml:mo><mml:mi>c</mml:mi><mml:mo>.</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:math>](img/229.png)
    <st c="30335"><st c="30343">for</st> <st c="30347">all</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mi> </mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/230.png)<st
    c="30351"><st c="30352">.</st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30353">To simplify, we divide both sides by</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math>](img/231.png)<st
    c="30391"><st c="30392">:</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mn>4</mn><mo>≤</mo><mi>c</mi><mo>.</mo><mi>n</mi></mrow></mrow></math>](img/232.png)</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30397">This inequality has two unknowns,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>c</mml:mi></mml:math>](img/233.png)
    <st c="30431"><st c="30432">and</st>![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi> </mml:mi><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/234.png)<st
    c="30436"><st c="30438">, giving us multiple possible solutions.</st> <st c="30479">For
    example, if we choose</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>c</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math>](img/235.png)<st
    c="30505"><st c="30506">, this simplifies to</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mn>4</mn><mo>≤</mo><mi>n</mi></mrow></mrow></math>](img/236.png)<st
    c="30527"><st c="30528">. So,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:math>](img/237.png)
    <st c="30534"><st c="30535">or any larger value.</st> <st c="30557">Therefore,
    for</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>c</mi><mo>=</mo><mn>1</mn></mrow></mrow></math>](img/238.png)<st
    c="30572"><st c="30573">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:math>](img/239.png)<st
    c="30577"><st c="30578">, the inequality holds.</st> <st c="30602">There are other
    possible pairs of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>c</mml:mi></mml:math>](img/233.png)
    <st c="30636"><st c="30637">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/227.png)
    <st c="30642"><st c="30643">that satisfy the inequality, but</st> <st c="30677">this
    is one</st> <st c="30689">straightforward solution.</st></st></st></st></st></st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![ Figure 3.2: Demonstrating the concept of ​O ​notation. The running time
    ​T​(n)​​ is asymptotically bounded by ​c . g​(n)​​, where ​c ​is a positive constant.
    This means that for sufficiently large input sizes ​n ​, specifically for all
    ​ n ≥ ​n​ 0​​​, the value of ​T​(n)​​ will not exceed ​c ⋅ g​(n)​​.](img/B22248_03_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '<st c="30729">Figure 3.2: Demonstrating the concept of</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi
    mathvariant="bold-italic">O</mi></mrow></math>](img/242.png)<st c="30770"><st
    c="30771">notation.</st> <st c="30781">The running time</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/243.png)
    <st c="30798"><st c="30799">is asymptotically bounded by</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>.</mml:mo><mml:mi
    mathvariant="bold-italic">g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/244.png)<st
    c="30829"><st c="30844">, where</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi
    mathvariant="bold-italic">c</mi></mrow></math>](img/245.png)<st c="30852"><st
    c="30853">is a positive constant.</st> <st c="30877">This means that for sufficiently
    large input sizes</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi
    mathvariant="bold-italic">n</mi></mrow></math>](img/246.png)<st c="30928"><st
    c="30937">, specifically for all</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic"> </mml:mi><mml:mi
    mathvariant="bold-italic">n</mml:mi><mml:mi mathvariant="bold-italic"> </mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/247.png)<st
    c="30960"><st c="30961">, the value of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/243.png)
    <st c="30976"><st c="30977">will not exceed</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>⋅</mml:mo><mml:mi
    mathvariant="bold-italic">g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/249.png)<st
    c="30994"><st c="31067">.</st></st></st></st></st></st></st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="31068">Example 3.7</st>**<st c="31080">:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31082">Demonstrating members</st> <st c="31104">of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/188.png)<st
    c="31107"><st c="31113">.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31114">As mentioned</st> <st c="31128">earlier,</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>O</mi></mrow></math>](img/251.png)<st
    c="31137"><st c="31156">notation represents a set of functions.</st> *<st c="31196">Table
    3.2</st>* <st c="31205">provides examples of functions that are members of</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/188.png)
    <st c="31257"><st c="31263">along with their corresponding constants</st> ![<math
    xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>c</mi></mrow></math>](img/73.png)<st
    c="31304"><st c="31320">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/227.png)<st
    c="31324"><st c="31325">.</st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>T</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/43.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>c</mml:mi></mml:math>](img/233.png) | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math" display="block"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/227.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>n</mml:mi></mml:math>](img/48.png) | <st c="31379">1</st>
    | <st c="31380">0</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>60</mml:mn><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>4</mml:mn></mml:math>](img/259.png)
    | <st c="31382">60</st> | <st c="31384">2</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mfrac><mi>n</mi><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow></mfrac></mrow></math>](img/260.png)
    | <st c="31394">0.5</st> | <st c="31397">2</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math>](img/231.png)
    | <st c="31400">1</st> | <st c="31401">0</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi>n</mml:mi></mml:math>](img/262.png)
    | <st c="31411">2</st> | <st c="31412">1</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mn>5000</mml:mn><mml:mi>n</mml:mi></mml:math>](img/263.png)
    | <st c="31421">5001</st> | <st c="31425">1</st> |'
  prefs: []
  type: TYPE_TB
- en: '<st c="31427">Table 3.2: Demonstrating some members of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/264.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="31476">Example 3.8</st>**<st c="31487">:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31489">Proving O(n!) grows faster</st> <st c="31516">than</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/71.png)<st
    c="31521"><st c="31522">.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31523">We need to show that</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfenced><mml:mo>></mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/266.png)<st
    c="31545"><st c="31546">. To do this, we use</st> **<st c="31567">Stirling’s approximation</st>**<st
    c="31591">:</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>n</mml:mi><mml:mo>!</mml:mo><mml:mo>∼</mml:mo><mml:msqrt><mml:mn>2</mml:mn><mml:mi>π</mml:mi><mml:mi>n</mml:mi></mml:msqrt><mml:msup><mml:mrow><mml:mfenced
    separators="|"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:math>](img/267.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="31608">Using this approximation for</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>n</mi><mo>!</mo></mrow></mrow></math>](img/268.png)<st
    c="31637"><st c="31640">, we need to prove</st> <st c="31659">the following:</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>O</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msqrt><mml:mn>2</mml:mn><mml:mi>π</mml:mi><mml:mi>n</mml:mi></mml:msqrt><mml:msup><mml:mrow><mml:mfenced
    separators="|"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>></mml:mo><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/269.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="31695">Taking the logarithm of both sides, we get</st> <st c="31738">the
    following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mfenced
    separators="|"><mml:mrow><mml:msqrt><mml:mn>2</mml:mn><mml:mi>π</mml:mi><mml:mi>n</mml:mi></mml:msqrt><mml:msup><mml:mrow><mml:mfenced
    separators="|"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:mrow></mml:mrow><mml:mo>></mml:mo><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math>](img/270.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="31754">This simplifies to</st> <st c="31773">the following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>0.5</mml:mn><mml:mfenced separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>π</mml:mi></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mi>e</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mrow><mml:mo>></mml:mo><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math>](img/271.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="31789">Further simplifying both sides, we get</st> <st c="31828">the
    following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow><mml:mo>></mml:mo><mml:mi>n</mml:mi></mml:math>](img/272.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="31849">As</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/273.png)
    <st c="31852"><st c="31853">grows large, the</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:math>](img/274.png)
    <st c="31871"><st c="31877">term dominates.</st> <st c="31893">Therefore,</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfenced></mml:math>](img/275.png)
    <st c="31904"><st c="31910">grows faster than</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/276.png)<st
    c="31928"><st c="31929">, which completes</st> <st c="31947">the proof.</st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31957">We encourage the</st> <st c="31975">reader to apply the same approach
    to prove that</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/277.png)
    <st c="32023"><st c="32029">></st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfenced></mml:math>](img/77.png)<st
    c="32031"><st c="32035">.</st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="32036">In this subsection, we introduced the concept of the upper asymptotic
    bound, explaining how to describe and prove it for specific growth functions.</st>
    <st c="32185">In the following subsection, we will explore the lower</st> <st
    c="32240">asymptotic bound.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="32257">Asymptotic lower bound (</st>![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold">Ω</mml:mi></mml:math>](img/279.png)<st
    c="32282"><st c="32284">-notation)</st></st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="32294">An algorithm is</st> <st c="32310">considered to be</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi
    mathvariant="normal">Ω</mml:mi><mml:mo>(</mml:mo><mml:mi>g</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:math>](img/280.png)<st
    c="32328"><st c="32335">) if there are positive constants</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>c</mml:mi></mml:math>](img/233.png)
    <st c="32369"><st c="32370">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/282.png)
    <st c="32375"><st c="32376">such that the time complexity of the algorithm or
    its running time</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:math>](img/283.png)
    <st c="32444"><st c="32445">meets the condition</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>≥</mml:mo><mml:mi>c</mml:mi><mml:mo>⋅</mml:mo><mml:mi>g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/284.png)
    <st c="32466"><st c="32467">for all</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/285.png)<st
    c="32476">![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/286.png)<st
    c="32477"><st c="32478">. Formally speaking,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="normal">Ω</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/287.png)
    <st c="32499"><st c="32507">represents a set of functions or running times that
    share a similar asymptotic</st> <st c="32586">lower bound:</st></st></st></st></st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mi
    mathvariant="normal">Ω</mi><mfenced open="(" close=")"><mrow><mi>g</mi><mfenced
    open="(" close=")"><mi>n</mi></mfenced></mrow></mfenced><mo>=</mo><mfenced open="{"
    close="}"><mrow><mi>T</mi><mfenced open="(" close=")"><mi>n</mi></mfenced><mo>:</mo><mspace
    width="0.25em" /><mo>∃</mo><mspace width="0.25em" /><mi>c</mi><mo>></mo><mn>0</mn><mo>,</mo><mspace
    width="0.25em" /><mo>∃</mo><mspace width="0.25em" /><msub><mi>n</mi><mn>0</mn></msub><mo>></mo><mn>0</mn><mspace
    width="0.25em" /><mi>s</mi><mi>u</mi><mi>c</mi><mi>h</mi><mspace width="0.25em"
    /><mi>t</mi><mi>h</mi><mi>a</mi><mi>t</mi><mspace width="0.25em" /><mo>∀</mo><mspace
    width="0.25em" /><mi>n</mi><mspace width="0.25em" /><mo>≥</mo><msub><mi>n</mi><mn>0</mn></msub><mo>,</mo><mspace
    width="0.25em" /><mn>0</mn><mo>≤</mo><mi>c</mi><mo>.</mo><mi>g</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>≤</mo><mi>T</mi><mfenced
    open="(" close=")"><mi>n</mi></mfenced></mrow></mfenced></mrow></mrow></math>](img/288.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="32662">The asymptotic lower bound, represented by</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="normal">Ω</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/289.png)<st
    c="32705"><st c="32715">, provides a way to describe the best-case growth rate
    of the algorithm’s running time as the input size increases, ensuring that</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/290.png)
    <st c="32845"><st c="32846">grows no slower than</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>c</mml:mi><mml:mo>.</mml:mo><mml:mi>g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/291.png)<st
    c="32868"><st c="32869">.</st> *<st c="32871">Figure 3</st>**<st c="32879">.3</st>*
    <st c="32881">illustrates hypothetical graphs for</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/43.png)
    <st c="32918"><st c="32919">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/293.png)<st
    c="32923"><st c="32928">.</st></st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.3: Demonstrating the concept of ​<?AID d835?><?AID dec0?> ​notation.
    The running time ​T​(n)​​ is asymptotically bounded by ​c . g​(n)​​, where ​c
    ​is a positive constant. This means that for sufficiently large input sizes ​n​,
    specifically, for all ​n ≥ ​n​ 0​​​, the value of ​T​(n)​​ will not be lower than
    ​c . g​(n)​​.](img/B22248_03_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '<st c="32941">Figure 3.3: Demonstrating the concept of</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi
    mathvariant="bold">Ω</mi></mrow></math>](img/294.png)<st c="32982"><st c="32983">notation.</st>
    <st c="32993">The running time</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/243.png)
    <st c="33010"><st c="33011">is asymptotically bounded by</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>.</mml:mo><mml:mi
    mathvariant="bold-italic">g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/244.png)<st
    c="33041"><st c="33056">, where</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi
    mathvariant="bold-italic">c</mi></mrow></math>](img/245.png)<st c="33064"><st
    c="33065">is a positive constant.</st> <st c="33089">This means that for sufficiently
    large input sizes</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">n</mml:mi></mml:math>](img/298.png)<st
    c="33140"><st c="33141">, specifically, for all</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">n</mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/299.png)<st
    c="33165"><st c="33168">, the value of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/243.png)
    <st c="33183"><st c="33184">will not be lower than</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">c</mml:mi><mml:mo>.</mml:mo><mml:mi
    mathvariant="bold-italic">g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/244.png)<st
    c="33208"><st c="33223">.</st></st></st></st></st></st></st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="33224">Example 3.9</st>**<st c="33236">:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="33238">Prove that</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msqrt><mml:mi>n</mml:mi></mml:msqrt><mml:mo>=</mml:mo><mml:mi
    mathvariant="normal">Ω</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfenced></mml:math>](img/302.png)
    <st c="33249"><st c="33262">by determining the constants</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>c</mi></mrow></math>](img/73.png)<st
    c="33291"><st c="33307">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/227.png)<st
    c="33311"><st c="33312">.</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="33313">Solution</st>**<st c="33322">: From the</st> <st c="33333">formal
    definition of</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi
    mathvariant="normal">Ω</mi></mrow></math>](img/305.png)<st c="33355"><st c="33356">notation,
    we need to show that:</st>![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msqrt><mml:mi>n</mml:mi></mml:msqrt><mml:mo>≥</mml:mo><mml:mi>c</mml:mi><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:math>](img/306.png)
    <st c="33387"><st c="33396">for all</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mi> </mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/230.png)<st
    c="33404"><st c="33405">. We divide both sides of the inequality by</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:math>](img/308.png)<st
    c="33449"><st c="33450">,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:msqrt><mml:mi>n</mml:mi></mml:msqrt></mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfrac><mml:mo>≥</mml:mo><mml:mi>c</mml:mi></mml:math>](img/309.png)<st
    c="33452"><st c="33456">, and then we find suitable</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>c</mi></mrow></math>](img/310.png)<st
    c="33484"><st c="33485">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/311.png)<st
    c="33489"><st c="33490">. To determine appropriate values for</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>c</mml:mi></mml:math>](img/233.png)
    <st c="33528"><st c="33529">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/282.png)<st
    c="33534"><st c="33535">, we need to find values such that the inequality holds
    for all</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/314.png)<st
    c="33599"><st c="33602">. Let’s start with a specific value for</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>c</mi></mrow></math>](img/73.png)<st
    c="33642"><st c="33658">. We</st> <st c="33663">choose</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>c</mi><mo>=</mo><mn>1</mn><mo>:</mo></mrow></mrow></math>](img/316.png)</st></st></st></st></st></st></st></st></st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mfrac><mml:mrow><mml:msqrt><mml:mi>n</mml:mi></mml:msqrt></mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:mfrac><mml:mo>≥</mml:mo><mml:mn>1</mml:mn></mml:math>](img/317.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="33672">This simplifies to</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msqrt><mml:mi>n</mml:mi></mml:msqrt><mml:mo>≥</mml:mo><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:math>](img/318.png)<st
    c="33691"><st c="33692">. We need to find</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/282.png)
    <st c="33710"><st c="33711">such that this inequality holds for all</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/314.png)<st
    c="33752"><st c="33755">. Let’s square both sides of the inequality to make it
    easier</st> <st c="33817">to compare:</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>n</mml:mi><mml:mo>≥</mml:mo><mml:msup><mml:mrow><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>n</mml:mi></mml:math>](img/321.png)'
  prefs: []
  type: TYPE_IMG
- en: "<st c=\"33835\">For large values of</st> ![<mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"\
    \ xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"><mml:mi>n</mml:mi></mml:math>](img/322.png)<st\
    \ c=\"33855\"><st c=\"33856\">, the term</st>![<math xmlns=\"http://www.w3.org/1998/Math/MathML\"\
    ><mrow><mrow><mi>\uFEFF</mi><msup><mrow><mi>l</mi><mi>o</mi><mi>g</mi></mrow><mn>2</mn></msup><mi>n</mi></mrow></mrow></math>](img/323.png)\
    \ <st c=\"33866\"><st c=\"33871\">grows much slower than</st> ![<mml:math xmlns:mml=\"\
    http://www.w3.org/1998/Math/MathML\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"\
    ><mml:mi>n</mml:mi></mml:math>](img/324.png)<st c=\"33894\"><st c=\"33895\">.\
    \ Thus, there will be a point</st> ![<mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"\
    \ xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/325.png)\
    \ <st c=\"33925\"><st c=\"33926\">beyond which the inequality</st>![<math xmlns=\"\
    http://www.w3.org/1998/Math/MathML\"><mrow><mrow><mi>n</mi><mo>≥</mo><msup><mrow><mi>l</mi><mi>o</mi><mi>g</mi></mrow><mn>2</mn></msup><mi>n</mi></mrow></mrow></math>](img/326.png)\
    \ <st c=\"33954\"><st c=\"33956\">holds.</st> <st c=\"33964\">To find a rough\
    \ estimate of</st> ![<mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"\
    \ xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/327.png)<st\
    \ c=\"33992\"><st c=\"33993\">, we can solve this</st> <st c=\"34013\">equation:</st>\
    \ ![<mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"\
    ><mml:mi>n</mml:mi><mml:mo>≥</mml:mo><mml:msup><mml:mrow><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>n</mml:mi></mml:math>](img/328.png)<st\
    \ c=\"34023\">![<mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" xmlns:m=\"\
    http://schemas.openxmlformats.org/officeDocument/2006/math\"><mml:mi>n</mml:mi><mml:mo>≥</mml:mo><mml:msup><mml:mrow><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>n</mml:mi></mml:math>](img/329.png)<st\
    \ c=\"34024\"><st c=\"34031\">.</st></st></st></st></st></st></st></st></st>"
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34032">This is a transcendental equation, and solving it analytically
    is complex.</st> <st c="34108">However, we can employ numerical methods to find
    an approximate solution.</st> <st c="34182">From practical calculations,</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/330.png)
    <st c="34211"><st c="34212">is approximately 16\.</st> <st c="34234">Thus, we
    can</st> <st c="34247">choose</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>16</mml:mn></mml:math>](img/331.png)<st
    c="34254"><st c="34255">.</st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="34256">Example 3.10</st>**<st c="34269">:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34271">Demonstrating members</st> <st c="34293">of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="normal">Ω</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/332.png)<st
    c="34296"><st c="34302">.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34303">As mentioned</st> <st c="34316">earlier,</st>![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi
    mathvariant="normal">Ω</mi></mrow></math>](img/333.png) <st c="34325"><st c="34327">notation
    represents a set of functions.</st> *<st c="34368">Table 3.3</st>* <st c="34377">provides
    examples of functions that are members of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="normal">Ω</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/332.png)
    <st c="34429"><st c="34435">along with their corresponding constants</st> ![<math
    xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>c</mi></mrow></math>](img/73.png)<st
    c="34476"><st c="34492">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/227.png)<st
    c="34496"><st c="34497">.</st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>T</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/43.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>c</mml:mi></mml:math>](img/233.png) | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math" display="block"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/227.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:math>](img/176.png)
    | <st c="34503">1</st> | <st c="34504">0</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mrow><mml:mi
    mathvariant="normal">log</mml:mi></mml:mrow><mml:mo>⁡</mml:mo><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mn>4</mml:mn></mml:math>](img/341.png)
    | <st c="34515">5</st> | <st c="34516">1</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:math>](img/342.png)
    | <st c="34518">1</st> | <st c="34519">4</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><msup><mi>n</mi><msqrt><mn>10</mn></msqrt></msup></mrow></math>](img/343.png)
    | <st c="34521">1</st> | <st c="34522">0</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msup></mml:math>](img/344.png)
    | <st c="34524">1</st> | <st c="34525">0</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><msup><mi>n</mi><msqrt><mi>n</mi></msqrt></msup></mrow></math>](img/345.png)
    | <st c="34527">1</st> | <st c="34528">9</st> |'
  prefs: []
  type: TYPE_TB
- en: '<st c="34529">Table 3.3: Demonstrating some members of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold">Ω</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/346.png)'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34576">Asymptotic tight bound (</st>![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">θ</mml:mi></mml:math>](img/347.png)<st
    c="34600"><st c="34602">-notation)</st></st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="34612">An</st> <st c="34616">algorithm is said to be</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi
    mathvariant="normal">θ</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/348.png)
    <st c="34640"><st c="34641">if there exist positive constants</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><msub><mi>c</mi><mn>1</mn></msub></mrow></math>](img/349.png)<st
    c="34676"><st c="34726">,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math>](img/350.png)<st
    c="34728"><st c="34729">, and</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><msub><mi>n</mi><mn>0</mn></msub></mrow></math>](img/351.png)<st
    c="34735"><st c="34736">such that the algorithm’s running time</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/290.png)
    <st c="34775"><st c="34776">satisfies</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>.</mml:mo><mml:mi>g</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo><mml:mo>≤</mml:mo><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>.</mml:mo><mml:mi>g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/353.png)
    <st c="34787"><st c="34788">for all</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>n</mi><mo>≥</mo><msub><mi>n</mi><mn>0</mn></msub></mrow></mrow></math>](img/354.png)<st
    c="34797"><st c="34800">. Formally speaking,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="normal">θ</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/355.png)
    <st c="34821"><st c="34830">represents a set of functions or running times that
    share a similar asymptotic</st> <st c="34909">lower bound:</st></st></st></st></st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mi
    mathvariant="normal">θ</mi><mfenced open="(" close=")"><mrow><mi>g</mi><mfenced
    open="(" close=")"><mi>n</mi></mfenced></mrow></mfenced><mo>=</mo><mfenced open="{"
    close="}"><mrow><mi>T</mi><mfenced open="(" close=")"><mi>n</mi></mfenced><mo>:</mo><mspace
    width="0.25em" /><mo>∃</mo><mspace width="0.25em" /><msub><mi>c</mi><mn>1</mn></msub><mo>></mo><mn>0</mn><mo>,</mo><mspace
    width="0.25em" /><mo>∃</mo><mspace width="0.25em" /><msub><mi>c</mi><mn>2</mn></msub><mo>></mo><mn>0</mn><mo>,</mo><mo>∃</mo><mspace
    width="0.25em" /><msub><mi>n</mi><mn>0</mn></msub><mo>></mo><mn>0</mn><mspace
    width="0.25em" /><mi>s</mi><mi>u</mi><mi>c</mi><mi>h</mi><mspace width="0.25em"
    /><mi>t</mi><mi>h</mi><mi>a</mi><mi>t</mi><mspace width="0.25em" /><mo>∀</mo><mspace
    width="0.25em" /><mi>n</mi><mspace width="0.25em" /><mo>≥</mo><msub><mi>n</mi><mn>0</mn></msub><mo>,</mo><mspace
    width="0.25em" /><mn>0</mn><mo>≤</mo><msub><mi>c</mi><mn>1</mn></msub><mo>.</mo><mi>g</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>≤</mo><mi>T</mi><mfenced
    open="(" close=")"><mi>n</mi></mfenced><mo>≤</mo><msub><mi>c</mi><mn>2</mn></msub><mo>⋅</mo><mi>g</mi><mfenced
    open="(" close=")"><mi>n</mi></mfenced></mrow></mfenced></mrow></mrow></math>](img/356.png)'
  prefs: []
  type: TYPE_IMG
- en: '*<st c="35008">Figure 3</st>**<st c="35016">.4</st>* <st c="35018">illustrates
    hypothetical graphs for</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/43.png)
    <st c="35055"><st c="35056">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/293.png)<st
    c="35060"><st c="35065">.</st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.4: Demonstrating the concept of ​<?AID d835?><?AID dec9?> ​notation.
    The running time ​T​(n)​​ is asymptotically bounded between ​​c​ 1​​ . g​(n)​​
    and ​​​c​ 2​​ . g​(​​n​)​​​​, where ​​c​ 1​​, ​c​ 2​​ > 0​. This means that for
    sufficiently large input sizes​ n​, specifically, for all ​n ≥ ​n​ 0​​​, the value
    of ​T​(n)​​ will not be lower than ​​c​ 1​​ . g​(n)​​ and will not exceed ​​c​ 2​​ . g​(n)​​.](img/B22248_03_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '<st c="35089">Figure 3.4: Demonstrating the concept of</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi
    mathvariant="bold">θ</mi></mrow></math>](img/359.png)<st c="35130"><st c="35131">notation.</st>
    <st c="35141">The running time</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/243.png)
    <st c="35158"><st c="35159">is asymptotically bounded between</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi
    mathvariant="bold-italic">c</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>.</mml:mo><mml:mi
    mathvariant="bold-italic">g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/361.png)
    <st c="35194"><st c="35195">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi
    mathvariant="bold-italic">c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>.</mml:mo><mml:mi
    mathvariant="bold-italic">g</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="bold-italic">n</mml:mi><mml:mo>)</mml:mo></mml:math>](img/362.png)<st
    c="35200"><st c="35201">, where</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><msub><mi
    mathvariant="bold-italic">c</mi><mn>1</mn></msub><mo>,</mo><msub><mi mathvariant="bold-italic">c</mi><mn>2</mn></msub><mo>></mo><mn>0</mn></mrow></mrow></math>](img/363.png)<st
    c="35209"><st c="35225">. This means that for sufficiently large input sizes</st>![<math
    xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi mathvariant="bold-italic">n</mi></mrow></math>](img/364.png)<st
    c="35277"><st c="35279">, specifically, for all</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">n</mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/299.png)<st
    c="35303"><st c="35306">, the value of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/243.png)
    <st c="35321"><st c="35322">will not be lower than</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi
    mathvariant="bold-italic">c</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>.</mml:mo><mml:mi
    mathvariant="bold-italic">g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/361.png)
    <st c="35346"><st c="35347">and will not exceed</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi
    mathvariant="bold-italic">c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>.</mml:mo><mml:mi
    mathvariant="bold-italic">g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/368.png)<st
    c="35368"><st c="35372">.</st></st></st></st></st></st></st></st></st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="35373">Example 3.11</st>**<st c="35386">:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35388">Prove that</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>-</mml:mo><mml:mn>4</mml:mn><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mi>θ</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/369.png)
    <st c="35399"><st c="35412">by determining</st> <st c="35426">the constants</st>
    ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><msub><mi>c</mi><mn>1</mn></msub><mo>,</mo><msub><mi>c</mi><mn>2</mn></msub><mo>,</mo></mrow></mrow></math>](img/370.png)<st
    c="35441"><st c="35447">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/227.png)<st
    c="35451"><st c="35452">.</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="35453">Solution</st>**<st c="35462">: From the formal definition of</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>θ</mml:mi></mml:math>](img/372.png)
    <st c="35495"><st c="35496">notation, we need to</st> <st c="35518">show that</st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>.</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>≤</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>-</mml:mo><mml:mn>4</mml:mn><mml:mi>n</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>.</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math>](img/373.png)
    <st c="35527"><st c="35543">for all</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi><mml:mi> </mml:mi><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/230.png)<st
    c="35551"><st c="35552">. We divide both sides of both inequalities</st> <st c="35596">by</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math>](img/231.png)<st
    c="35599"><st c="35600">:</st></st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfrac><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math>](img/376.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="35607">For</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>8</mml:mn></mml:math>](img/377.png)<st
    c="35611"><st c="35612">, we will have</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/378.png)
    <st c="35627"><st c="35628">and for large</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)<st
    c="35643"><st c="35692">,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/380.png)<st
    c="35694"><st c="35695">.</st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="35696">Example 3.12</st>**<st c="35709">:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35711">Prove</st> <st c="35717">that</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>6</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>≠</mml:mo><mml:mi
    mathvariant="normal">θ</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/381.png)<st
    c="35722"><st c="35723">.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="35724">Solution</st>**<st c="35733">: First, we</st> <st c="35745">attempt
    to prove that</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>6</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mi
    mathvariant="normal">θ</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>.</mml:mo></mml:math>](img/382.png)
    <st c="35768"><st c="35769">To do this, we need to show that there exist positive
    constants</st>![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><msub><mi>c</mi><mn>1</mn></msub></mrow></math>](img/383.png)
    <st c="35833"><st c="35835">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math>](img/384.png)
    <st c="35840"><st c="35841">such that the following is</st> <st c="35869">the
    case:</st></st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>≤</mml:mo><mml:mn>6</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math>](img/385.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="35880">Let’s consider the second inequality and divide both sides</st>
    <st c="35939">by</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math>](img/231.png)<st
    c="35942"><st c="35943">:</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>6</mml:mn><mml:mi>n</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math>](img/387.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="35945">For large</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)<st
    c="35955"><st c="36004">, this inequality does not hold because</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math>](img/384.png)
    <st c="36044"><st c="36045">is a constant.</st> <st c="36061">Therefore, it is
    impossible to find a constant</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math>](img/384.png)
    <st c="36108"><st c="36109">that satisfies this inequality for all large</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)<st
    c="36155"><st c="36204">. This disproves that</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math>](img/231.png)
    <st c="36226"><st c="36227">is a tight bound for</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>6</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:math>](img/393.png)<st
    c="36249"><st c="36252">. Hence, we conclude</st> <st c="36273">that</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>6</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>≠</mml:mo><mml:mi>θ</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/394.png)<st
    c="36278"><st c="36279">.</st></st></st></st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="36280">As mentioned earlier,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>θ</mml:mi></mml:math>](img/395.png)
    <st c="36303"><st c="36335">notation represents a set of functions.</st> *<st
    c="36375">Table 3.4</st>* <st c="36384">provides examples of functions that are
    members of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi
    mathvariant="normal">θ</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/396.png)
    <st c="36436"><st c="36472">along with their corresponding constants</st> ![<math
    xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><msub><mi>c</mi><mn>1</mn></msub><mo>,</mo></mrow></mrow></math>](img/397.png)
    <st c="36513">![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math>](img/384.png)<st
    c="36534"><st c="36535">,</st> <st c="36537">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/227.png)<st
    c="36541"><st c="36542">.</st></st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>T</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/400.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math>](img/401.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math>](img/402.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math>](img/403.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:math>](img/404.png)
    | <st c="36585">1</st> | <st c="36586">1</st> | <st c="36587">0</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>2</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mn>4</mml:mn></mml:math>](img/405.png)
    | <st c="36589">1</st> | <st c="36590">2</st> | <st c="36591">0</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>n</mml:mi></mml:math>](img/406.png)
    | <st c="36602">1</st> | <st c="36603">2</st> | <st c="36604">1</st> |'
  prefs: []
  type: TYPE_TB
- en: '| ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mn>10</mml:mn><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:math>](img/407.png)
    | <st c="36606">1</st> | <st c="36607">10</st> | <st c="36609">0</st> |'
  prefs: []
  type: TYPE_TB
- en: '<st c="36611">Table 3.4: Demonstrating some members of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold">θ</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">n</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/408.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="36653">Example 3.13</st>**<st c="36665">:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="36667">Illustrate the difference between</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="normal">θ</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/409.png)
    <st c="36701"><st c="36702">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/222.png)<st
    c="36706"><st c="36707">.</st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="36708">Solution</st>**<st c="36717">: The major difference between
    these two asymptotic bounds is that</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/411.png)
    <st c="36785"><st c="36793">describes an upper bound that holds for all inputs,
    while</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi
    mathvariant="normal">θ</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi>g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/412.png)
    <st c="36851"><st c="36859">represents a tight bound, meaning it provides</st>
    <st c="36904">both upper and lower bounds and thus does not hold for every input.</st>
    *<st c="36973">Table 3.5</st>* <st c="36982">illustrates this difference using
    the insertion sort algorithm as</st> <st c="37049">an example.</st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | ![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mrow><mi>O</mi><mo>(</mo><mi>g</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>)</mo></mrow></mrow></mrow></math>](img/413.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi mathvariant="bold">θ</mml:mi><mml:mfenced separators="&#124;"><mml:mrow><mml:mi>g</mml:mi><mml:mfenced
    separators="&#124;"><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/414.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="37069">Worst case scenario (</st>****<st c="37090">unsorted input)</st>**
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math>](img/415.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math>](img/415.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **<st c="37149">Sorted input</st>** | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math" display="block"><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math>](img/415.png)
    | ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>n</mml:mi></mml:math>](img/418.png) |'
  prefs: []
  type: TYPE_TB
- en: '<st c="37208">Table 3.5: Illustrate the difference between</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi
    mathvariant="bold-italic">θ</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi
    mathvariant="bold-italic">g</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/419.png)
    <st c="37253"><st c="37277">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi mathvariant="bold-italic">g</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math>](img/420.png)
    <st c="37281"><st c="37282">in insertion sort algorithm</st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="37310">In this section, we explored various scenarios of time complexities
    before transitioning to asymptotic bounds.</st> <st c="37422">We provided formal
    definitions of asymptotic bounds and included several examples to demonstrate
    how to solve them and estimate</st> <st c="37550">their parameters.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="37567">Confronting the unsolvable NP-hard problems</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="37611">In previous sections, we explored various rates of growth and
    learned how to describe them using formal representations, particularly asymptotic
    notations.</st> <st c="37768">While studying these growth rates, we encountered
    problems that appeared highly challenging, yet we did not address their solvability.</st>
    <st c="37903">In this section, we will focus on problems that go beyond our computational
    capabilities, discussing NP-hard problems that are inherently difficult, if not
    impossible, to</st> <st c="38074">solve efficiently.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="38092">In computer science, there exists a category that challenges our
    ability to find efficient solutions.</st> <st c="38195">These problems, known</st>
    <st c="38216">as</st> **<st c="38220">NP-hard problems</st>**<st c="38236">, represent
    some of the most complex and difficult challenges in computer science.</st> <st
    c="38319">Before exploring NP-hard problems, it is essential to understand why
    some problems cannot be solved efficiently, or in some cases,</st> <st c="38450">at
    all:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="38457">Inherent complexity</st>**<st c="38477">: Certain problems
    are intrinsically complex, requiring an astronomical number of steps to solve
    as the size of the input grows.</st> <st c="38607">This complexity often makes
    it impractical, if not impossible, to find a solution within a reasonable timeframe.</st>
    <st c="38720">For example, problems that involve checking all possible configurations
    or combinations, such as TSP, can have a factorial or exponential number of</st>
    <st c="38868">possible solutions.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="38887">Resource constraints</st>**<st c="38908">: Even with modern
    computing power, the resources required (time, memory, or both) to solve some
    problems can exceed feasible limits.</st> <st c="39043">Problems that demand more
    computational resources than are available become</st> <st c="39119">effectively
    unsolvable.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="39142">Non-deterministic nature</st>**<st c="39167">: Some problems
    can be verified quickly if a solution is given, but finding the solution itself
    requires exploring an exponentially large search space.</st> <st c="39320">These
    problems fall into the NP class, where solutions can be checked in polynomial
    time, but finding them is not feasible with</st> <st c="39448">current algorithms.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="39467">Undecidability</st>**<st c="39482">: Certain problems are undecidable,
    meaning there is no algorithm that can determine the solution for all possible
    inputs.</st> <st c="39606">The most famous example is</st> <st c="39632">the</st>
    **<st c="39637">Halting problem</st>**<st c="39652">, which asks whether a given
    computer program will eventually halt or run forever.</st> <st c="39735">Alan
    Turing proved that</st> <st c="39759">no algorithm can solve this problem for
    all possible programs</st> <st c="39821">and inputs.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="39832">Complexities of NP, NP-complete, and NP-hard</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="39877">In computational complexity theory, the classes</st> **<st c="39926">NP</st>**<st
    c="39928">,</st> **<st c="39930">NP-complete</st>**<st c="39941">, and</st> **<st
    c="39947">NP-hard</st>** <st c="39954">are used to categorize problems based on
    their computational difficulty and the resources required to solve them.</st>
    <st c="40069">These classifications have significant connections to asymptotic
    bounds, helping to understand the theoretical limits of algorithmic performance.</st>
    <st c="40215">The following is a short description of</st> <st c="40255">these
    problems:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="40270">NP</st>**<st c="40273">: NP is</st> <st c="40281">the class
    of decision problems for which a given solution can be verified as correct or
    incorrect in polynomial time by a deterministic Turing machine.</st> <st c="40434">If
    a problem is in NP, there exists an algorithm that can verify a solution in</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/421.png)
    <st c="40513"><st c="40519">time for some</st> <st c="40533">constant</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/422.png)<st
    c="40542"><st c="40543">.</st></st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="40544">NP-complete</st>**<st c="40556">: NP-complete problems</st>
    <st c="40579">are a subset of NP problems that are both in NP and as hard as any
    problem in NP.</st> <st c="40662">A problem is NP-complete if every problem in
    NP can be reduced to it using a polynomial-time reduction.</st> <st c="40766">Solving
    an NP-complete problem efficiently (in polynomial time) would imply that every
    problem in NP can be solved in polynomial time, effectively collapsing the complexity
    classes P and NP.</st> <st c="40957">The existence of a polynomial-time algorithm
    for any NP-complete problem remains one of the most significant open questions
    in</st> <st c="41084">computer science.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="41101">NP-hard</st>**<st c="41109">: NP-hard problems</st> <st c="41128">represent
    a class of computational problems that are at least as challenging as the most
    difficult problems within the NP complexity class.</st> <st c="41269">In contrast
    to NP-complete problems, NP-hard problems are not restricted to decision problems
    (yes/no questions) and are not necessarily solvable within NP itself.</st> <st
    c="41433">NP-hard problems are often characterized by exponential time complexity.</st>
    <st c="41506">If a problem is NP-hard, there is no known polynomial-time algorithm
    to solve it, and its asymptotic bounds are typically represented by super-polynomial
    functions such as</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/71.png)
    <st c="41678"><st c="41679">or</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>!</mml:mo><mml:mo>)</mml:mo></mml:math>](img/424.png)<st
    c="41682"><st c="41711">.</st></st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="41712">NP-hard problems are among the most challenging and complex problems
    in computational theory.</st> <st c="41807">They are defined as problems to which
    any NP problem can be reduced in polynomial time.</st> <st c="41895">However,
    unlike NP-complete problems, NP-hard problems do not need to be decision problems
    and do not have to belong to the NP class.</st> <st c="42029">Solving an NP-hard
    problem efficiently would mean solving all NP problems efficiently, which is currently
    beyond</st> <st c="42142">our reach.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="42152">The study of NP-hard problems is crucial because it helps us understand
    the limits of computational power and the boundaries of what can be feasibly solved.</st>
    <st c="42310">By confronting these unsolvable or intractable problems, researchers
    strive to develop better heuristics, approximations, and theoretical insights
    that can lead to more efficient algorithms for a wide range</st> <st c="42517">of
    applications.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="42533">The classifications NP, NP-complete, and NP-hard provide a framework
    for understanding the computational difficulty of problems.</st> <st c="42663">These
    classes are closely related to asymptotic bounds, as they help to identify the
    limits of algorithm efficiency and the potential for finding polynomial time solutions.</st>
    <st c="42836">Understanding these complexity classes is essential for determining
    the feasibility of solving problems within practical time constraints and for
    guiding the development of</st> <st c="43009">efficient algorithms.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="43030">Summary</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="43038">In</st> [*<st c="43042">Chapter 3</st>*](B22248_03_split_000.xhtml#_idTextAnchor033)<st
    c="43051">, we examined the concept of the rate of growth in algorithmic complexity,
    highlighting its importance for understanding how an algorithm’s running time
    scaled with increasing input size.</st> <st c="43239">This understanding was crucial
    for predicting algorithm behavior and making informed design decisions.</st> <st
    c="43342">We covered a range of growth rates, from constant time</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:math>](img/44.png)
    <st c="43397"><st c="43398">to factorial time</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mo>!</mml:mo></mml:mrow></mml:mfenced></mml:math>](img/77.png)<st
    c="43417"><st c="43421">, and discussed how these rates impacted the efficiency
    and practicality of algorithms, particularly when dealing with</st> <st c="43540">large
    datasets.</st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="43555">We also introduced various asymptotic notations, such as Big</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi></mml:math>](img/5.png)<st
    c="43617"><st c="43624">,</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>Ω</mml:mi></mml:math>](img/428.png)<st
    c="43626"><st c="43627">, and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>ϴ</mml:mi></mml:math>](img/429.png)<st
    c="43633"><st c="43634">, to formally describe the upper, lower, and tight bounds
    of an algorithm’s running time.</st> <st c="43724">Through examples and comparisons,
    we demonstrated how different growth rates influenced computational resources
    and performance.</st> <st c="43853">This chapter laid the foundation for recognizing
    and analyzing the complexity of algorithms, providing the necessary tools to evaluate
    and compare their efficiency in</st> <st c="44020">real-world applications.</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="44044">In the next chapter, we deep dive into recursive algorithms and
    discuss how we model the running time using recurrence functions and then study
    the behavior of the algorithms using methods to estimate</st> <st c="44246">their
    complexities.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="44265">In the next chapter, we will take a deep dive into recursive algorithms,
    exploring how their running time can be modeled using recurrence relations.</st>
    <st c="44415">Recurrence relations provide a powerful tool for expressing the
    time complexity of recursive processes by breaking down the problem into smaller
    subproblems and establishing a relationship between them.</st> <st c="44618">We
    will discuss various techniques to solve these recurrence relations, such as the
    master theorem and substitution method.</st> <st c="44742">These methods will
    help us to accurately estimate the complexities of recursive algorithms and understand
    their behavior as the input size grows.</st> <st c="44888">This deeper understanding
    of recursive algorithms will further enhance our ability to design efficient and
    effective solutions to complex</st> <st c="45026">computational problems.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="45049">References and further reading</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*<st c="45080">Introduction to Algorithms</st>*<st c="45107">. By Thomas H.</st>
    <st c="45122">Cormen, Charles E.</st> <st c="45141">Leiserson, Ronald L.</st>
    <st c="45162">Rivest, and Clifford Stein.</st> <st c="45190">Fourth Edition.</st>
    <st c="45206">MIT</st> <st c="45210">Press.</st> <st c="45217">2022.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="45222">Algorithm Design</st>*<st c="45239">. By Jon Kleinberg and Éva
    Tardos.</st> <st c="45274">1st Edition.</st> <st c="45287">Pearson.</st> <st c="45296">2005.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '<st c="45301">The</st> *<st c="45306">Art of Computer Programming, Volume 1:
    Fundamental Algorithms</st>*<st c="45367">. Donald E.</st> <st c="45379">Knuth.</st>
    <st c="45386">Third edition.</st> <st c="45401">Addison-Wesley</st> <st c="45416">Professional.</st>
    <st c="45430">1997.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="45435">Algorithms in a Nutshell: A Practical Guide</st>*<st c="45479">.
    By George Heineman, Gary Pollice, Stanley Selkow.</st> <st c="45531">2nd Edition.</st>
    <st c="45544">O’Reilly</st> <st c="45553">Media.</st> <st c="45560">2016.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="45565">Algorithms</st>*<st c="45576">. By Robert Sedgewick and Kevin
    Wayne.</st> <st c="45615">Fourth Edition.</st> <st c="45631">Addison-Wesley</st>
    <st c="45646">Professional.</st> <st c="45660">2011.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="45665">Data Structures and Algorithm Analysis in C++</st>*<st c="45711">.
    By Mark Allen Weiss.</st> <st c="45734">Fourth Edition.</st> <st c="45750">Pearson.</st>
    <st c="45759">2013.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="45764">Discrete Mathematics and Its Applications</st>*<st c="45806">.
    By Kenneth H.</st> <st c="45822">Rosen.</st> <st c="45829">McGraw-Hill Science/Engineering/Math.</st>
    <st c="45867">Twelfth edition.</st> <st c="45884">McGraw-Hill.</st> <st c="45897">2012.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="45902">Concrete Mathematics: A Foundation for Computer Science</st>*<st
    c="45958">. By Ronald L.</st> <st c="45973">Graham, Donald E.</st> <st c="45991">Knuth,
    and Oren Patashnik.</st> <st c="46018">Second Edition.</st> <st c="46034">Addison-Wesley.</st>
    <st c="46050">1994.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
