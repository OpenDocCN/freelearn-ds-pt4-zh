- en: <st c="0">9</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="2">Randomized Algorithms</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="23">Building on the deterministic algorithms discussed in previous chapters,
    we now turn our attention to situations where uncertainty and randomness are significant
    factors.</st> <st c="195">In this chapter, we will explore how to design algorithms
    that make the best possible decisions despite the presence of unpredictable elements.</st>
    <st c="339">Randomized algorithms introduce elements of chance into their logic,
    providing innovative ways to tackle problems that may be challenging or inefficient
    to solve using purely deterministic methods.</st> <st c="537">These algorithms
    can often simplify solutions, improve performance, and offer new perspectives
    on problem-solving.</st> <st c="652">Throughout this chapter, we will examine
    various strategies and techniques that leverage randomness to achieve desired
    outcomes.</st> <st c="781">By understanding the principles behind randomized algorithms,
    we can develop robust solutions that excel in uncertain environments.</st> <st
    c="913">Our discussion will cover theoretical foundations, practical applications,
    and examples that illustrate the power and versatility of incorporating randomness
    into</st> <st c="1076">algorithm design.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1093">Please note that although we use some preliminary topics in probability
    theory in this chapter, a sufficient amount of familiarity with probability theory
    is necessary to understand this chapter holistically.</st> <st c="1303">If you
    are not well versed in probability theory, we recommend refreshing your knowledge
    using reputable reference books and textbooks on the subject</st> <st c="1453">before
    proceeding.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1471">In this chapter, we will cover the</st> <st c="1507">following
    topics:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1524">A review of</st> <st c="1537">probabilistic algorithms</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1561">Analysis of</st> <st c="1574">randomized algorithms</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1595">Case studies</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1608">A review of probabilistic algorithms</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="1645">To begin, let’s explore whether we can apply the concepts covered
    so far to solve the following</st> <st c="1742">hypothetical problems:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1764">A new online dating app,</st> *<st c="1790">Matcher</st>*<st c="1797">,
    has been developed to help users find potential partners.</st> <st c="1857">The
    app functions like a game, aiming to match users with their best</st> <st c="1926">possible
    dates:</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1941">There are</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>N</mml:mi></mml:math>](img/1469.png)
    <st c="1952"><st c="1953">potential matches available on the app (the total number
    of matches is unknown to the users).</st> <st c="2048">Let’s consider a user</st>
    <st c="2070">named Tom.</st></st>
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="2080">When Tom opens the</st> *<st c="2100">Matcher</st>* <st c="2107">app,
    he is presented with one potential match at a time, selected randomly.</st> <st
    c="2184">Tom has the option to either like (swipe right) or dislike (swipe left)</st>
    <st c="2256">each profile.</st>
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="2269">Tom’s decisions are irreversible; once he swipes right or left
    on a profile, he cannot change his mind.</st> <st c="2374">All decisions</st>
    <st c="2388">are final.</st>
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="2398">Tom can like a maximum of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/23.png)
    <st c="2425"><st c="2426">profiles (where</st> *<st c="2443">n</st>* <st c="2444">is
    much smaller than</st> *<st c="2466">N</st>*<st c="2467">).</st> <st c="2470">Once
    Tom has liked</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="2489"><st c="2538">profiles, the app will no longer show him any</st> <st
    c="2584">more profiles.</st></st></st>
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="2598">The interaction ends either when Tom has liked</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/1054.png)
    <st c="2646"><st c="2647">profiles or when there are no more profiles left</st>
    <st c="2697">to show.</st></st>
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="2705">It is important to note that liking a profile does not guarantee
    a match; it still requires the other person to like Tom’s</st> <st c="2829">profile
    back.</st>
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="2842">The challenge for Tom is to make the best possible use of his</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/23.png)
    <st c="2905"><st c="2906">likes to choose the most suitable matches.</st> <st
    c="2950">He needs to decide when to stop browsing and start liking profiles to
    maximize the chances of selecting the best</st> <st c="3063">available options.</st></st>
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="3081">Fang has been invited to her friend’s house, which is located in
    the middle of a long, one-way street.</st> <st c="3185">Parking is allowed only
    on one side of the street.</st> <st c="3236">The street is busy, and finding a
    parking spot is challenging.</st> <st c="3299">Based on experience, about 10%
    of the</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/210.png)
    <st c="3337"><st c="3338">parking spots are typically available at any given time.</st>
    <st c="3396">Fang can only see one spot at a time as she passes by and cannot
    see the spots ahead.</st> <st c="3482">The objective is to determine the optimal
    moment for her to decide to take an available</st> <st c="3570">parking spot.</st></st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '<st c="3583">Both problems mentioned share a fundamental similarity: they are
    all search problems.</st> <st c="3670">In each scenario, the objective is to identify
    the best option from a sequence</st> <st c="3749">of possibilities:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="3766">Tom is searching for the best match on a</st> <st c="3808">dating
    app</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="3818">Fang is trying to find the closest parking spot to her</st> <st
    c="3874">friend’s house</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="3888">However, these problems differ from traditional search settings.</st>
    <st c="3954">Unlike classical search problems where all data items are available
    for comparison, here, data items appear sequentially and unpredictably.</st> <st
    c="4094">This sequential arrival of data means we cannot predict the next item,
    rendering standard comparison-based search</st> <st c="4208">algorithms ineffective.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="4231">In these scenarios, the challenge is not about identifying the
    best data item through comparison but deciding when to stop searching and</st>
    <st c="4369">make a selection.</st> <st c="4387">The decision-making process involves
    evaluating each option as it arrives and determining whether to accept it or continue
    searching for a potentially better option.</st> <st c="4553">The following are
    key characteristics of</st> <st c="4594">these problems:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="4609">Sequential data arrival</st>**<st c="4633">: Data items arrive
    one at a time, and decisions must be made immediately without knowing</st> <st
    c="4724">future data.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="4736">Irreversible decisions</st>**<st c="4759">: Once a decision
    is made to accept or reject an option, it cannot be reversed.</st> <st c="4840">This
    adds a layer of complexity as you cannot revisit</st> <st c="4894">previous choices.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="4911">Optimal stopping rule</st>**<st c="4933">: The core of these
    problems is finding the optimal stopping point.</st> <st c="5002">This involves
    deciding at what point to stop searching and accept the current option as the</st>
    <st c="5094">best available.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="5109">Optimal stopping theory provides a framework for solving these
    types of problems.</st> <st c="5192">The theory helps in determining the point
    at which the probability of finding a better option is outweighed by the cost
    of continuing the search.</st> <st c="5338">For example, let’s consider</st> <st
    c="5366">the following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5380">Tom can use a strategy where he initially reviews a set number
    of profiles without making any decisions (to gather information about the quality
    of matches) and then selects the next profile that is better than those he has
    reviewed</st> <st c="5614">so far</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="5620">Fang can drive past the first few parking spots (to gauge availability
    and proximity) and then take the first spot that is closer than those she has</st>
    <st c="5770">already seen</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="5782">These problems exemplify the practical application of optimal stopping
    theory in real-life scenarios where data arrives</st> <st c="5903">sequentially
    and decisions must be made in real time.</st> <st c="5957">By understanding and
    applying this theory, one can make informed decisions on when to stop searching
    and accept an option, even in the face of uncertainty and incomplete information.</st>
    <st c="6140">This approach shifts the focus from finding the best data item to
    determining the optimal moment to</st> <st c="6240">make</st> <st c="6245">a decision.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="6256">The optimal stopping problem is a prime example of a randomized
    algorithm.</st> <st c="6332">Before we explore randomized algorithms in detail,
    let’s revisit the fundamental concept of an algorithm.</st> <st c="6438">An algorithm
    is a system that transforms a set of input data into a set of output data.</st>
    *<st c="6526">Figure 9</st>**<st c="6534">.1</st>* <st c="6536">provides a simple
    block diagram to illustrate</st> <st c="6583">this concept.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.1: A block diagram showing the mapping of input data to output data
    through an algorithm](img/B22248_09_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '<st c="6630">Figure 9.1: A block diagram showing the mapping of input data
    to output data through an algorithm</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="6727">Let’s revisit the concept of an algorithm through the lens of mapping
    input to output.</st> <st c="6815">Assume we have an input dataset represented
    by</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mo><</mml:mo><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>></mml:mo></mml:math>](img/1475.png)<st
    c="6862"><st c="6874">. An algorithm, which consists of a set of procedural instructions,
    transforms</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>A</mml:mi></mml:math>](img/1033.png)
    <st c="6953"><st c="6954">into an</st> <st c="6963">output</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>B</mml:mi><mml:mo>=</mml:mo><mml:mo><</mml:mo><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>></mml:mo></mml:math>](img/1477.png)<st
    c="6970"><st c="6994">.</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="6995">In the context of deterministic algorithms, this transformation
    process is consistent and repeatable.</st> <st c="7098">Given the same input</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>A</mml:mi></mml:math>](img/1478.png)<st
    c="7119"><st c="7120">, a deterministic algorithm will always produce the same
    output</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>B</mml:mi></mml:math>](img/1479.png)<st
    c="7184"><st c="7185">. This predictability is a hallmark of deterministic algorithms,
    ensuring that their behavior is fully determined by the input</st> <st c="7312">they
    receive.</st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7325">For instance, consider the sorting and searching algorithms we
    have introduced in previous chapters.</st> <st c="7427">These algorithms are deterministic
    because they guarantee the same result each time they are run with the</st> <st
    c="7533">same input.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7544">Deterministic algorithms offer predictability and reliability by
    ensuring that the same input will always produce the same output.</st> <st c="7676">This
    characteristic is fundamental to many algorithms used in computer science, especially
    in tasks that require consistent and repeatable results, such as sorting and searching.</st>
    <st c="7855">Understanding this concept lays the groundwork for exploring randomized
    algorithms, which introduce elements of chance to achieve different goals and
    handle uncertainty in</st> <st c="8027">unique ways.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8039">Non-deterministic algorithms</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**<st c="8068">Non-deterministic algorithms</st>** <st c="8097">are theoretical
    constructs used primarily in the study of computational complexity.</st> <st c="8182">They
    assume the existence of a “non-deterministic” machine, such as a non-deterministic
    Turing machine, which can make arbitrary choices to explore different computational
    paths simultaneously.</st> <st c="8376">Non-deterministic algorithms are often
    used to define classes of problems, such as</st> **<st c="8459">nondeterministic
    polynomial time</st>** <st c="8491">(</st>**<st c="8493">NP</st>**<st c="8495">),
    which includes problems for which a solution can be verified in polynomial time
    by a deterministic algorithm.</st> <st c="8609">Non-deterministic algorithms are
    not practically implementable on standard deterministic machines.</st> <st c="8708">They
    serve as a way to understand the potential power of parallel computation and to
    classify</st> <st c="8802">problem complexity.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8821">Note</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8826">Non-deterministic algorithms are not practically implementable
    on standard deterministic machines.</st> <st c="8926">Randomized algorithms, on
    the other hand, are practical algorithms that use random numbers to influence
    their decision-making process.</st> <st c="9061">These algorithms can be implemented
    on standard computers and have applications in many areas of computer science</st>
    <st c="9175">and engineering.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '*<st c="9191">Figure 9</st>**<st c="9200">.2</st>* <st c="9202">provides a
    simple block diagram to illustrate the concept of randomized algorithms.</st>
    <st c="9287">Randomized algorithms include an element of chance that acts as an
    additional hidden input, which we cannot control.</st> <st c="9404">This element
    of randomness introduces uncertainty, effectively serving as a second input to
    the algorithm.</st> <st c="9511">It is this inherent randomness that causes the
    algorithm to have different behavior and/or performance even when the explicit
    input remains</st> <st c="9651">the same.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9660">Consider the</st> **<st c="9674">randomized quick sort</st>** <st
    c="9695">algorithm.</st> <st c="9707">Unlike the traditional quick sort, which
    typically selects a fixed pivot (such as the first, last, or middle element),
    randomized quick sort selects a pivot at random.</st> <st c="9875">This random
    selection can lead to different sequences of comparisons and swaps each time the
    algorithm is run, even on the same input sequence.</st> <st c="10019">For instance,
    given the input sequence</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mrow><mi
    mathvariant="normal"> </mi><mi>A</mi><mo>=</mo><mo>[</mo><mn>3</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>9</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>5</mn><mo>]</mo></mrow></mrow></mrow></math>](img/1480.png)<st
    c="10058"><st c="10059">, a traditional quick sort algorithm might always choose
    the middle element as the pivot.</st> <st c="10149">In contrast, randomized quick
    sort might choose any element as the pivot, resulting in a different sequence
    of steps and partitioning in each run.</st> <st c="10296">Consequently, the intermediate
    steps can vary, potentially leading to different overall running times even with
    the</st> <st c="10412">same data.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.2: A block diagram showing the mapping of input data to output data
    through a non-deterministic algorithm](img/B22248_09_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '<st c="10467">Figure 9.2: A block diagram showing the mapping of input data
    to output data through a non-deterministic algorithm</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10581">Any random input to the algorithm introduces variability in the
    algorithm’s performance and behavior.</st> <st c="10684">While the average case
    time complexity of randomized quick sort remains</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/1481.png)<st
    c="10756"><st c="10765">, the actual runtime for a specific instance can differ
    due to the random pivot selection.</st> <st c="10856">In the worst case, if the
    pivot selection is particularly poor repeatedly, the performance can degrade,
    although such scenarios are</st> <st c="10988">statistically unlikely.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11011">By introducing randomness, these</st> <st c="11045">algorithms
    can avoid pathological cases that deterministic algorithms might encounter.</st>
    <st c="11132">For instance, randomized quick sort avoids the worst-case scenario
    of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mfenced
    separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math>](img/1045.png)
    <st c="11202"><st c="11208">that occurs in traditional quick sort with certain
    inputs.</st> <st c="11267">Randomized algorithms are often more robust and adaptable.</st>
    <st c="11326">They perform well on average across a wide range of inputs, making
    them versatile tools in practice.</st> <st c="11427">In the next section, we explore
    the framework to analyze</st> <st c="11484">randomized algorithms.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11506">To effectively study randomized algorithms, we need to explore
    several</st> <st c="11578">key topics:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="11589">Analysis of randomized algorithms</st>**<st c="11623">: Understanding
    the behavior of algorithms in terms of probability and expected outcomes is crucial.</st>
    <st c="11725">This involves analyzing the average-case performance rather than
    focusing solely on worst-case scenarios.</st> <st c="11831">This topic will be
    covered in detail in the upcoming section titled</st> *<st c="11899">Analysis
    of</st>* *<st c="11911">randomized algorithms</st>*<st c="11932">.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="11933">Randomized data structures</st>**<st c="11960">: Designing
    data structures that incorporate randomness can lead to more efficient operations.</st>
    <st c="12056">Examples include skip lists and hash tables.</st> <st c="12101">Skip
    lists, in particular, will be explored in</st> [*<st c="12148">Chapter 11</st>*](B22248_11.xhtml#_idTextAnchor164)<st
    c="12158">.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="12159">Case studies</st>**<st c="12172">: To apply the concepts learned,
    we will analyze specific problems under uncertainty, such as those mentioned at
    the beginning of this section.</st> <st c="12317">Detailed solutions and discussions
    will be presented in the section titled</st> *<st c="12392">Case studies</st>*<st
    c="12404">.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="12405">By exploring these topics, we will gain a comprehensive understanding
    of how randomized algorithms operate and how to leverage them effectively in</st>
    <st c="12553">various applications.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="12574">Analysis of randomized algorithms</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="12608">To analyze</st> <st c="12620">randomized algorithms, we often
    use</st> **<st c="12656">probabilistic analysis</st>**<st c="12678">. Instead</st>
    <st c="12687">of focusing on the worst-case scenario, we examine the</st> *<st
    c="12743">expected</st>* <st c="12751">performance of the algorithm over all possible
    random choices.</st> <st c="12815">This expected value provides a more realistic
    picture of the algorithm’s typical behavior.</st> <st c="12906">Here are the</st>
    <st c="12919">key principles:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="12934">We calculate the expected value of key performance metrics, such
    as running time or space usage.</st> <st c="13032">This involves averaging the
    performance over all possible inputs, weighted by</st> <st c="13110">their probability.</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="13128">We study the distribution and variance of the algorithm’s performance
    metrics to understand how much they deviate from the expected value.</st> <st
    c="13268">This helps in assessing the reliability and consistency of</st> <st
    c="13327">the algorithm.</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="13341">The focus is on analyzing the algorithm’s behavior on typical
    or randomly chosen inputs rather than worst-case inputs.</st> <st c="13461">This
    provides a more realistic measure of the algorithm’s</st> <st c="13519">practical
    performance.</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="13541">We use realistic input models that reflect the expected usage
    scenarios of the algorithm.</st> <st c="13632">For example, in sorting, assume
    inputs are randomly permuted rather than always sorted or</st> <st c="13722">reverse
    sorted.</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="13737">We establish performance bounds that hold with high probability.</st>
    <st c="13803">For example, an algorithm might run in</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:math>](img/997.png)
    <st c="13842"><st c="13851">time with high probability, even if it occasionally</st>
    <st c="13903">runs slower.</st></st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="13915">Random variables are employed to model the internal randomness
    of the algorithm.</st> <st c="13997">We analyze how these variables influence
    the algorithm’s behavior and performance.</st> <st c="14080">We also consider
    the independence or correlation between random variables to simplify the analysis
    or derive more accurate</st> <st c="14203">performance estimates.</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="14225">In addition to the principles discussed earlier, the analysis
    of randomized algorithms often involves specific techniques and models.</st> <st
    c="14360">Random sampling is a fundamental technique used to make decisions or
    estimate properties of larger datasets efficiently.</st> <st c="14481">Monte Carlo
    and Las Vegas algorithms leverage randomness in different ways.</st> <st c="14557">Monte
    Carlo algorithms provide probabilistic guarantees and run in fixed time with some
    probability of error, while Las Vegas algorithms guarantee correctness but have
    variable running times.</st> <st c="14749">Markov chains and random walks are
    essential models for analyzing more advanced randomized algorithms.</st> <st c="14852">Markov
    chains help understand the behavior of systems with state transitions, while random
    walks are used in various network algorithms and</st> <st c="14992">optimization
    problems.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15014">The approach to</st> <st c="15030">analysis can be either adaptive
    or adversarial.</st> <st c="15079">Adaptive analysis studies how algorithms respond
    to varying input conditions or environmental changes.</st> <st c="15182">Adversarial
    analysis, on the other hand, considers scenarios where inputs are designed to
    challenge the algorithm’s performance to its limits.</st> <st c="15325">It is
    important to note that while these principles and techniques are crucial for a
    comprehensive understanding of randomized algorithms, they extend beyond the scope
    of this book.</st> <st c="15507">Therefore, we will not cover all of these principles
    in</st> <st c="15563">detail here.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15575">It is often most effective to illustrate the analysis of randomized
    algorithms through a few examples, demonstrating the step-by-step process in detail.</st>
    <st c="15729">The first example is the well-known</st> *<st c="15765">Monty Hall
    problem</st>*<st c="15783">. The second example is the</st> *<st c="15811">birthday
    paradox</st>* <st c="15827">and finally, we discuss the well-known</st> *<st c="15867">hiring</st>*
    *<st c="15874">secretary problem</st>*<st c="15891">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15892">Monty Hall problem</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="15911">The</st> **<st c="15916">Monty Hall problem</st>** <st c="15934">is
    a</st> <st c="15940">classic brain teaser that illustrates the power and sometimes
    counterintuitive nature of probabilistic reasoning, which is a core concept in
    the analysis of</st> <st c="16097">randomized algorithms.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '<st c="16119">The problem is as follows: You are presented with three doors
    (labeled as A, B, and C).</st> <st c="16208">Behind one door is a car, and behind
    the other two are goats.</st> <st c="16270">You pick a door (let’s say door A).</st>
    <st c="16306">The host, who knows what is behind each door, opens another door
    (let’s say door B) to reveal a goat.</st> <st c="16408">The host then offers you
    the choice to switch to the remaining closed door (door C).</st> <st c="16493">Should
    you stick with your initial choice or switch to maximize your chances of winning</st>
    <st c="16581">the car?</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="16589">The counterintuitive answer is yes, you should absolutely switch.</st>
    <st c="16656">Switching doors doubles your chances of winning the car.</st> <st
    c="16713">At first glance, it might seem that after one door is revealed, the
    odds are 50/50 between the remaining two doors.</st> <st c="16829">However, this
    is a common misconception.</st> <st c="16870">The correct strategy is to always
    switch doors, and here</st> <st c="16927">is why:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="16934">The probability that the car is behind door A (your initial</st>
    <st c="16995">choice):</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1484.png)<st
    c="17004"><st c="17005">.</st></st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="17006">The probability that the car is behind door B or</st> <st c="17056">C:</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1485.png)<st
    c="17059"><st c="17060">.</st></st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="17061">The host’s action of opening door B (which always reveals a goat)
    does not change the initial probabilities.</st> <st c="17171">Instead, it provides
    additional information that affects the distribution of</st> <st c="17248">these
    probabilities.</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="17268">Let’s break down the</st> <st c="17290">probabilities and consider
    the two possible scenarios for the location of</st> <st c="17364">the car:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="17372">The probability of the car being behind your initial choice (door</st>
    <st c="17439">A):</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1484.png)<st
    c="17443"><st c="17444">:</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="17445">If you stick with door A, you win the car with a probability</st>
    <st c="17506">of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1484.png)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="17510">If you switch to door C, you lose with a probability</st> <st
    c="17563">of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1484.png)</st>
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="17567">The probability of the car being behind one of the other doors
    (door B or door</st> <st c="17646">C):</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1485.png)<st
    c="17650"><st c="17651">:</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="17652">Since the host reveals a goat behind door B, the car must be behind
    door C if it is not behind</st> <st c="17747">door A</st>
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="17753">If you switch to door C, you win the car with a probability</st>
    <st c="17814">of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1485.png)</st>
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="17818">Then, by switching doors, you effectively bet on the probability
    that your initial choice was wrong, which is</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1491.png)<st
    c="17928"><st c="17932">. Therefore, switching doors increases your chances of
    winning the car from</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1492.png)
    <st c="18008"><st c="18010">to</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1491.png)<st
    c="18013"><st c="18017">. This counterintuitive result is a classic example of
    how human intuition can often be misleading in</st> <st c="18118">probabilistic
    scenarios.</st> <st c="18144">The Monty Hall problem highlights the importance
    of understanding probability and making decisions based on mathematical analysis
    rather than</st> <st c="18286">gut feelings.</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="18299">Birthday paradox</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="18316">The</st> **<st c="18321">birthday paradox</st>**<st c="18337">,
    also</st> <st c="18344">known as the</st> **<st c="18357">birthday problem</st>**<st
    c="18373">, is a famous probability problem that demonstrates a counterintuitive
    result.</st> <st c="18452">It deals with the likelihood that, in a group of people,
    at least two individuals will share the same birthday.</st> <st c="18564">The
    surprising aspect is how small the group needs to be for this probability to be</st>
    <st c="18648">relatively high.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '<st c="18664">The problem can be stated as follows: What is the probability
    that, in a group of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/1158.png)
    <st c="18747"><st c="18748">people, at least two people share the same birthday?</st>
    <st c="18802">Assume there are 365 days in a year, and each person’s birthday
    is equally likely to fall on any of</st> <st c="18902">these days.</st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="18913">To understand the birthday paradox, it is easier to calculate
    the complementary probability— the probability that no two people in the group
    share the same birthday—and then subtract this from 1\.</st> <st c="19110">Let’s
    break down the calculation of the complementary probability of the birthday problem</st>
    <st c="19200">as follows:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19211">The probability that the first person has a unique birthday is</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>365</mml:mn></mml:mrow><mml:mrow><mml:mn>365</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1495.png)
    <st c="19275"><st c="19281">(since no one else has been</st> <st c="19309">chosen
    yet)</st></st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="19320">The probability that the second person has a different birthday
    from the first</st> <st c="19400">is</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>364</mml:mn></mml:mrow><mml:mrow><mml:mn>365</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1496.png)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="19404">The probability that the third person has a different birthday
    from the first two</st> <st c="19486">is</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mn>363</mml:mn></mml:mrow><mml:mrow><mml:mn>365</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1497.png)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="19490">….</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="19492">For</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="19497"><st c="19546">people, the probability</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>P</mi><mfenced
    open="(" close=")"><mrow><mtext>unique</mtext><mtext>birthday</mtext></mrow></mfenced></mrow></mrow></math>](img/1499.png)
    <st c="19570"><st c="19589">that all birthdays are unique is</st> <st c="19622">as
    follows:</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mi>P</mi><mfenced
    open="(" close=")"><mrow><mtext>unique</mtext><mtext>birthday</mtext></mrow></mfenced><mo>=</mo><mfrac><mn>365</mn><mn>365</mn></mfrac><mo>×</mo><mfrac><mn>364</mn><mn>365</mn></mfrac><mo>×</mo><mfrac><mn>363</mn><mn>365</mn></mfrac><mo>×</mo><mo>…</mo><mo>×</mo><mfrac><mrow><mn>365</mn><mo>−</mo><mfenced
    open="(" close=")"><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfenced></mrow><mn>365</mn></mfrac></mrow></mrow></math>](img/1500.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: <st c="19675">Or, it is</st> <st c="19685">as follows:</st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mi>P</mi><mfenced
    open="(" close=")"><mrow><mtext>unique</mtext><mtext>birthday</mtext></mrow></mfenced><mo>=</mo><mrow><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><mfenced
    open="(" close=")"><mrow><mn>1</mn><mo>−</mo><mfrac><mi>i</mi><mn>365</mn></mfrac></mrow></mfenced></mrow></mrow></mrow></math>](img/1501.png)</st></st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="19738">Then, the probability</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>P</mi><mfenced
    open="(" close=")"><mrow><mtext>shared</mtext><mtext>birthday</mtext></mrow></mfenced></mrow></mrow></math>](img/1502.png)
    <st c="19760"><st c="19779">that at least two people share the same birthday is</st>
    <st c="19831">as follows:</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mi>P</mi><mfenced
    open="(" close=")"><mrow><mtext>shared</mtext><mtext>birthday</mtext></mrow></mfenced><mo>=</mo><mn>1</mn><mo>−</mo><mi>P</mi><mfenced
    open="(" close=")"><mrow><mtext>unique</mtext><mtext>birthday</mtext></mrow></mfenced></mrow></mrow></math>](img/1503.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="19887">The results show that the</st> <st c="19912">probability of shared
    birthdays increases rapidly with the size of the group.</st> <st c="19991">The
    following is a simple Python core to simulate the</st> <st c="20045">birthday
    paradox:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: <st c="20885">This function runs the</st> <st c="20909">birthday paradox simulation
    for a given group size</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="20960"><st c="21009">and a number of trials, which is 10,000\.</st> <st
    c="21050">It counts the number of trials where at least two people share the same
    birthday.</st> <st c="21132">For each trial, it generates random birthdays for</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="21182"><st c="21231">people and checks for duplicates.</st> *<st c="21265">Figure
    9</st>**<st c="21273">.3</st>* <st c="21275">illustrates the results of</st> <st
    c="21303">the simulation.</st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.3: The simulation demonstrates how quickly the probability of sharing
    a birthday increases with the size of the group](img/B22248_09_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '<st c="21445">Figure 9.3: The simulation demonstrates how quickly the probability
    of sharing a birthday increases with the size of the group</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="21571">The rapid increase in the probability of shared birthdays is counterintuitive
    because our instinct might suggest that a much larger group would be needed for
    a high probability of shared birthdays.</st> <st c="21770">This can be observed
    in</st> *<st c="21794">Figure 9</st>**<st c="21802">.3</st>*<st c="21804">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="21805">The birthday paradox</st> <st c="21827">illustrates how human
    intuition can often misjudge probabilities in scenarios involving combinations
    and large numbers.</st> <st c="21947">It serves as a valuable lesson in probability
    theory and demonstrates the importance of mathematical calculation in understanding
    seemingly simple problems.</st> <st c="22104">The paradox also has practical applications,
    such as in cryptography, where the concept of hash collisions is analogous to
    the</st> <st c="22231">birthday problem.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="22248">Hiring secretary problem</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="22273">The</st> **<st c="22278">hiring secretary problem</st>**<st c="22302">,
    also</st> <st c="22308">kn</st><st c="22311">own as the</st> **<st c="22323">secretary
    problem</st>** <st c="22340">or the</st> **<st c="22348">best choice problem</st>**<st
    c="22367">, is a famous problem in optimal stopping theory.</st> <st c="22417">It
    describes a scenario where an employer wants to hire the best secretary out of</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/23.png)
    <st c="22499"><st c="22500">applicants who are interviewed sequentially.</st>
    <st c="22546">The employer must decide whether to hire a candidate immediately
    after the interview, without the possibility of returning to previous candidates.</st>
    <st c="22693">The goal is to maximize the probability of selecting the</st> <st
    c="22750">best candidate.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="22765">The following are given in</st> <st c="22793">this problem:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="22806">Sequential interviews</st>**<st c="22828">:</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="22831"><st c="22880">candidates</st> <st c="22891">are interviewed one
    by one in</st> <st c="22921">random order.</st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="22934">Immediate decision</st>**<st c="22953">: After</st> <st c="22962">each
    interview, the employer must decide whether to hire that candidate.</st> <st c="23035">If
    rejected, the candidate cannot</st> <st c="23069">be reconsidered.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="23085">Objective</st>**<st c="23095">: The</st> <st c="23102">goal
    is to maximize the probability of selecting the</st> <st c="23155">best candidate.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="23170">The optimal strategy for this problem is surprisingly elegant
    and counterintuitive.</st> <st c="23255">It involves</st> <st c="23267">two phases:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="23278">Observation phase</st>**<st c="23296">: Reject the</st> <st
    c="23310">first</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/1508.png)
    <st c="23316"><st c="23317">candidates outright.</st> <st c="23339">This phase
    is purely for observation to get a sense of the quality of candidates.</st> <st
    c="23421">The first</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/1508.png)
    <st c="23431"><st c="23432">candidate is also called a</st> <st c="23460">training
    sample.</st></st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="23476">Selection phase</st>**<st c="23492">: From</st> <st c="23500">the</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msup><mml:mrow><mml:mfenced
    separators="|"><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:math>](img/1510.png)
    <st c="23504"><st c="23505">candidate onward, hire the first candidate who is
    better than all the previously</st> <st c="23587">interviewed candidates.</st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '<st c="23610">One question that might arise is this: What if none of the candidates
    after the first</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/1511.png)
    <st c="23697"><st c="23698">are better than those initially rejected?</st> <st
    c="23741">In this unfortunate scenario, the only option is to hire the last candidate.</st>
    <st c="23818">This outcome increases the overall cost of interviewing and heightens
    the risk of hiring an</st> <st c="23910">unsuitable candidate.</st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="23931">The value of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/1512.png)
    <st c="23945"><st c="23946">that maximizes the probability of selecting the best
    candidate can be approximated by</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:mfrac></mml:math>](img/1513.png)<st
    c="24033"><st c="24034">, where</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>e</mml:mi></mml:math>](img/1514.png)
    <st c="24042"><st c="24043">is the base of the natural logarithm (approximately</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>2.718</mml:mn></mml:math>](img/1515.png)<st
    c="24096"><st c="24097">).</st> <st c="24100">For large</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/23.png)<st
    c="24110"><st c="24111">, this simplifies to roughly</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>37</mml:mn><mml:mi>%</mml:mi></mml:math>](img/1517.png)
    <st c="24140"><st c="24145">of the total number</st> <st c="24165">of candidates.</st></st></st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="24179">The probability</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mfenced
    separators="|"><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/1518.png)
    <st c="24196"><st c="24202">of selecting the best candidate using the optimal
    stopping rule is given by</st> <st c="24278">the following:</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><msub><mi>P</mi><mi>n</mi></msub><mfenced
    open="(" close=")"><mi>k</mi></mfenced><mo>=</mo><mfrac><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow><mi>n</mi></mfrac><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>k</mi></mrow><mi>n</mi></munderover><mrow><mfrac><mn>1</mn><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></mfrac><mspace
    width="0em" /></mrow></mrow></mrow></mrow></math>](img/1519.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="24294">We know</st> <st c="24302">that</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mfenced
    separators="|"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfrac></mml:math>](img/1520.png)<st
    c="24307"><st c="24312">.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="24313">The following Python</st> <st c="24335">code estimates</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:math>](img/1521.png)
    <st c="24350"><st c="24351">for various values of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/1522.png)
    <st c="24374"><st c="24375">and also estimates the ratio of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi><mml:mo>/</mml:mo><mml:mi>n</mml:mi></mml:math>](img/1523.png)
    <st c="24408"><st c="24409">that maximizes the</st> <st c="24429">probability</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:math>](img/1524.png)<st
    c="24441"><st c="24442">:</st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: <st c="25336">Let’s briefly explain the code.</st> <st c="25369">The</st> `<st
    c="25373">calculate_p_n</st>` <st c="25386">function calculates the probability</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mfenced
    separators="|"><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/1525.png)
    <st c="25423"><st c="25429">for a given</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="25441"><st c="25490">and</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/422.png)
    <st c="25494"><st c="25495">using the formula provided.</st> <st c="25524">The</st>
    `<st c="25528">find_optimal_k</st>` <st c="25542">function computes</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mfenced
    separators="|"><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/1528.png)
    <st c="25561"><st c="25567">for all</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/422.png)
    <st c="25575"><st c="25576">from 1 to</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="25587"><st c="25636">and finds the value of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/422.png)
    <st c="25659"><st c="25660">that maximizes</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:math>](img/1524.png)<st
    c="25676"><st c="25677">. The parameters are</st> <st c="25698">as follows:</st></st></st></st></st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="25709">n_values</st>**<st c="25718">: Different values of</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="25741"><st c="25790">to analyze.</st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="25801">optimal_k_ratios</st>**<st c="25818">: This stores the ratio</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi><mml:mo>/</mml:mo><mml:mi>n</mml:mi></mml:math>](img/1534.png)
    <st c="25843"><st c="25844">that maximizes</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:math>](img/1524.png)
    <st c="25860"><st c="25861">for</st> <st c="25866">each</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)<st
    c="25871"><st c="25920">.</st></st></st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="25921">The first plot (</st>*<st c="25938">Figure 9</st>**<st c="25947">.4</st>*<st
    c="25949">) shows</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mfenced
    separators="|"><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/1537.png)
    <st c="25958"><st c="25964">versus</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/1538.png)
    <st c="25971"><st c="25972">for different values of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/1539.png)<st
    c="25997"><st c="25998">. The second plot (</st>*<st c="26017">Figure 9</st>**<st
    c="26026">.5</st>*<st c="26028">) shows the ratio of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi><mml:mo>/</mml:mo><mml:mi>n</mml:mi></mml:math>](img/1534.png)
    <st c="26050"><st c="26051">that maximizes</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:math>](img/1524.png)
    <st c="26067"><st c="26068">for different values of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)<st
    c="26093"><st c="26142">. It also includes a horizontal line at</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>e</mml:mi></mml:math>](img/1543.png)
    <st c="26182"><st c="26183">for reference.</st></st></st></st></st></st></st></st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="26197">Figure 9</st>**<st c="26206">.4</st>* <st c="26208">shows how
    the probability</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mfenced
    separators="|"><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/1518.png)
    <st c="26235"><st c="26241">varies with</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/441.png)
    <st c="26253"><st c="26254">for different values of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/1546.png)
    <st c="26279"><st c="26280">and</st> *<st c="26285">Figure 9</st>**<st c="26293">.5</st>*
    <st c="26295">demonstrates that the ratio</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi><mml:mo>/</mml:mo><mml:mi>n</mml:mi></mml:math>](img/1534.png)
    <st c="26324"><st c="26325">that maximizes this probability tends to approximate</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>e</mml:mi><mml:mo>=</mml:mo><mml:mn>0.37</mml:mn></mml:math>](img/1548.png)
    <st c="26379"><st c="26380">or 37% of the total number of candidates, validating
    the</st> <st c="26438">theoretical approximation.</st></st></st></st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="26464">The logic behind this</st> <st c="26487">strategy is based on
    the trade-off between gathering enough information to make an informed decision
    and the risk of missing out on the best candidate by waiting too long.</st> <st
    c="26659">By rejecting the first</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/1549.png)
    <st c="26682"><st c="26683">candidates, the employer sets a benchmark for evaluating
    the subsequent candidates.</st> <st c="26768">The probability of selecting the
    best candidate using this strategy is approximately</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>e</mml:mi></mml:math>](img/1550.png)<st
    c="26853"><st c="26854">, or about</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>37</mml:mn><mml:mi>%</mml:mi></mml:math>](img/1517.png)
    <st c="26865"><st c="26870">(see</st> *<st c="26875">Figure 9</st>**<st c="26883">.4</st>*<st
    c="26885">).</st> <st c="26889">This means that, on average, the employer has
    a 37% chance of selecting the best candidate by following the</st> <st c="26997">optimal
    strategy.</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="27014">Example 9.1</st>
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: <st c="27026">Using the optimal</st> <st c="27045">stopping theory, suggest
    a strategy to hire an individual among</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="27109"><st c="27158">candidates.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="27169">Consider</st> ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>n</mi><mo>=</mo><mn>10</mn></mrow></mrow></math>](img/1553.png)
    <st c="27179"><st c="27180">candidates.</st> <st c="27193">Using the optimal</st>
    <st c="27211">stopping rule:</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="27225">Observation phase</st>**<st c="27243">: Reject the first</st>
    ![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mn>10</mn><mo>/</mo><mi>e</mi><mo>≈</mo><mn>3.7</mn><mo>≈</mo><mn>4</mn></mrow></mrow></math>](img/1554.png)
    <st c="27263"><st c="27276">candidates.</st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="27287">Selection phase</st>**<st c="27303">: From the fifth candidate
    onward, hire the first one who is better than all</st> <st c="27381">previous
    candidates.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="27401">If the best candidate is among the first four, they will be missed.</st>
    <st c="27470">If the best candidate is in the fifth position or later, there is
    a good chance they will be selected because they are likely to be better than
    those in the</st> <st c="27627">observation phase.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.4: The probability ​​P​ n​​​(k)​​ versus ​k​ for a various number
    of candidates (​n​)](img/B22248_09_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '<st c="27838">Figure 9.4: The probability</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msub><mml:mrow><mml:mi
    mathvariant="bold-italic">P</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">n</mml:mi></mml:mrow></mml:msub><mml:mfenced
    separators="|"><mml:mrow><mml:mi mathvariant="bold-italic">k</mml:mi></mml:mrow></mml:mfenced></mml:math>](img/1555.png)
    <st c="27866"><st c="27867">versus</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">k</mml:mi></mml:math>](img/1556.png)
    <st c="27875"><st c="27876">for a various number of candidates (</st>![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:math>](img/298.png)<st c="27913"><st
    c="27915">)</st></st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.5: Optimal k/n ratio for various number of candidates (n). As n
    increases, the ​k / n​ ratio converges the golden ratio ​1 / e = 0.37​ or ​37%​
    of total number of candidates.](img/B22248_09_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '<st c="28087">Figure 9.5: Optimal k/n ratio for various number of candidates
    (n).</st> <st c="28155">As n increases, the</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi mathvariant="bold-italic">k</mml:mi><mml:mo>/</mml:mo><mml:mi
    mathvariant="bold-italic">n</mml:mi></mml:math>](img/1558.png) <st c="28175"><st
    c="28176">ratio converges the golden ratio</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi
    mathvariant="bold-italic">e</mml:mi><mml:mo>=</mml:mo><mml:mn>0.37</mml:mn></mml:math>](img/1559.png)
    <st c="28210"><st c="28211">or</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>37</mml:mn><mml:mi
    mathvariant="bold-italic">%</mml:mi></mml:math>](img/1560.png) <st c="28215"><st
    c="28216">of total number of candidates.</st></st></st></st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="28247">The preceding</st> <st c="28261">hiring problem is a classic example
    of optimal stopping theory, demonstrating the application of probabilistic decision-making
    in real-time scenarios.</st> <st c="28413">It has several interesting implications</st>
    <st c="28453">and extensions:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="28468">Unknown number of candidates</st>**<st c="28497">: If the number
    of candidates</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/1561.png)
    <st c="28528"><st c="28529">is unknown, adaptive strategies can</st> <st c="28566">be
    developed</st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="28578">Multiple selections</st>**<st c="28598">: Variants where more
    than one candidate can be selected, adjusting the</st> <st c="28671">strategy
    accordingly</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="28691">This theory has many practical applications.</st> <st c="28737">While
    the model is simplified, it provides insights into decision-making processes in
    hiring and other sequential selection scenarios (see next section).</st> <st c="28891">Similar
    strategies can be applied in online auctions, where bidders must decide when to
    stop bidding based on observed prices.</st> <st c="29018">The theory has some
    behavioral insights too.</st> <st c="29063">The problem highlights how optimal
    strategies often defy intuition, requiring a rigorous mathematical approach to
    identify the best course</st> <st c="29202">of action.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="29212">The hiring</st> <st c="29224">secretary problem elegantly combines
    elements of probability, decision theory, and optimal stopping.</st> <st c="29325">It
    provides a clear example of how structured strategies can significantly improve
    decision-making in scenarios characterized by uncertainty and sequential choices.</st>
    <st c="29490">By understanding the principles behind this problem, one gains valuable
    insights into the broader field of optimal stopping theory and</st> <st c="29625">its
    applications.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="29642">Case studies</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="29655">At the beginning of this chapter, we introduced three problems
    faced by Tom and Fang.</st> <st c="29742">These problems involve randomized algorithms
    and probabilistic reasoning and can be solved using the optimal stopping theory.</st>
    <st c="29868">Essentially, these problems focus on determining when to stop searching
    rather than what to search for.</st> <st c="29972">As case studies, we will analyze
    and solve these problems in detail, applying the concepts we have learned in</st>
    <st c="30082">this chapter.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30095">Optimal selection in an online dating app</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="30137">A new</st> <st c="30144">online dating app,</st> *<st c="30163">Matcher</st>*<st
    c="30170">, has</st> <st c="30175">been designed to help users find their best
    possible partners.</st> <st c="30239">The app operates similarly to a game, where
    users are presented with one potential match at a time, selected randomly from
    a pool of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>N</mml:mi></mml:math>](img/1562.png)
    <st c="30372"><st c="30373">potential matches (the total number of matches is
    unknown to the users).</st> <st c="30447">Tom, our user, has a maximum of</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/1065.png)
    <st c="30479"><st c="30480">likes available (where</st>![<math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mrow><mi>n</mi><mo>≪</mo><mi>N</mi></mrow></mrow></math>](img/1564.png)<st
    c="30503"><st c="30505">).</st> <st c="30508">His goal is to maximize his chances
    of finding the best possible matches using his</st> <st c="30591">limited likes.</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30605">When Tom opens the</st> *<st c="30625">Matcher</st>* <st c="30632">app,
    he can either</st> *<st c="30652">like</st>* <st c="30656">(swipe right) or</st>
    *<st c="30674">dislike</st>* <st c="30681">(swipe left) each profile.</st> <st
    c="30709">Once a decision is made, it is final, and he cannot change his mind.</st>
    <st c="30778">Tom needs to carefully decide when to stop browsing and start using
    his likes to maximize his chances of selecting the best available matches.</st>
    <st c="30921">We should note</st> <st c="30936">the following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30950">Tom must decide in real time whether to</st> *<st c="30991">like</st>*
    <st c="30995">or</st> *<st c="30999">dislike</st>* <st c="31006">each profile
    as they are</st> <st c="31032">presented sequentially</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="31054">Once Tom has</st> *<st c="31068">liked</st>* ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="31073"><st c="31123">profiles, the app will no longer show him any</st>
    <st c="31169">more profiles</st></st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="31182">The objective is to maximize the probability of selecting the
    best matches within the constraints of his</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="31288">*<st c="31337">likes</st>*</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="31342">There are</st> <st c="31353">some constraints:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31370">Tom cannot revisit</st> <st c="31390">previous profiles</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="31407">Liking</st>* <st c="31414">a profile does not guarantee a match;
    it also requires the other person to like Tom’s</st> <st c="31501">profile back</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '<st c="31513">The optimal stopping</st> <st c="31535">theory provides a strategy
    to maximize the chances of selecting the best option from a sequence of choices.</st>
    <st c="31643">The strategy involves two phases: an observation phase and a</st>
    <st c="31704">selection phase:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="31720">Observation phase</st>**<st c="31738">: Tom should observe
    and reject the first</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/1174.png)
    <st c="31781"><st c="31782">profiles to gather information about the pool of candidates.</st>
    <st c="31844">The optimal choice of</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/1568.png)
    <st c="31866"><st c="31867">in classical secretary problems is approximately</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:mfrac></mml:math>](img/1569.png)<st
    c="31917"><st c="31918">. However, since</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>N</mml:mi></mml:math>](img/1562.png)
    <st c="31935"><st c="31936">is unknown, Tom can use an adaptive strategy to</st>
    <st c="31985">estimate</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/422.png)<st
    c="31994"><st c="31995">.</st></st></st></st></st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="31996">Selection phase</st>**<st c="32012">: After the observation
    phase, Tom should start liking the next profile that is better than all the profiles
    he has seen so far during the observation phase.</st> <st c="32171">If Tom does
    not find a better profile, he will like the last few profiles he encounters, ensuring
    he uses all</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/945.png)
    <st c="32281"><st c="32282">likes.</st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="32288">In the absence of knowledge about the total number of profiles
    (</st>![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>N</mml:mi></mml:math>](img/1469.png)<st
    c="32353"><st c="32355">), one practical approach is to assume</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>N</mml:mi></mml:math>](img/1562.png)
    <st c="32394"><st c="32395">as a large number, such as</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>1000</mml:mn></mml:math>](img/1575.png)<st
    c="32423"><st c="32424">. Tom can then use a strategy based on the optimal stopping
    theory.</st> <st c="32492">However, this approach has significant drawbacks when
    implemented in a</st> <st c="32563">real-world scenario.</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="32583">Tom assumes</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>N</mml:mi></mml:math>](img/1562.png)
    <st c="32596"><st c="32597">is large, for</st> <st c="32612">example,</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>1000</mml:mn></mml:math>](img/1577.png)<st
    c="32621"><st c="32622">:</st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="32623">Observation phase</st>**<st c="32640">: Reject the first</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>37</mml:mn><mml:mi>%</mml:mi></mml:math>](img/1578.png)
    <st c="32660"><st c="32664">of the profiles.</st> <st c="32681">For</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mn>1000</mml:mn></mml:math>](img/1579.png)<st
    c="32685"><st c="32686">, this means rejecting the first</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>370</mml:mn></mml:math>](img/1580.png)
    <st c="32719"><st c="32720">profiles.</st></st></st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="32729">Selection phase</st>**<st c="32745">: Start liking profiles
    from the</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msup><mml:mrow><mml:mn>371</mml:mn></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msup></mml:math>](img/1581.png)
    <st c="32779"><st c="32780">profile onward, only if they are better than all the
    profiles seen in the</st> <st c="32855">observation phase.</st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="32873">These are the drawbacks of the proposed strategy</st> <st c="32923">are
    twofold:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="32935">Human memory limitation</st>**<st c="32959">: It is impractical
    for Tom to remember and compare</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>370</mml:mn></mml:math>](img/1582.png)
    <st c="33012"><st c="33013">profiles with every new profile he sees.</st> <st
    c="33055">This requires an immense cognitive load and is not feasible for</st>
    <st c="33119">most individuals.</st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="33136">Potential bias in ordered profiles</st>**<st c="33171">: If
    the profiles are ordered in any way (e.g., by the number of likes they have received),
    this strategy can fail.</st> <st c="33288">If the best profiles are at the beginning
    or end, the strategy won’t work effectively because it relies on</st> <st c="33394">the
    randomness of</st> <st c="33413">profile order.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="33427">Given the impracticality of the preceding strategy, we can adopt
    a more practical approach that mitigates these issues.</st> <st c="33548">Instead
    of using a fixed</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>37</mml:mn><mml:mi>%</mml:mi></mml:math>](img/1583.png)
    <st c="33573"><st c="33577">of a large assumed</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>N</mml:mi></mml:math>](img/1562.png)<st
    c="33596"><st c="33597">, reduce the observation phase to a manageable number
    of profiles based on Tom’s total number of likes (</st>![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/23.png)<st
    c="33701"><st c="33703">).</st> <st c="33706">For example, use a smaller fraction
    such as</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mfrac><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/547.png)
    <st c="33750"><st c="33751">for the observation phase.</st> <st c="33779">The
    other benefit of this practical approach is that it uses a relative comparison
    strategy where Tom only needs to remember the best profile seen so far rather
    than</st> <st c="33945">all profiles.</st></st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="33958">Let’s explore the proposed practical approach.</st> <st c="34006">Tom
    can choose to observe the first</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/1174.png)
    <st c="34042"><st c="34043">profiles where</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi><mml:mo>≈</mml:mo><mml:mfrac><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:math>](img/1588.png)<st
    c="34059"><st c="34062">. This is a heuristic that balances exploration and exploitation
    in the absence of information</st> <st c="34157">about</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>N</mml:mi></mml:math>](img/1562.png)<st
    c="34163"><st c="34164">.</st></st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34165">Let’s assume Tom has 10 likes available.</st> <st c="34207">First,
    we</st> <st c="34217">choose k:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mn>5</mml:mn></mml:math>](img/1590.png)'
  prefs: []
  type: TYPE_IMG
- en: <st c="34228">Tom observes and rejects the first five profiles.</st> <st c="34278">From
    the sixth profile onwa</st><st c="34305">rd, Tom likes the next profile that is
    better than any of the first five profiles he observed.</st> <st c="34401">If
    none of the subsequent profiles are better, he uses his likes on the last profiles</st>
    <st c="34487">he sees.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34495">By using this strategy, Tom maximizes his chances of finding high-quality
    matches within the constraints of his</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="34608"><st c="34657">likes.</st> <st c="34664">The heuristic approach balances
    the need to gather information and the need to make timely decisions without knowing
    the total number</st> <st c="34798">of candidates.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34812">The revised optimal</st> <st c="34832">stopping strategy for Tom
    on the</st> *<st c="34866">Matcher</st>* <st c="34873">app</st> <st c="34877">involves
    using a fraction of his likes for the observation phase and then applying the
    gathered information to make decisions in the selection phase.</st> <st c="35028">This
    method provides a practical solution for sequential decision-making under uncertainty,
    ensuring Tom uses his likes effectively to maximize his chances of finding the</st>
    <st c="35199">best matches.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35212">Finding the closest parking spot</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="35245">Fang is driving to her friend’s</st> <st c="35278">house on a
    busy one-way street with</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>n</mml:mi></mml:math>](img/48.png)
    <st c="35314"><st c="35363">parking spots, where parking is only allowed on one
    side of the street.</st> <st c="35435">Based on past experience, about</st> ![<mml:math
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>10</mml:mn><mml:mi>%</mml:mi></mml:math>](img/1593.png)
    <st c="35467"><st c="35471">of the parking spots are typically available at any
    given time.</st> <st c="35535">Fang can only see one spot at a time as she passes
    by and cannot see the spots ahead.</st> <st c="35621">The goal is to determine
    the optimal moment for her to take an available parking spot using the optimal
    stopping theory.</st> *<st c="35742">Figure 9</st>**<st c="35750">.6</st>* <st
    c="35752">illustrates this problem.</st> <st c="35779">In the figure, the left
    side of the street shows where cars can park, with some available spots highlighted.</st>
    <st c="35888">The right side of the street is a</st> <st c="35922">no-parking
    zone.</st></st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35938">The optimal stopping theory helps Fang decide when to stop searching
    and take an available parking spot by balancing the exploration of spots and the
    exploitation of the best spot found</st> <st c="36125">so far.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.6: Illustration of Fang’s parking problem](img/B22248_09_6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '<st c="36145">Figure 9.6: Illustration of Fang’s parking problem</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '<st c="36195">In both the hiring and dating app problems, there were implicit
    and subjective criteria to rank the candidates.</st> <st c="36308">In contrast,
    the parking problem has an explicit criterion: the distance from the parking spot
    to Fang’s friend’s house.</st> <st c="36429">Therefore, our strategy highly depends
    on the location</st> <st c="36483">of the destination.</st> <st c="36504">We can
    identify</st> <st c="36520">three scenarios:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="36536">Destination at the beginning of the street</st>**<st c="36579">:
    This is the easiest case because Fang should choose the first available parking
    spot she encounters.</st> <st c="36683">There is no need to apply the optimal
    stopping theory here, as this represents the</st> <st c="36766">best-case scenario.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="36785">Destination at the end of the street</st>**<st c="36822">:
    This is the worst-case scenario.</st> <st c="36858">Fang needs to find the closest
    available parking spot, so she should reject as many spots as possible to maximize
    her chances of finding a spot near the end.</st> <st c="37016">The optimal stopping
    theory is particularly useful in</st> <st c="37070">this situation.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="37085">Destination in the middle of the street</st>**<st c="37125">:
    This represents an average-case scenario, assuming the destination is exactly
    in the middle of the street.</st> <st c="37235">Here, the optimal stopping theory
    is also applicable to help Fang decide when to stop and take an available parking
    spot.</st> <st c="37357">We solve the problem for</st> <st c="37382">this case.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="37392">The average-case scenario can be approached in</st> <st c="37440">two
    parts:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="37450">Before reaching the destination</st>**<st c="37482">: This
    part is similar to the worst-case scenario.</st> <st c="37534">Fang will try to
    reject as many spots as possible using the optimal stopping theory.</st> <st c="37619">She
    should reject the first</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/422.png)
    <st c="37647"><st c="37648">spots and then select the</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msup><mml:mrow><mml:mfenced
    separators="|"><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:math>](img/1595.png)
    <st c="37675"><st c="37676">spot that</st> <st c="37687">is available.</st></st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="37700">After passing the destination</st>**<st c="37730">: If Fang
    cannot find any available spot before reaching her destination, the strategy changes.</st>
    <st c="37827">At this point, the problem turns into the best-case scenario.</st>
    <st c="37889">Fang should park at the very first available spot she encounters
    after passing</st> <st c="37968">the destination.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="37984">We can solve this problem for the average-case scenario step by
    step (hereafter, the destination is referred to as</st> <st c="38100">the midpoint):</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="38114">Determine</st>** **![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/422.png)**<st
    c="38126">: For the optimal stopping strategy, we calculate</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi><mml:mo>≈</mml:mo><mml:mfrac><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:mfrac></mml:math>](img/1597.png)<st
    c="38176"><st c="38179">. However, given that only about</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>10</mml:mn><mml:mi>%</mml:mi></mml:math>](img/1598.png)
    <st c="38212"><st c="38215">of all parking spots are typically available at any
    time, we need to adjust our calculations accordingly.</st> <st c="38321">Fang
    can estimate the total number of cars that can be parked on the street by considering
    the length of the street divided by the average length of a sedan car.</st> <st
    c="38483">Since her destination is in the middle of the street, we multiply the
    availability by</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>0.5</mml:mn></mml:math>](img/824.png)<st
    c="38569"><st c="38570">. If her destination were, for example, in the first third
    of the street, this coefficient would be</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mn>0.33</mml:mn></mml:math>](img/1600.png)<st
    c="38670"><st c="38671">. Thus, we adjust</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/422.png)
    <st c="38689"><st c="38690">as follows:</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mi>k</mi><mo>≈</mo><mfrac><mrow><mn>5</mn><mi>n</mi></mrow><mrow><mn>100</mn><mo>×</mo><mi>e</mi></mrow></mfrac><mo>=</mo><mfrac><mi>n</mi><mn>54.3</mn></mfrac></mrow></mrow></math>](img/1602.png)</st></st></st></st></st>'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="38703">The following represents the</st> <st c="38732">number of spots
    Fang will pass before she starts considering</st> <st c="38793">parking seriously:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="38811">Before the midpoint</st>**<st c="38831">: Fang should drive
    past the first</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/422.png)
    <st c="38867"><st c="38868">spots without parking.</st> <st c="38892">After passing</st>
    ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/1174.png)
    <st c="38906"><st c="38907">spots, Fang will then park in the next available spot
    that is better than any of the spots she has seen</st> <st c="39012">so far.</st></st></st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="39019">After the midpoint</st>**<st c="39038">: If Fang has not found
    a suitable spot by the time she reaches the midpoint, she will park at the very
    first available spot</st> <st c="39164">she encounters.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="39179">This approach divides the problem into manageable parts and applies
    the optimal stopping theory effectively within each part.</st> <st c="39306">Before
    the midpoint, by rejecting the first</st> ![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:mi>k</mml:mi></mml:math>](img/422.png)
    <st c="39350"><st c="39351">spots, Fang gathers enough information to make an
    informed decision based on the quality of the spots.</st> <st c="39455">This strategy
    maximizes her chances of finding a better spot close to her destination.</st>
    <st c="39542">However, after the midpoint, we switch to the best-case scenario
    approach, ensuring that Fang minimizes her walking distance to her friend’s house
    if she has not found a spot before</st> <st c="39724">the midpoint.</st></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="39737">Summary</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="39745">In this chapter, we explored various problems that involved making
    optimal decisions under uncertainty using the optimal stopping theorem and randomized
    algorithms.</st> <st c="39911">We examined scenarios such as the hiring problem,
    the</st> *<st c="39965">Matcher</st>* <st c="39972">dating app, and Fang’s parking
    problem, each requiring a strategic balance between gathering information and
    making timely decisions.</st> <st c="40107">Through these examples, we illustrated
    how the optimal stopping theorem provides a structured approach to maximize the
    chances of selecting the best option by setting appropriate observation phases
    and selection criteria.</st> <st c="40329">This chapter demonstrated the power
    of probabilistic reasoning and optimal stopping rules in practical decision-making
    scenarios.</st> <st c="40459">In the next chapter, we will explore dynamic programming,
    a powerful technique for solving complex problems by breaking them down into</st>
    <st c="40594">simpler subproblems.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="40614">References and further reading</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*<st c="40645">Introduction to Algorithms</st>*<st c="40672">. By Thomas H.</st>
    <st c="40687">Cormen, Charles E.</st> <st c="40706">Leiserson, Ronald L.</st>
    <st c="40727">Rivest, and Clifford Stein.</st> <st c="40755">Fourth Edition.</st>
    <st c="40771">MIT</st> <st c="40775">Press.</st> <st c="40782">2022:</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="40787">Chapter 5</st>*<st c="40797">,</st> *<st c="40799">Probabilistic
    Analysis and</st>* *<st c="40826">Randomized Algorithms</st>*'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="40847">Algorithms to Live By: The Computer Science of Human Decisions</st>*<st
    c="40910">. By Brian Christian and Tom Griffiths.</st> <st c="40950">Henry Holt
    and</st> <st c="40965">Co.</st> <st c="40969">2016.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="40974">Who Solved the Secretary Problem</st>*<st c="41007">. By T.</st>
    <st c="41015">S.</st> <st c="41018">Ferguson.</st> *<st c="41028">Statist.</st>
    <st c="41037">Sci</st>*<st c="41040">.4 (</st><st c="41044">3): 282–89.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*<st c="41056">Monty Hall</st>* *<st c="41068">Problem</st>*<st c="41075">.</st>
    [<st c="41077">https://en.wikipedia.org/wiki/Monty_Hall_problem</st>](https://en.wikipedia.org/wiki/Monty_Hall_problem)<st
    c="41125">.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
