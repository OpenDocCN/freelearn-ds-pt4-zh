["```py\nimport numpy as np\nimport math, random\nimport matplotlib.pyplot as plt\ncurrent_vel, current_disp, current_accel = 2, 0, 0\ntotal_time = 100\naccel_dict = {0:0,5:2,10:8, 20: -2,40:5,45: 9, 60: -3,85:0}\ntrue_values = []\nfor t in range (1, total_time+1):\n     current_disp = current_disp + current_vel + (1/2) * current_accel\n     try:\n         current_accel = accel_dict[t]\n     except KeyError:\n                    pass\n     current_vel = current_vel + current_accel\n     true_values.append((current_disp, current_vel, current_accel))\n```", "```py\nerr_range = [700, 30, 15] #noise\nmeasurements = []\nfor item in true_values:\n     d,v,a = item\n     random_err = [random.randint(-1*err_range[0], err_range[0]), random.randint(-1*err_range[1], err_range[1]), random.randint(-1*err_range[2], err_range[2])]\n      new_disp = d + random_err[0] if d+random_err[0] > 0 else 0\n      new_vel = v + random_err[1]\n      new_accel = a + random_err[2]\n      measurements.append((new_disp, new_vel, new_accel))\n```", "```py\nplt.plot([i for i in range(total_time)], [y[0] for y in true_values], 'r--', label = 'True Values')\nplt.plot([i for i in range(total_time)], [y[0] for y in measurements], 'b--', label = 'Measurements')\nplt.ylabel(\"Displacement\")\nplt.xlabel(\"Time (s)\")\nplt.legend()\nplt.show()\n```", "```py\nx_k = np.asarray([30,20])\nQ = np.asarray([[0.004,0.002],[0.002,0.001]])\nA = np.asarray([[1,1],[0,1]])\nR = np.asarray([[0.4,0.01],[0.04,0.01]])\nH = np.asarray([[1,0],[0,1]])\nP = np.asarray([[0,0],[0,0]])\nestimation = []\nfor k_loop in range(total_time):\n     z_k = np.asarray([measurements[k_loop][0], measurements[k_loop][1]])\n     x_k = A.dot(x_k)\n     P = (A.dot(P)).dot(A.T) + Q\n            K = (P.dot(H.T)).dot(np.linalg.inv((H.dot(P).dot(H.T)) + R))\n     x_k = x_k + K.dot((z_k - H.dot(x_k)))\n     P = (np.identity(2) - K.dot(H)).dot(P)\n     estimation.append((x_k[0], x_k[1]))\n```", "```py\nplt.plot([i for i in range(total_time)], [y[0] for y in true_values], 'r--', label = 'True Values')\nplt.plot([i for i in range(total_time)], [y[0] for y in measurements], 'b--', label = 'Measurements')\nplt.plot([i for i in range(total_time)], [y[0] for y in estimation], 'g--', label = 'Estimated Values')\nplt.title('Estimation of displacement')\nplt.ylabel(\"Displacement\")\nplt.xlabel(\"Time (s)\")\nplt.legend()\nplt.show()\n```"]