- en: 'Part 2: Solving Problems with Genetic Algorithms'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This part focuses on the application of genetic algorithms to various real-world
    problems using Python, starting with an exploration of the DEAP framework. We
    begin by tackling the foundational OneMax problem, showcasing the frameworkâ€™s
    capabilities. We then move on to more complex combinatorial optimization challenges,
    such as the traveling salesman and vehicle routing problems, and proceed with
    an in-depth look at constraint satisfaction problems, including the N-Queen and
    nurse scheduling problems. The part concludes by applying genetic algorithms to
    continuous search-space optimization, highlighting advanced techniques such as
    niching, sharing, and effective constraint management.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part contains the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B20851_03.xhtml#_idTextAnchor091)*, Using the DEAP Framework*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B20851_04.xhtml#_idTextAnchor155)*, Combinatorial Optimization*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B20851_05.xhtml#_idTextAnchor177)*, Constraint Satisfaction*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B20851_06.xhtml#_idTextAnchor197)*, Optimizing Continuous Functions*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
