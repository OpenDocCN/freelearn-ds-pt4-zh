- en: 'Part 4: Enhancing Performance with Concurrency and Cloud Strategies'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This part focuses on enhancing the performance of genetic algorithms through
    advanced programming techniques, specifically concurrency and cloud computing.
    The first chapter introduces concurrency, especially multiprocessing, as a tool
    to improve genetic algorithm efficiency. The concept is illustrated by applying
    various multiprocessing methods to a CPU-intensive version of the One-Max problem,
    demonstrating significant performance gains. Building on this, the next chapter
    shifts to a client-server model, partitioning the genetic algorithm between asynchronous
    client operations and server-based fitness function computations. This model is
    then practically implemented using Flask for the server and Pythonâ€™s asyncio for
    the client, culminating in deployment to the cloud via AWS Lambda.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part contains the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B20851_13.xhtml#_idTextAnchor326)*, Accelerating Genetic Algorithms:
    The Power of Concurrency*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B20851_14.xhtml#_idTextAnchor342)*, Beyond Local Resources:
    Scaling Genetic Algorithms in the Cloud*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
