["```py\nimport numpy as np \nimport matplotlib.pyplot as plt \n\nwith plt.style.context(\"/span>seaborn-v0_8\": \n    plt.figure(figsize=(8, 5)) \n    plt.scatter(range(1, 21), [1/n for n in range(1, 21)]) \n    plt.xticks(range(1, 21, 2)) \n    plt.title(\"/span>the 1/n sequence \n    plt.show()\n```", "```py\nwith plt.style.context(\"/span>seaborn-v0_8\": \n    plt.figure(figsize=(8, 5)) \n    plt.scatter(range(1, 21), [np.sin(n) for n in range(1, 21)]) \n    plt.xticks(range(1, 21, 2)) \n    plt.title(\"/span>the sin(n) sequence \n    plt.show()\n```", "```py\nfrom math import factorial \n\nx = range(1, 21) \n\ne_def = [(1 + 1/n)**n for n in x] \ne_sum = [np.sum([1/factorial(k) for k in range(n)]) for n in x] \nwith plt.style.context(\"/span>seaborn-v0_8\": \n    plt.figure(figsize=(8, 5)) \n    plt.scatter(x, e_def, label=\"1 + 1/n) ** n \n    plt.scatter(x, e_sum, label=\"/span>sum approximation \n    plt.xticks(range(1, 21, 2)) \n    plt.title(\"/span>Approximating the value of e \n    plt.legend() \n    plt.show()\n```", "```py\nxs = range(1, 41) \nan = [1/n for n in xs] \nys = np.cumsum(an) \n\nwith plt.style.context(\"/span>seaborn-v0_8\": \n    plt.figure(figsize=(8, 5)) \n    plt.scatter(xs, ys) \n    plt.xticks(range(1, 41, 5)) \n    plt.title(\"/span>the harmonic series \n    plt.show()\n```", "```py\nwith plt.style.context(\"/span>seaborn-v0_8\": \n    plt.figure(figsize=(8, 5)) \n    plt.plot(xs, np.log(xs) + np.euler_gamma, c=\"/span>r linewidth=5, zorder=1, label=\"/span>log(x + y) \n    plt.scatter(xs[::2], ys[::2], label=\"/span>harmonic series \n    plt.xticks(range(1, 41, 5)) \n    plt.title(\"/span>the harmonic series \n    plt.legend() \n    plt.show()\n```"]