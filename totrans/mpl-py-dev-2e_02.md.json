["```py\nfibonacci = [1,1,2,3,5,8,13]\n```", "```py\nIn [1]: fifths = list(range(10,30,5))\n        fifths\nOut[1]: [10, 15, 20, 25]\n\nIn [2]: list(range(10,30,5))==[10, 15, 20, 25]\nOut[2]: True\n```", "```py\nimport numpy as np\n```", "```py\nx = np.array([2,3,1,0])\n```", "```py\nIn [1]: np.linspace(3,5,20)\nOut[1]: array([ 3\\.        ,  3.10526316,  3.21052632,  3.31578947,  3.42105263,\n        3.52631579,  3.63157895,  3.73684211,  3.84210526,  3.94736842,\n        4.05263158,  4.15789474,  4.26315789,  4.36842105,  4.47368421,\n        4.57894737,  4.68421053,  4.78947368,  4.89473684,  5\\.        ])\n```", "```py\nIn [2]: a = np.array([1, 2, 1])\nIn [3]: b = np.array([2, 3, 8])\nIn [4]: a*b\nOut[4]: array([2, 6, 8])\n```", "```py\npd.DataFrame(my_list_or_array)\n```", "```py\npd.read_csv()\n```", "```py\npd.read_csv(sep='\\t')\n```", "```py\nimport pandas as pd\n\n```", "```py\nimport matplotlib.pyplot as plt\n```", "```py\n# Import the Matplotlib module\nimport matplotlib.pyplot as plt\n\n# Use a list to store the daily temperature\nt = [22.2,22.3,22.5,21.8,22.5,23.4,22.8]\n\n# Plot the daily temperature t as a line plot\nplt.plot(t)\n\n# Show the plot\nplt.show()\n```", "```py\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Set the random seed for NumPy function to keep the results reproducible\nnp.random.seed(42)\n\n# Generate a 2 by 100 NumPy Array of random decimals between 0 and 1\nr = np.random.rand(2,100)\n\n# Plot the x and y coordinates of the random dots on a scatter plot\nplt.scatter(r[0],r[1])\n\n# Show the plot\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\n\n# Prepare the data series\nd = [11,12,13,14,15,16,17]\nt0 = [15.3,15.4,12.6,12.7,13.2,12.3,11.4]\nt1 = [26.1,26.2,24.3,25.1,26.7,27.8,26.9]\nt2 = [22.3,20.6,19.8,21.6,21.3,19.4,21.4]\n\n# Plot the lines for each data series\nplt.plot(d,t0)\nplt.plot(d,t1)\nplt.plot(d,t2)\n\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\n\n# seed the random number generator to keep results reproducible\nnp.random.seed(123) \n\n# Generate 10 random numbers around 2 as x-coordinates of the first data series\nx0 = np.random.rand(10)+1.5\n\n# Generate the y-coordinates another data series similarly\nnp.random.seed(321) \ny0 = np.random.rand(10)+2\nnp.random.seed(456)\nx1 = np.random.rand(10)+2.5\nnp.random.seed(789)\ny1 = np.random.rand(10)+2\nplt.scatter(x0,y0)\nplt.scatter(x1,y1)\n\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import make_blobs\n\n# make blobs with 3 centers with random seed of 23\nblob_coords,features = make_blobs(centers=3, random_state=23)\n\n# plot the blobs, with c value set to map colors to features\nplt.scatter(blob_coords[:, 0], blob_coords[:, 1], marker='x', c=features) \nplt.show()\n```", "```py\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate th\nnp.random.seed(100)\nx = list(range(10))\ny = x+np.random.rand(10)-0.5\n\n# Calculate the slope and y-intercept of the trendline\nfit = np.polyfit(x,y,1)\n\n# Add the trendline\nyfit = [n*fit[0] for n in x]+fit[1]\nplt.scatter(x,y)\nplt.plot(yfit,'black')\n\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\n\nd = [11,12,13,14,15,16,17]\nt0 = [15.3,12.6,12.7,13.2,12.3,11.4,12.8]\nt1 = [26.1,26.2,24.3,25.1,26.7,27.8,26.9]\nt2 = [22.3,20.6,19.8,21.6,21.3,19.4,21.4]\n\nplt.plot(d,t0)\nplt.plot(d,t1)\nplt.plot(d,t2)\n\n# Set the limit for each axis\nplt.xlim(11,15)\nplt.ylim(0,30)\n\nplt.show()\n```", "```py\nplt.xlabel('Date',size=12,fontweight='semibold')\nplt.ylabel('Temperature (°C)',size=12,fontweight='semibold')\n```", "```py\nplt.grid(True,linewidth=0.5,color='#aaaaaa',linestyle='-')\n```", "```py\nplt.title(\"Daily temperature of 3 cities in the second week of December\")\n```", "```py\nplt.title(\"Daily temperature of 3 cities in the second week of December\", size=14, fontweight='bold')\n```", "```py\nplt.legend()\n```", "```py\nData source: https://data.oecd.org/agroutput/crop-production.htm\nOECD (2017), Crop production (indicator). doi: 10.1787/49a4e677-en (Accessed on 25 December 2017)\n# Import relevant modules\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Import dataset\ncrop_prod = pd.read_csv('OECD-THND_TONNES.txt',delimiter='\\t')\nyears = crop_prod[crop_prod['Crop']=='SOYBEAN']['Year']\nrice = crop_prod[crop_prod['Crop']=='RICE']['Value']\nwheat = crop_prod[crop_prod['Crop']=='WHEAT']['Value']\nmaize = crop_prod[crop_prod['Crop']=='MAIZE']['Value']\nsoybean = crop_prod[crop_prod['Crop']=='SOYBEAN']['Value']\n\n# Plot the data series\nplt.plot(years, rice, label='Rice')\nplt.plot(years, wheat, label='Wheat')\nplt.plot(years, maize, label='Maize')\nplt.plot(years, soybean, label='Soybean')\n\n# Label the x- and y-axes\nplt.xlabel('Year',size=12,fontweight='semibold')\nplt.ylabel('Thousand tonnes',size=12,fontweight='semibold')\n\n# Add the title and legend\nplt.title('Total OECD crop production in 1995-2016', size=14, fontweight='semibold')\nplt.legend()\n\n# Show the figure\nplt.show()​\n```", "```py\nimport numpy as np\nimport matplotlib.pyplot as plt\ny = np.linspace(1,2000)\nx = 1.0/np.sin(y)\nplt.plot(x,y,'green')\nplt.xlim(-20,20)\nplt.ylim(1000,2400)\nplt.show()\nplt.savefig('123')\n```", "```py\nplt.savefig(dpi=300)\n```", "```py\n%matplotlib notebook\n```", "```py\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ny = np.linspace(1,2000)\nx = 1.0/np.sin(y)\n\nplt.plot(x,y,'green')\nplt.xlim(-20,20)\nplt.ylim(1000,2400)\n\nplt.show()\n```", "```py\nmatplotlib.rcParams['font.size'] = 18\n```", "```py\nmatplotlib.rcParams.update({'font.size': 18, 'font.family': 'serif'})\n```", "```py\nIn [1]: import matplotlib as mpl\n        mpl.matplotlib_fname()\nOut[1]: '/home/mary/.local/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc'\n\n```", "```py\nlegend.loc: right\n```"]