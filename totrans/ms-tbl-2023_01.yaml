- en: Reviewing the Basics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Tableau is one of the leading tools used to solve **business intelligence**
    (**BI**) and analytics challenges. With this book, you will master Tableau’s features
    and offerings in various paradigms of the BI domain. As an update to the successful
    *Mastering Tableau* series, this book covers the essential Tableau concepts, data
    preparation, and calculations with Tableau, all the way up to machine learning
    use cases.
  prefs: []
  type: TYPE_NORMAL
- en: This edition comes with new datasets, more examples of how to improve dashboard
    performance, and the most up-to-date know-how on data visualization, Tableau Server,
    and Tableau Prep Builder.
  prefs: []
  type: TYPE_NORMAL
- en: This new edition will also explore Tableau’s connections with Python and R,
    Tableau extensions, joins, and unions, and last but not least, three new use cases
    of powerful self-service analytics, time-series analytics, and geo-spatial analytics
    in order to implement the learned content. By the end of this book, you’ll have
    mastered the advanced offerings of Tableau and its latest updates, up to Tableau
    version 2023.
  prefs: []
  type: TYPE_NORMAL
- en: Those who are fairly new to Tableau should find this chapter helpful in getting
    up to speed quickly; however, since this book targets advanced topics, relatively
    little time is spent considering the basics. For a more thorough consideration
    of fundamental topics, consider *Learning Tableau,* written by Joshua Milligan
    and published by Packt Publishing.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’ll discuss the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating worksheets and dashboards
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting Tableau to your data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Measure Names and Measure Values
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Three essential Tableau concepts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exporting data to other devices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let’s get started by exploring worksheet and dashboard creation in Tableau.
  prefs: []
  type: TYPE_NORMAL
- en: Creating worksheets and dashboards
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At the heart of Tableau are **worksheets** and **dashboards**. Worksheets contain
    individual visualizations and dashboards contain one or more worksheets. Additionally,
    worksheets and dashboards may be combined into **stories** to communicate particular
    insights to the end user through a presentation environment. Lastly, all worksheets,
    dashboards, and stories are organized in **workbooks**, which can be accessed
    using Tableau Desktop, Server, Reader, or the Tableau mobile app.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, I would like to introduce you to **Tableau Public** ([https://public.tableau.com/app/discover](https://public.tableau.com/app/discover)).
    At times, you might need some inspiration, or you might want to replicate a dashboard
    created by another Tableau user. In this case, Tableau Public will be your place
    to go! It is a web-based collection of dashboards, as well as a creator’s platform
    that allows you to design beautiful dashboards without a license or installation.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can create your own profile—registration is free—and share all the dashboards
    you’ve created that you think the world shouldn’t miss out on. The best part,
    however, is that you can download all of them, open them in your own version of
    Tableau, and start learning and replicating. Even without your own profile or
    registration, it is possible to download dashboards. In summary: Tableau Public
    is a free option but offers limited data source connectivity, data privacy, and
    feature availability. It does provide an excellent platform for sharing visualizations
    publicly though and brushing up on your Tableau skills without the need for a
    paid license.'
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we’ll consider how to create worksheets and dashboards. Our
    intention here is to communicate the basics, but we’ll also provide some insight
    that may prove helpful to more seasoned Tableau users.
  prefs: []
  type: TYPE_NORMAL
- en: Creating worksheets
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before creating a worksheet, we’ll need to create a visualization to populate
    it with. At the most fundamental level, a visualization in Tableau is created
    by placing one or more **fields** on one or more **shelves**. As an example, note
    that the visualization created in the following diagram is generated by placing
    **Number of Records** on the **Text** shelf on the **Marks** card:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Graphical user interface, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_01.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.1: The Marks card'
  prefs: []
  type: TYPE_NORMAL
- en: Having considered some basic theory, in the next subsection, you will get the
    chance to follow along in your own Tableau workbook. Let’s go!
  prefs: []
  type: TYPE_NORMAL
- en: Creating a visualization
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now, let’s explore the basics of creating a visualization using an exercise:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to [https://public.tableau.com/app/profile/marleen.meier](https://public.tableau.com/app/profile/marleen.meier)
    to locate and download the workbook associated with this chapter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the file by double-clicking on the downloaded workbook.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the workbook, find and select the tab labeled **Fundamentals of Visualizations**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_01_02.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.2: Navigating worksheet tabs'
  prefs: []
  type: TYPE_NORMAL
- en: 'The dashboard is connected to two data sources; for this first exercise, we
    will use the **Summer-Olympics** data. Click on the data source **Summer-Olympics**
    in the top-left corner:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_01_03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.3: Data source'
  prefs: []
  type: TYPE_NORMAL
- en: 'Locate **Sport** within the **Data** pane, which can be found on the left-hand
    side of the **Fundamentals of Visualizations** sheet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated with medium confidence](img/B18435_01_04.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.4: Dimensions on the Data pane'
  prefs: []
  type: TYPE_NORMAL
- en: 'Drag **Sport** to **Color** on the **Marks** card and click **Add all members**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_05.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.5: Dragging Color to the Marks card'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on **Color** on the **Marks** card and then on **Edit Colors…** to adjust
    the colors of your visualization as desired. This will allow you to edit the colors
    used in your visualization, and **Transparency** and **Border** effects:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_06.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.6: Edit Colors…'
  prefs: []
  type: TYPE_NORMAL
- en: Now see what happens if you move **Sport** to the **Size**, **Label**, **Detail**,
    **Columns**, and **Rows** shelves. After placing **Sport** on each shelf, you
    can click on each shelf individually to access additional options.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Drop other fields on various shelves to continue exploring Tableau’s behavior.
    One example could be, on an empty canvas, dragging **Year** to the **Columns**
    shelf, **Number of Records** to the **Rows** shelf, and **Medal** to **Color**
    on the **Marks** card. You will now see the number of medals per medal type over
    time:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Chart, line chart'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_07.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.7: Medals over time'
  prefs: []
  type: TYPE_NORMAL
- en: Did you come up with any interesting visualizations? Feel free to share them
    on Tableau Public. Add the tag **#MasteringTableau** if you want other readers
    of this book to find them—sharing is caring!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As you explore Tableau’s behavior by dragging and dropping different fields
    onto different shelves, you’ll notice that Tableau responds with default behaviors.
    These defaults, however, can be overridden, which we’ll explore next.
  prefs: []
  type: TYPE_NORMAL
- en: Beyond the default behavior
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In the preceding exercise, *Creating a visualization*, we can notice that the
    **Marks** card reads **Automatic**. This means that Tableau is providing the default
    view. The default view can easily be overridden by choosing a different selection
    from the drop-down menu:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Graphical user interface, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_08.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.8: The Marks card drop-down menu'
  prefs: []
  type: TYPE_NORMAL
- en: By changing these settings on the **Marks** card, we can adjust the format in
    which your data will be displayed.
  prefs: []
  type: TYPE_NORMAL
- en: Another type of default behavior can be observed when dragging a field onto
    a shelf. For example, dragging and dropping a measure onto a shelf will typically
    result in the `SUM()` aggregation, which will sum up all the values to the highest
    level of aggregation. If no dimension is present, it will be the sum of all values.
    If a dimension is present on the **Marks** card, this same dimension will serve
    as the highest level of aggregation.
  prefs: []
  type: TYPE_NORMAL
- en: We will see an example of this behavior later in this section.
  prefs: []
  type: TYPE_NORMAL
- en: 'In Windows, you can override this default behavior by right-clicking and dragging
    a pill from the **Data** pane and dropping it onto a shelf. Tableau will respond
    with a dialog box with possible options:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_01_09.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.9: Changing the default aggregation'
  prefs: []
  type: TYPE_NORMAL
- en: If you are working on macOS, you can right-click on the pill after you’ve dragged
    it to its location and then adjust the default behavior by changing the measure.
    This works on Windows as well. Another option is to right-click on the field while
    it is still in the **Data** pane on your left-hand side and select **Default Properties**
    | **Aggregation**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s walk through an exercise where we’ll override another default behavior
    on the **Marks** card:'
  prefs: []
  type: TYPE_NORMAL
- en: In the workbook associated with this chapter, navigate to the **Overriding Defaults**
    worksheet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Drag and drop **Year** from the data pane to the **Columns** shelf:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated with low confidence](img/B18435_01_10.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.10: Year to Columns'
  prefs: []
  type: TYPE_NORMAL
- en: Place **Number of Records** on the **Rows** shelf (which is automatically aggregated
    to **SUM(Number of Records)**) and **Sport** on the **Detail** shelf.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the dropdown on the **Marks** card and select **Area**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_01_11.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.11: Area chart'
  prefs: []
  type: TYPE_NORMAL
- en: In *Figure 1.11*, we can see the **Number of Records** over time (**Year**),
    where each line represents one type of **Sport**. We chose to visualize this in
    a stacked area chart.
  prefs: []
  type: TYPE_NORMAL
- en: Sorting and nested sorting
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Now that you are familiar with the basics of dragging and dropping pills and
    are aware of Tableau’s default behavior, the next thing most users want to do
    is to sort the data to draw first conclusions, regarding, for example, minimum
    and maximum values.
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the **Nested Sorting** tab and try to sort the countries by the
    amount of medals won, but separately for gold, silver, and bronze.
  prefs: []
  type: TYPE_NORMAL
- en: Did it work for you?
  prefs: []
  type: TYPE_NORMAL
- en: 'In Tableau, sorting and nested sorting can be done by simply clicking on the
    icon next to each column name:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Chart'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated with medium confidence](img/B18435_01_12.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.12: Sorting'
  prefs: []
  type: TYPE_NORMAL
- en: 'To double-check the way of sorting, move your cursor onto the **Country** pile
    until the arrow appears in the right corner, click on the arrow next to a given
    field, in this case, **Country**, and select **Sort…**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Graphical user interface, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_13.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.13: Sort settings'
  prefs: []
  type: TYPE_NORMAL
- en: 'From the dropdown, select **Nested** and the desired **Field Name**, as well
    as the **Aggregation** type:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Graphical user interface, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_14.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.14: Nested Sort'
  prefs: []
  type: TYPE_NORMAL
- en: 'After having completed and understood **Sort** and **Nested Sort**, you will
    immediately be able to add value to your dashboards by presenting values in the
    most logical way. Now, we can move on to the next topic, the different default
    chart types Tableau comes with: **Show Me**.'
  prefs: []
  type: TYPE_NORMAL
- en: Show Me
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Show Me** can help users new to Tableau to create the visualization they
    are looking for, such as bar charts, histograms, and area charts. It allows the
    Tableau author to create visualizations from input data at the click of a button.
    To understand how it works, let’s refer to the following screenshot, which again
    makes use of the **Overriding Defaults** worksheet. This view can be accessed
    by clicking the **Show Me** button in the upper-right corner of any Tableau sheet:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Graphical user interface, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_15.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.15: Show Me'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let’s look at the following aspects that are highlighted in the preceding
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**: Selected fields in the **Data** pane'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**B**: Fields deployed in the view, that is, pills'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**C**: The recommended view, highlighted in the **Show Me** panel'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**D**: Help text that communicates the requirements for creating the recommended
    view or any selection choice over which the cursor is placed'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Every icon in **Show Me** that isn’t grayed out represents a visualization that
    can be created simply by clicking on it. For example, in the preceding screenshot,
    *Figure 1.15*, the Tableau author may choose to click on the area chart icon to
    create an area chart based on the selected and deployed fields.
  prefs: []
  type: TYPE_NORMAL
- en: '**Show Me** options are highlighted based on two criteria: the selected fields
    in the **Data** pane and the fields deployed in the view.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Show Me** may be effectively used for the following reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Efficiency**: A proficient Tableau author already knows how to create the
    basic visualization types. **Show Me** automates these basic types and thus may
    be used for quicker production.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Inspiration**: Determining an effective way to visualize a dataset can be
    challenging. **Show Me** can help with this challenge by allowing the Tableau
    author to quickly consider various options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Education**: An inexperienced Tableau author may access **Show Me** to better
    understand how various visualizations are created. By reading the help text displayed
    at the bottom of **Show Me** and changing the pill placement accordingly, much
    can be learned:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/B18435_01_16.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.16: Show Me'
  prefs: []
  type: TYPE_NORMAL
- en: These three reasons demonstrate the strong capabilities that **Show Me** provides
    for worksheet creation; however, be careful not to use it as a crutch. If you
    click on the various options without understanding how each visualization is created,
    you’re not only shortchanging the educational process but you may also generate
    results that you don’t understand and hence cannot explain to your stakeholders.
  prefs: []
  type: TYPE_NORMAL
- en: Once you are happy with the results and confident that the selected visualization
    puts enough emphasis on your data storytelling, your worksheet is ready for the
    next round of development. We’ve looked at some basic visualization creation and
    configuration techniques, so let’s now look at how to group multiple worksheets
    into a dashboard.
  prefs: []
  type: TYPE_NORMAL
- en: Data storytelling is the art of using data to create a compelling story through
    visualizations such as graphs and charts. It combines the power of data analytics
    with storytelling techniques to convey complex information in an engaging and
    understandable way.
  prefs: []
  type: TYPE_NORMAL
- en: Creating dashboards
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although, as stated earlier in this section, a dashboard contains one or more
    worksheets, dashboards are much more than just static presentations. They’re an
    essential part of Tableau’s interactivity. In this section, we’ll populate a dashboard
    with worksheets and then deploy actions for interactivity.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s begin by building a dashboard.
  prefs: []
  type: TYPE_NORMAL
- en: Building a dashboard
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following are the steps for building a dashboard:'
  prefs: []
  type: TYPE_NORMAL
- en: In the workbook for this chapter, navigate to the **Building a Dashboard** tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the **Dashboard** pane, located on the left side of the *Figure 1.17*, double-click
    on each of the following worksheets (in the order in which they are listed) to
    add them to the dashboard pane: **Count of Disciplines**, **Attendees**, **Medals**,
    and **Medal Shapes**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface, chart'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_17.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.17: Creating a dashboard'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the bottom-right corner of the dashboard, click in the blank area (indicated
    by an arrow in *Figure 1.18*) to select a **container**. Containers are a selection
    of sheets that auto-adjust to fit next to/underneath each other on your dashboard:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_01_18.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.18: Deleting a container'
  prefs: []
  type: TYPE_NORMAL
- en: After clicking in the blank area, you should see a blue border around the filter
    and the legends. This indicates that the vertical container is selected. Select
    the vertical container handle and delete it by clicking the **X**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A selected container can also be dragged to a different location on the dashboard,
    replacing an existing sheet or sharing space. Note the gray shading in *Figure
    1.19*, which communicates where the selection will be placed. Drag the **Attendees**
    worksheet by selecting and holding the handle and put it on top of the **Count
    of Disciplines** worksheet in order to swap the two:![](img/B18435_01_19.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 1.19: Moving worksheets'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The gray shading provided by Tableau when dragging elements, such as worksheets
    and containers, onto a dashboard helpfully communicates where the elements will
    be placed. Take your time and observe carefully when placing an element on a dashboard
    or the results may be unexpected.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Note the **Floating** and **Tiled** buttons at the bottom left, next to your
    dashboard, as well as under the handle dropdown. If you select **Floating** instead
    of **Tiled**, your worksheets will not auto-adjust anymore and will be “floating”
    around the dashboard instead. This is a free form of worksheet arrangement on
    a dashboard, which is a powerful functionality, especially combined with transparent
    backgrounds. Note that floating can also be achieved by selecting it from the
    **More Options** dropdown on the right-hand side of every sheet in the dashboard:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated with low confidence](img/B18435_01_20.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.20: Tiled and Floating'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, you can format the dashboard as desired. The following tips may prove
    helpful:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Adjust the sizes of the elements on the screen by hovering over the edges between
    each element and then clicking and dragging. Drag the edges of containers to adjust
    the size of each worksheet.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Make an element floating, as shown in *Figure 1.18*.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Create horizontal and vertical containers by dragging **Horizontal** and **Vertical**
    from the **Objects** pane onto the dashboard. Other objects, such as **Text**,
    **Image**, and **Blank**, can be added to containers too.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Display the dashboard title by selecting **Dashboard** in the top pane, then
    **Show Title**. Double-click the title itself to adjust:![A picture containing
    timeline
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_21.png)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.21: The Olympics dashboard'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As you can see, you have just created your first dashboard. All worksheets are
    in place now. In the next part, we will add filter functionality to make the dashboard
    more interactive and meaningful.
  prefs: []
  type: TYPE_NORMAL
- en: Adding interactivity to a dashboard
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'One of the primary benefits of Tableau is the interactivity it provides for
    the end user. Dashboards aren’t simply for viewing; they’re meant for interaction.
    In this exercise, we’ll add interactivity to the dashboard that was created in
    the previous exercise:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the **Medals** sheet on the dashboard and click on the drop-down arrow
    on the right-hand side, which will open a menu as shown in *Figure 1.22*. From
    there, select **Filters**, then **Sport**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_01_22.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.22: Adding a filter'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now select the newly created filter, **Sport**, click again on the drop-down
    options arrow, and select **Multiple Values (dropdown)**, as well as **Apply to
    Worksheets** | **All Using This Data Source**, as shown in *Figure 1.23*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_01_23.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.23: Filter settings'
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, place the filter above the **Medals** sheet by clicking and dragging
    it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To use the images of the medals as a filter for the other worksheets on the
    dashboard pane, click the **Use as Filter** icon located at the top-right corner
    of the **Medals Shapes** worksheet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_24.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.24: The Use as Filter option'
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, navigate to **Dashboard** | **Actions…**. In the dialog box,
    click **Add Action** | **Filter** and create a filter, as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_25.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.25: Navigating to filters'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_01_26.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.26: Adding a filter action'
  prefs: []
  type: TYPE_NORMAL
- en: From here on in, you are good to go and use filters and action filters.
  prefs: []
  type: TYPE_NORMAL
- en: In Tableau, filters are used to subset the underlying data based on certain
    conditions, while action filters allow users to interactively filter data by clicking
    on a visual element.
  prefs: []
  type: TYPE_NORMAL
- en: In *Chapter 13*, *Improving Performance*, this topic will be discussed in more
    detail.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed the preceding dashboard exercise, you should now be able to
    click on various objects on the dashboard to observe the interactivity.
  prefs: []
  type: TYPE_NORMAL
- en: To learn some more advanced dashboard techniques, be sure to check out *Chapter
    11*, *Designing Dashboards and Best Practices for Visualizations*.
  prefs: []
  type: TYPE_NORMAL
- en: To conclude, you have learned how to put existing worksheets, as tiled or floating
    objects, on a dashboard. You have changed the dashboard layout by dragging and
    dropping, as well as by using containers, filters, and action filters. Each of
    these core activities will be repeated multiple times throughout the book, so
    feel free to come back to this chapter and repeat the exercise steps whenever
    needed!
  prefs: []
  type: TYPE_NORMAL
- en: Next, you will learn how to connect your own data to Tableau and work with it.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting Tableau to your data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At the time of writing, Tableau’s data connection menu includes more than 90
    different connection types. And that’s somewhat of an understatement since some
    of those types contain multiple options. For example, **Other Files** includes
    more than 30 options. Of course, we won’t cover the details for every connection
    type, but we will cover the basics. The official documentation on all connectors
    can be found here: [https://help.tableau.com/current/pro/desktop/en-us/exampleconnections_overview.htm](https://help.tableau.com/current/pro/desktop/en-us/exampleconnections_overview.htm).'
  prefs: []
  type: TYPE_NORMAL
- en: Upon opening a new instance of Tableau Desktop from within Tableau Desktop (**File**
    | **New**), you’ll notice a **Connect to Data** link in the top-left corner of
    the workspace. Clicking on that link will enable you to connect to the data. Opening
    a new instance of Tableau from the application’s location on your computer will
    bring up the blue **Connect** pane right away. Alternatively, you can click on
    the **New Data Source** icon on the toolbar.
  prefs: []
  type: TYPE_NORMAL
- en: Although in future chapters we’ll connect to other data sources, here we’ll
    limit the discussion to connecting to Microsoft Excel and text files.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting to a file
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s see how you can connect to a file, using Excel as an example:'
  prefs: []
  type: TYPE_NORMAL
- en: In Tableau, navigate to **Data** | **New Data Source** | **Excel** to connect
    to the `Sample - Superstore` dataset that is installed with Tableau Desktop (it
    should be located on your hard drive under **My Tableau Repository** | **Data
    sources**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the **Orders** sheet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the **New Worksheet** tab, as shown in *Figure 1.27*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_01_27.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.27: New worksheet'
  prefs: []
  type: TYPE_NORMAL
- en: Rename the newly created tab to `First Worksheet` by right-clicking and selecting
    **Rename**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Place **Discount** on the **Text** shelf in the **Marks** card.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Double-click on **Profit** and **Sales**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_01_28.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.28: First worksheet'
  prefs: []
  type: TYPE_NORMAL
- en: You’ve just created your first worksheet!
  prefs: []
  type: TYPE_NORMAL
- en: If you want to connect to a `.csv` file, you could use the **Text file** option.
    Later in this book, in *Chapter 12*, *Leveraging Advanced Analytics*, we will
    also connect to spatial files.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, we learned how to connect to files. We’ll continue with another
    important connection type in the next section: Tableau Server.'
  prefs: []
  type: TYPE_NORMAL
- en: Connecting to Tableau Server
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Connecting to Tableau Server is perhaps the single most important server connection
    type to consider, since it’s frequently used to provide a better level of performance
    than may otherwise be possible. Additionally, connecting to Tableau Server enables
    the author to receive not only data but also information regarding how that data
    is to be interpreted—for example, whether a given field should be considered a
    measure or a dimension.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll discuss the difference between these terms in the *Dimensions and measures*
    section later in the chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the steps for connecting to Tableau Server:'
  prefs: []
  type: TYPE_NORMAL
- en: To complete this exercise, access to an instance of Tableau Server is necessary.
    If you don’t have access to Tableau Server, consider installing a trial version
    on your local computer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the workbook associated with this chapter, navigate to the **Connecting to
    Tableau Server** worksheet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Right-click on the `Superstore` data source and select **Publish to Server…**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_29.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.29: Publish to Server…'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to **Tableau Server** and follow the prompts to complete the publication
    of the data source.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open a new instance of Tableau Desktop, select **Data** | **New Data Source**
    | **Tableau Server**, and then search for the `Superstore` dataset you just publishedand
    connect.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Having completed the preceding two exercises, let’s discuss the most germane
    point, that is, **metadata**. Metadata is often defined as *data about data*.
    In the preceding case, the data source name, default aggregation, and default
    number formatting are all examples of consistency across multiple authors.
  prefs: []
  type: TYPE_NORMAL
- en: If you were to change a field name, for example, and then publish the data source
    to Tableau Server, the new field name would remain since Tableau remembers changes
    made to the metadata. This is important, for example, if your company has a policy
    regarding the use of decimal points when displaying currency; that policy will
    be easily adhered to if all Tableau authors start building workbooks by pointing
    to data sources where all formatting has been predefined.
  prefs: []
  type: TYPE_NORMAL
- en: Later on in this book, we will connect to other server types, like Google BigQuery,
    but the handling of all servers is pretty much the same and very straightforward.
    If you still have questions, you can always check out [https://help.tableau.com/current/pro/desktop/en-us/exampleconnections_overview.htm](https://help.tableau.com/current/pro/desktop/en-us/exampleconnections_overview.htm).
  prefs: []
  type: TYPE_NORMAL
- en: Now, our last missing piece regarding connections is saved data sources. Please
    follow along with this as well.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting to saved data sources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Connecting to a saved data source on a local machine is very similar to connecting
    to a data source published on Tableau Server. Metadata definitions associated
    with the local data source are preserved just as they are on Tableau Server. Of
    course, since the data source is local instead of remote, the publication process
    is different.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s explore the following steps to create a local data connection using an
    example:'
  prefs: []
  type: TYPE_NORMAL
- en: In the workbook associated with this chapter, navigate to the **First Worksheet**
    tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Data** pane, right-click on the `Superstore` data source and select
    **Add to Saved Data Sources**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the resulting dialog box, save the data source as `Superstore` in **My
    Tableau Repository** | **Data sources**, which is located on your hard drive.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the **Go to Start** icon located in the top-left part of your screen
    and observe the newly saved data source:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_01_30.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.30: Saved Data Sources'
  prefs: []
  type: TYPE_NORMAL
- en: You can save a local data source that points to a published data source on Tableau
    Server. First, connect to a published data source on Tableau Server. Then, right-click
    on the data source in your workspace and choose **Add to Saved Data Sources**.
    Now you can connect to Tableau Server directly from your start page!
  prefs: []
  type: TYPE_NORMAL
- en: Now that we’ve learned how to connect to files, Tableau Server, and saved data
    sources, we will continue our journey and dive into more details regarding **Measure
    Names** and **Measure Values**.
  prefs: []
  type: TYPE_NORMAL
- en: Measure Names and Measure Values
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'I’ve observed the following scenario frequently: a new Tableau author creates
    a worksheet and drags a measure to the **Text** shelf. They drag the second measure
    to various places on the view and get results that seem entirely unpredictable.
    The experience is very frustrating for the author since it’s so easy to accomplish
    this in Microsoft Excel! The good news is that it’s also easy to accomplish this
    in Tableau. It just requires a different approach.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Measure Names** and **Measure Values** are generated fields in Tableau. They
    don’t exist in the underlying data, but they’re indispensable for creating many
    kinds of views. As may be guessed from its placement in the **Data** pane and
    its name, **Measure Names** is a dimension whose members are made up of the names
    of each measure in the underlying dataset. **Measure Values** contains the numbers
    or values of each measure in the dataset.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, we’ll watch what happens when these generated fields are used
    independently, then observe how they work elegantly together to create a view.
    Let’s explore this with an exercise:'
  prefs: []
  type: TYPE_NORMAL
- en: In the workbook associated with this chapter, navigate to the **MeasureNames**/**Values**
    and make sure that the `Olympics` data source is selected.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Drag **Measure Values** to the **Text** shelf and observe the results, all
    four values are printed on top of each other:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface, text, application, chat or text message'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_31.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.31: Measure Values'
  prefs: []
  type: TYPE_NORMAL
- en: 'Clear the worksheet by clicking on the **Clear Sheet** icon on the toolbar:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_32.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.32: Clear Sheet'
  prefs: []
  type: TYPE_NORMAL
- en: Now, drag **Measure Names** to the **Rows** shelf and observe that the view
    merely displays **No Measure Values**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Drag **Measure Values** to the **Text** shelf. Note the list of measures and
    associated values, each of the four values is printed in the respective row:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface, text, application, chat or text message'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_33.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.33: List of Measure Values'
  prefs: []
  type: TYPE_NORMAL
- en: Perhaps the relationship between **Measure Names** and **Measure Values** is
    best explained by an analogy. Consider several pairs of socks and a partitioned
    sock drawer. *Step 2* is the equivalent of throwing the socks into a pile. The
    results are, well, disorganized. *Step 4* is the equivalent of an empty sock drawer
    with partitions. The partitions are all in place but where are the socks? *Step
    5* is a partitioned drawer full of nicely organized socks. `Measure Names` is
    like the sock drawer. `Measure Values` is like the socks.
  prefs: []
  type: TYPE_NORMAL
- en: Independent of one another, they aren’t of much use. Used together, they can
    be applied in many different ways.
  prefs: []
  type: TYPE_NORMAL
- en: Measure Names and Measure Values shortcuts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Tableau provides various shortcuts to quickly create the desired visualization.
    If you’re new to the software, this shortcut behavior may not seem intuitive,
    but you’ll gain an understanding of it. Let’s use the following exercise to explore
    how you can use a shortcut to rapidly deploy `Measure Names` and `Measure Values`:'
  prefs: []
  type: TYPE_NORMAL
- en: In the workbook associated with this chapter, navigate to the **MeasureNames**/**Values
    ShrtCts** worksheet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Drag **# Women** onto **Text** in the **Marks** card.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Drag **# Men** directly on top of **# Women** in the view (**Show Me** appears):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface, text, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_34.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.34: Show Me and Measures'
  prefs: []
  type: TYPE_NORMAL
- en: 'Observe the results, including the appearance of the **Measure Values** shelf,
    the deployment of **Measure Names** on the **Rows** and **Filters** shelves, and
    **Measure Values** on the **Text** shelf:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface, text, application, chat or text message'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_35.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.35: Measure Values appearance'
  prefs: []
  type: TYPE_NORMAL
- en: 'Several things happened in *step 2* of thisexercise. After placing the `# Men`
    number on top of the `# Women` number in the view, Tableau did the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deployed `Measure Names` on the **Filters** shelf:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the `Measure Names` filter by right-clicking and hit **Edit Filter...**
    Observe that only `# Men`and `# Women` are selected. This limits the view to display
    only those two measures.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deployed `Measure Names` on the **Rows** shelf:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`Measure Names` is acting like a partitioned container, that is, like the sock
    drawer in the analogy. Because of the filter, the only rows that display are for
    `# Men` and `# Women`**.**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Displayed the **Measure Values** shelf:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `Measure Values` shelf is somewhat redundant. Although it clearly shows
    the measures that are displayed in the view, it essentially acts as an easy way
    to access the filter. You can simply drag measures on and off of the `Measure
    Values` shelf to adjust the filter and thus display/hide additional `Measure Values`.
    You can also change the order within the `Measure Values` shelf to change the
    order of the measures in the view.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deployed `Measure Values` on the **Text** shelf:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`Measure Values` is simply defining the numbers that will display for each
    row—in this case, the numbers associated with `# Men` and `# Women`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If the visualization has an axis, the shortcut to deploy **Measure Names**
    and **Measure Values** requires the placement of a second measure on top of the
    axis of an initial measure. In *Figure 1.36*, **Year** is located on the **Columns**
    shelf and **Number of Records** on the **Rows** shelf. Note that the screenshot
    was taken while **# Women** was placed on top of the *y*-axis:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_01_36.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.36: Axis shortcut'
  prefs: []
  type: TYPE_NORMAL
- en: 'The resulting worksheet can be seen in *Figure 1.37*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Chart, line chart'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_37.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.37: Two-line chart'
  prefs: []
  type: TYPE_NORMAL
- en: The preceding section gave us a better understanding of **Measure Names** and
    **Measure Values**. You will come across those concepts more in your Tableau career,
    but now that you’ve successfully mastered the basics, let’s move on to three other
    concepts that will be beneficial for your learning curve.
  prefs: []
  type: TYPE_NORMAL
- en: Three essential Tableau concepts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'An important stop on the road to mastering Tableau involves three essential
    concepts. In this section, we’ll discuss each of them:'
  prefs: []
  type: TYPE_NORMAL
- en: Dimensions and measures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Row-level, aggregate-level, and table-level calculations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Continuous and discrete
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We’ll start by defining **dimensions** and **measures**.
  prefs: []
  type: TYPE_NORMAL
- en: Dimensions and measures
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Tableau categorizes every field from an underlying data source as either a **dimension**
    or a **measure**. A dimension is qualitative or, to use another word, categorical.
    A measure is quantitative or aggregable. A measure is usually a number but may
    be an aggregated, non-numeric field, such as `MAX (Date)`. A dimension is usually
    a text, Boolean, or date field, but may also be a number, such as `Number of Records`.
    Dimensions provide meaning to numbers by slicing those numbers into separate parts/categories.
    Measures without dimensions are mostly meaningless.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s look at an example to understand better:'
  prefs: []
  type: TYPE_NORMAL
- en: In the workbook associated with this chapter, navigate to the `Dimensions and
    Measures` worksheet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Drag `Number of Records` to the **Text** on the **Marks** Card. The result
    is mostly meaningless. The number ofmeasures is **15,316**, but without the context
    supplied by slicing the measure across one or more dimensions, there is really
    no way to understand what it means:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface, text, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_38.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.38: Worksheet without context'
  prefs: []
  type: TYPE_NORMAL
- en: 'Place **Country** and **Year** on the **Columns** shelf and **Number of Records**
    on the **Rows** shelf:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Chart, histogram'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_39.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.39: Dimensions and Measures'
  prefs: []
  type: TYPE_NORMAL
- en: As shown in *Figure 1.39*, *step 3* brings meaning. Placing **Country** and
    **Year** on the **Columns** shelf provides context, which imparts meaning to the
    visualization.
  prefs: []
  type: TYPE_NORMAL
- en: Row-level, aggregate-level, and table-level calculations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are three levels of calculations in Tableau: *row*, *aggregate*, and
    *table*. To understand how these three levels function, it’s important to understand
    the Tableau processes. We’ll do so with an example that considers the `Number
    of Records` and `Quantity` fields from the `Superstore` dataset.'
  prefs: []
  type: TYPE_NORMAL
- en: Consider the following calculation types, calculated fields, and queries. A
    comparison to the commonly used language SQL will give us a better understanding
    of how to interpret Tableau calculations. Note that the SQL is slightly simplified
    for the sake of this example.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s take a deeper look at the three levels of calculations and consider the
    example in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Calculation type** | **Calculated field in Tableau** | **Query passed to
    data source** |'
  prefs: []
  type: TYPE_TB
- en: '| **Row-level** | `Number of Records/Quantity` | `SELECT Number of Records
    / Quantity)``FROM Orders` |'
  prefs: []
  type: TYPE_TB
- en: '| **Aggregate-level** | `[Number of Records])/Sum(Quantity)` | `SELECT [Number
    of Records]),``SUM(Quantity) FROM [Orders]` |'
  prefs: []
  type: TYPE_TB
- en: '| **Table level** | `WINDOW_Sum([Number of Records])/Quantity))` | `SELECT
    [Number of Records]),``SUM(Quantity) FROM [Orders]` |'
  prefs: []
  type: TYPE_TB
- en: For the row- and aggregate-level calculations, the computation is actually completed
    by the data source engine, as Tableau is an in-memory tool. Tableau merely displays
    the results. This, however, isn’t the case for the table-level calculation. Although
    the query passed to the data source for the table-level calculation is identical
    to the query for the aggregate-level calculation, Tableau performs additional
    computations on the returned results. Let’s explore this further with an exercise
    using the same calculated fields.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s look at the following steps and begin our exercise:'
  prefs: []
  type: TYPE_NORMAL
- en: In the workbook associated with this chapter, navigate to the `Row_Agg_Tbl`
    worksheet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect to the `Superstore` data source by clicking on `Sample - Superstore`
    in the **Data** section in the top-left corner.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_01_40.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.40: Connect to Superstore'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select **Analysis** | **Create Calculated Field** to create the following calculated
    fields. Note that each must be created separately; that is, it isn’t possible
    in this context to create a single calculated field that contains all three calculations:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Name the first calculation `Lev – Row` and enter the following code: `[Number
    of Records]/[Quantity]`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next, name the second calculation `Lev – Agg` and enter the following code:
    `SUM ([Number of Records])/SUM (Quantity)`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Lastly, name the third calculation `Lev – Tab` and enter `WINDOW_AVG ([Lev -
    Agg])`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: In the **Data** pane, right-click on the three calculated fields you just created
    and select **Default Properties** | **Number format**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the resulting dialog box, select **Percentage** and click **OK**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Place **Order Date** on the **Columns** shelf.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Place **Measure Names** on the **Rows** shelf and **Measure Values** on **Text**
    on the **Marks** card.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Exclude all values except for **Lev - Row**, **Lev - Agg**, and **Lev - Tab**
    bydragging them off the **Measure Values** shelf or removing them from the **Measure
    Names** filter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Graphical user interface, text, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_41.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.41: Level of calculations'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lev - Agg** is an aggregate-level calculation. The computation is completed
    by the data source engine. The sum of `[Number of Records]` is divided by the
    sum of `[Quantity]`. The results of the calculation are likely useful for the
    Tableau author.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Lev - Row** is a row-level calculation. The computation is completed by the
    data source engine. `[Number of Records]` is divided by `[Quantity]` for each
    row of the underlying data. The results are then summed across all rows. Of course,
    in this case, the row-level calculation doesn’t provide useful results; however,
    since a new Tableau author may mistakenly create a row-level calculation when
    an aggregate-level calculation is what’s really needed, the example is included
    here.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Lev - Tab** is a table calculation. Some of the computation is completed
    by the data source engine, that is, the aggregation. Tableau completes additional
    computation on the results returned from the data source engine based on the dimensions
    and level of detail in the data displayed in the sheet. Specifically, the results
    of **Lev - Agg** are summed and then divided by the number of members in the dimension.
    For the preceding example, this is:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/B18435_01_001.png)'
  prefs: []
  type: TYPE_IMG
- en: Once again, the results in this case aren’t particularly helpful but do demonstrate
    knowledge that a budding Tableau author should possess.
  prefs: []
  type: TYPE_NORMAL
- en: Continuous and discrete
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Continuous and discrete aren’t concepts that are unique to Tableau. Indeed,
    both can be observed in many arenas. Consider the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A picture containing text, vector graphics'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_42.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.42: Continuous and discrete'
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding diagram is of two rivers: *River-Left* and *River-Right*. Water
    is flowing in River-Left. River-Right is composed of ice cubes. Could you theoretically
    sort the ice cubes in River-Right? Yes! Is there any way to sort the water in
    River-Left? In other words, could you take buckets of water from the bottom of
    the river, cart those buckets upstream and pour the water back into River-Left,
    and thereby say “I have sorted the water in the river?” No.'
  prefs: []
  type: TYPE_NORMAL
- en: The H[2]O in River-Left is in a continuous form, that is, water. The H[2]O in
    River-Right is in a discrete form, that is, ice.
  prefs: []
  type: TYPE_NORMAL
- en: 'Having considered continuous and discrete examples in nature, let’s turn our
    attention back to Tableau. Continuous and discrete in Tableau can be more clearly
    understood with the following seven considerations:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Continuous is green. Discrete is blue:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select any field in the **Data** pane or place any field on a shelf and you’ll
    note that it’s either green or blue. Also, the icons associated with fields are
    either green or blue.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Continuous is always `numeric`. Discrete may be a `string`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Continuous and discrete aren’t synonymous with dimensions and measures:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It’s common for new Tableau authors to conflate continuous with measures and
    discrete with dimensions. They aren’t synonymous. A measure may be either discrete
    or continuous.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, a dimension, if it’s a number, may be discrete or continuous. To prove
    this point, right-click on any numeric or date field in Tableau and note that
    you can convert it:![Graphical user interface, application
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_43.png)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.43: Converting between discrete and continuous'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Discrete values can be sorted. Continuous values can’t:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sortable/not sortable behavior is most easily observed with dates and a measure
    like `Sum(Sales)`, as shown in the following example:![Graphical user interface,
    text, application, chat or text message
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_44.png)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.44: Left: continuous (not sortable). Right: discrete (sortable)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Continuous colors are gradients. Discrete colors are distinct:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The following example shows **Sales** as continuous and then as discrete. Note
    the difference in how colors are rendered. The left portion of the screenshot
    demonstrates the continuous results in gradients, and the right portion demonstrates
    the discrete results in distinctly colored categories:![Chart, bar chart
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_45.png)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 1.45: Sales as continuous (left) and discrete (right)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Continuous pills can be placed to the right of discrete pills, but not to the
    left because the discrete pills define the aggregation level:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Tableau author is able to place **Region** to the right of **Year** when
    **Year** is discrete.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The Tableau author is unable to place **Region** to the right of **Year** when
    **Year** is continuous.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Continuous creates axes. Discrete creates headers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Note in the right portion of the following screenshot that **Order Date** is
    continuous and the **Year of Order Date** axis is selected. Since **Year of Order
    Date** is an axis, the entire *x*-plane is selected. In the left portion, however,
    **Year(Order Date)** is discrete and **2014** is selected. Since 2014 is a header
    only, it’s selected and not the entire *x*-plane:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Chart, bar chart'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_46.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.46: Continuous (Right) and discrete (left) dates'
  prefs: []
  type: TYPE_NORMAL
- en: 'Congratulations, you just mastered three important concepts in Tableau: measures
    and dimensions, the level of calculations, and discrete and continuous values.
    With this knowledge alone, you will be able to create your first dashboards. I
    want to highly encourage you to do so; the learning curve when playing around
    with these tools will be very steep, and you will gain confidence quickly with
    practice! It will also help you to follow along in the upcoming chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: To conclude the basics, we will cover the export of dashboards to other devices
    next. Even if you don’t feel ready to do so yet, it will round up the basic Tableau
    Desktop tour and will provide the raw diamond as a whole. We can then continue
    improving all bits and pieces in future chapters!
  prefs: []
  type: TYPE_NORMAL
- en: Exporting data to other devices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once a dashboard looks as it’s expected to, the developer has different choices
    for sharing the work. An upload to Tableau Server is the most likely option. The
    end user might not look at the results on just a laptop; they could use a tablet
    or cellphone, too.
  prefs: []
  type: TYPE_NORMAL
- en: Exporting data to a mobile phone
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'While developing a dashboard, Tableau Creator has the option to take a look
    at **Device Designer** or **Device Preview**. Whenever you are on a **Dashboard**
    tab, you can find it here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_01_47.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.47: Device Preview'
  prefs: []
  type: TYPE_NORMAL
- en: 'Tableau comes with default phone settings. If needed, those defaults can be
    adjusted by clicking on **Phone** and then on the three dots. Once you’re in the
    **Device Designer** mode, select a **Device type** option and you’ll get choices
    of the most common models:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Graphical user interface, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_48.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.48: Device type set to Phone'
  prefs: []
  type: TYPE_NORMAL
- en: 'Please be aware that you can only use the sheets that are in the default layout
    of your dashboard. If you want to add a default layout for a tablet, for example,
    go into **Device Designer** mode, select **Tablet**, and move the content in a
    way that the sheets you want to see on your tablet are within the device frame.
    Satisfied? Then add the new layout (highlighted in *Figure 1.50*) to the workbook.
    It will appear under the **Default** one in the top-left area:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Graphical user interface, application'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_49.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.49: Add Tablet Layout'
  prefs: []
  type: TYPE_NORMAL
- en: The user can now select the design needed whenever opening a workbook from Tableau
    Server.
  prefs: []
  type: TYPE_NORMAL
- en: Not only can your projects be viewed conveniently on a mobile device but you
    can also work on them on the go using Tableau Mobile! We’ll cover this in the
    next section.
  prefs: []
  type: TYPE_NORMAL
- en: Tableau Mobile
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In order to support flexible working, Tableau has created an app that can be
    downloaded from the App Store or from Google Play, called **Tableau Mobile**.
    Once installed on your phone and/or tablet, you will get the option to connect
    the app to Tableau Server or Tableau Online. Go ahead and publish the dashboard
    we created in this chapter, *The Olympics*, to either of those two instances.
    If you have questions regarding the publishing, please see *Chapter 14*, *Exploring
    Tableau Server and Tableau Cloud*, for further instructions.
  prefs: []
  type: TYPE_NORMAL
- en: 'At the bottom of your landing page, click **Explore** to see all the views
    you just published. Click on the **Building a Dashboard** view and see your previously
    created dashboard, **The Olympics**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Box and whisker chart'
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B18435_01_50.png)
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 1.50: Mobile dashboard'
  prefs: []
  type: TYPE_NORMAL
- en: 'And the best part is yet to come. The dashboard is fully interactive, so try
    the drop-down filter or the **Medals** filter. Also, try to click on a mark and
    select **Keep Only**. By clicking on the workbook icon at the top right, the first
    icon from the left, all the other sheets you created will be visible, making it
    possible to switch between sheets:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_01_51.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.51: Sheet selection'
  prefs: []
  type: TYPE_NORMAL
- en: Now, if you click the three dots at the top right, even more options will appear,
    such as **Revert**, **Alert**, **Subscribe**, and so on. To learn more about the
    different options that are also available on Tableau Server, see *Chapter 14*,
    *Exploring Tableau Server and Tableau Cloud*. For now, we can conclude that Tableau
    Mobile makes it easy to check your favorite dashboards wherever you are.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we covered the basics of Tableau. We began with some basic
    terminology, then we looked at the basics of creating worksheets and dashboards.
    We focused on default behavior and how to override that behavior, and we considered
    some best practices. Then, we reviewed the fundamental principles of Measure Names
    and Measure Values. After that, we explored three essential Tableau concepts:
    dimensions and measures; row-, aggregate-, and table-level calculations; and the
    concepts of continuous and discrete. Of particular importance is understanding
    that row- and aggregate-level calculations are computed by the data source engine,
    while table-level calculations are handled by Tableau. Finally, we saw how to
    adjust your dashboard for other devices, such as a cellphone or tablet and Tableau
    Mobile in action.'
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we’ll continue our Tableau exploration by looking at data.
    We’ll consider how data is prepared using Tableau’s data handling engine, Hyper,
    and explore some useful data preparation models and techniques.
  prefs: []
  type: TYPE_NORMAL
- en: Learn more on Discord
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To join the Discord community for this book – where you can share feedback,
    ask questions to the author, and learn about new releases – follow the QR code
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://packt.link/tableau](https://packt.link/tableau)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/QR_Code2044012316175764640.png)'
  prefs: []
  type: TYPE_IMG
