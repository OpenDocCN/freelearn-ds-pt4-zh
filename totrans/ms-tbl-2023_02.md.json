["```py\n    SUM([Number of Records]) / TOTAL(SUM([Number of Records])) \n    ```", "```py\n    CASE [Select Field]\n    WHEN 1 THEN IF ISNULL ([Country]) THEN 'Null Values' ELSE\n    'Populated Values' END\n    WHEN 2 THEN IF ISNULL ([Region]) THEN 'Null Values' ELSE\n    'Populated Values' END\n    WHEN 3 THEN IF ISNULL ([Economy (GDP per Capita)]) THEN 'Null Values' ELSE\n    'Populated Values' END\n    WHEN 4 THEN IF ISNULL ([Family]) THEN 'Null Values' ELSE\n    'Populated Values' END\n    WHEN 5 THEN IF ISNULL ([Freedom]) THEN 'Null Values' ELSE\n    'Populated Values' END\n    WHEN 6 THEN IF ISNULL ([Happiness Rank]) THEN 'Null Values' ELSE\n    'Populated Values' END\n    WHEN 7 THEN IF ISNULL ([Happiness Score]) THEN 'Null Values' ELSE\n    'Populated Values' END\n    WHEN 8 THEN IF ISNULL ([Health (Life Expectancy)]) THEN 'Null Values' ELSE\n    'Populated Values' END\n    WHEN 9 THEN IF ISNULL ([Standard Error]) THEN 'Null Values' ELSE\n    'Populated Values' END\n    END \n    ```", "```py\n    CASE [Country]\n    WHEN 'Afghanistan' THEN 'Southern Asia'\n    WHEN 'Albania' THEN 'Central and Eastern Europe'\n    WHEN 'Algeria' THEN 'Middle East and Northern Africa'\n    WHEN 'Angola' THEN 'Sub-Saharan Africa'\n    WHEN 'Argentina' THEN 'Latin America and Caribbean'\n    WHEN 'Armenia' THEN 'Central and Eastern Europe'\n    WHEN 'Australia' THEN 'Australia and New Zealand'\n    WHEN 'Austria' THEN 'Western Europe'\n    //complete the case statement with the remaining fields in the data set\n    END \n    ```", "```py\n    If [Country] = 'Afghanistan' then 'Southern Asia' \n    ELSEIF [Country] = 'Albania' then â€¦\n    END \n    ```", "```py\n    WHEN 10 THEN IF ISNULL ([Region Extrapolated]) THEN 'Null Values' ELSE 'Populated Values' END \n    ```", "```py\nCASE [% Populated]\nWHEN 1 THEN IF ISNULL ([Country]) THEN 'Null Values' ELSE\n'Populated Values' END\n... \n```", "```py\nSUM([Number of Records]) / TOTAL(SUM([Number of Records])) \n```", "```py\nCASE [Country]\nWHEN 'Afghanistan' THEN 'Southern Asia'\n... END \n```", "```py\n    SPLIT([Diagnosis], \" \", 1) \n    ```", "```py\n    INT(MID([DX],2,1)) \n    ```", "```py\n    ISNULL([Null Hunting]) \n    ```", "```py\n    REPLACE([Diagnosis],[DX] + \"\",\"\") \n    ```", "```py\n    SPLIT([Diagnosis], \" \", 1) \n    ```", "```py\n    INT(MID([DX],2,1)) \n    ```", "```py\n    ISNULL([Null Hunting]) \n    ```", "```py\n    REPLACE([Diagnosis],[DX] + \"\",\"\") \n    ```", "```py\n    \\([0-9]{3}\\)-[0-9]{3}-[0-9]{4} \n    ```", "```py\n    REGEXP_EXTRACT([String of Data (String of Data)],'(\\([0-9]{3}\\)-[0-9]{3}-[0-9]{4})') \n    ```", "```py\n    REGEXP_EXTRACT([String of Data],'()') \n    ```", "```py\n    \\([0-9]{3}\\)-[0-9]{3}-[0-9]{4} \n    ```", "```py\n(?:[a-z0-9!#$%&'*+/=?^_'{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_'{|}~-\n]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\n\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-\n]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-\nz0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-\n5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\n\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\n\\x7f])+)\\]) \n```"]