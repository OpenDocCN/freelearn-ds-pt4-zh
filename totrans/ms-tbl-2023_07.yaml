- en: Practicing Level of Detail Calculations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When we talk about **Level of Detail** (**LOD**) calculations in Tableau, we
    mean three expressions: `FIXED`, `INCLUDE`, and `EXCLUDE`. These three expressions
    open up a world of options by providing the ability to create calculations that
    target specific levels of granularity. In older versions of Tableau, data granularity
    for a worksheet was established by the dimensions in a view. If the view contained
    dimensions for, for example, **Region**, **State**, and **Postal Code**, but the
    author wanted to create a **City**-level calculation, the **City** dimension would
    need to be included on the view. Furthermore, there was no mechanism for excluding
    or ignoring a given **dimension** on a view. Admittedly, the desired results could
    normally be obtained through some complex and sometimes convoluted use of table
    calculations, data blends, and so on. Fortunately, LODs greatly simplify these
    use case scenarios and, in some cases, enable what was previously impossible.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will discuss the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Introducing LODs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`FIXED` and `EXCLUDE`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`INCLUDE`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building practical applications with LODs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The early sections of this chapter are more theory-based, but don’t worry –
    you’ll get to explore these concepts in a practical way in the *Building practical
    applications with LODs* section. Let’s begin by introducing LODs and how they
    are used.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing LODs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Tableau’s default is to show measures in a view based on the dimensions also
    present in the view. If you have a dashboard with `Sales` data and dimensions
    like `State` and `City`, and you drag the `State` and `Sales` data onto the view,
    the `Sales` data will be divided by `State`, showing you `Sales` per `State`.
    If you want to divide the `Sales` data further into smaller chunks, you might
    add the `City` field, resulting in `Sales` data per `City`, per `State`. LODs
    can manipulate this default behavior.
  prefs: []
  type: TYPE_NORMAL
- en: After completing this chapter, you will be able to divide or partition measures
    by dimensions that are not in the view and show measures using fewer dimensions
    than are visible in the view.
  prefs: []
  type: TYPE_NORMAL
- en: To do this, we will build and use two **playgrounds**. Delivering reports as
    required by one’s job duties may lead to a thorough knowledge of a limited set
    of capabilities; that is, a deep but narrow understanding. It can be difficult
    to set aside time (and justify that time) to explore the capabilities of Tableau
    that, on the surface, may seem to have no direct correlation to job duties. Playground
    environments can help overcome any difficulties and objections by providing efficient
    avenues of exploration. In this chapter, we’ll build two playground environments
    specifically for LODs, to help make the task of deep and broad understanding easier
    by providing an efficient avenue for exploration and understanding. You can always
    come back to the workbook accompanying this chapter and test functionality related
    to LODs.
  prefs: []
  type: TYPE_NORMAL
- en: FIXED and EXCLUDE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first playground we will build will be for the purpose of exploring two
    of the three LOD functions: `FIXED` and `EXCLUDE`. We will use a set of parameters
    and associated calculated fields to efficiently explore how these functions work.'
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the workbook
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Much of the groundwork for this exercise has already been completed in the workbook
    associated with this chapter. The following steps will simply require you to open
    different calculations and parameters to see how they have been set up and why
    this works. Explanations are given along the way. If you do not have ready access
    to the workbook, you should be able to construct a similar one by referencing
    the following steps.
  prefs: []
  type: TYPE_NORMAL
- en: 'To complete the initial setup of a worksheet, take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to [https://public.tableau.com/profile/marleen.meier](https://public.tableau.com/profile/marleen.meier)
    to locate and download the workbook associated with this chapter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the workbook associated with this chapter and navigate to the `Fixed and
    Exclude` worksheet. The worksheet should look as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_01.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.1: The worksheet'
  prefs: []
  type: TYPE_NORMAL
- en: Select the `Superstore` data source and inspect the parameter named **1st Dim**
    by right-clicking and selecting **Edit**:![](img/B18435_07_02.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 7.2: Parameter I'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The parameters named **2nd Dim**, **3rd Dim**, and **4th Dim** are identical
    to **1st Dim**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note that except for **Order Date** and **Ship Date**, every dimension in the
    dataset is included in the list of values (see *Figure 7.2*). For the purposes
    of this exercise, **Category**, **Region**, **Segment**, **Ship Mode**, and **Sub-Category**
    are particularly important because these are dimensions with fewer members. Dimensions
    with many members are more difficult to use in this context.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Inspect the **Choose Fixed Dims**, **Choose Excluded Dims 1**, and **Choose
    Excluded Dims 2** parameters included in the workbook and note that we defined
    several integers under the **Value** column, each of which will later be visible
    as a string specified under the **Displays As** column in the parameter dropdown.
    The **Value** and **Display As** configurations for **Choose Fixed Dims** are
    as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.3: Parameter II'
  prefs: []
  type: TYPE_NORMAL
- en: 'Inspect the calculated field named **1st Dim** (it is located under the **Practical:
    All** folder in the **Data** pane); this calculation makes use of the `1st Dim`
    parameter and will cause a field to be displayed depending on the selection of
    the parameter. If the user selects **Category** in the **1st Dim** parameter**,**
    value `1` will be activated (according to the values specified in*Figure 7.2*).
    Value `1` then translates to the **Category** field in the calculated **1st Dim**
    field, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_04.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.4: Calculated 1st Dim field'
  prefs: []
  type: TYPE_NORMAL
- en: The calculated fields named **2nd Dim**, **3rd Dim**, and **4th Dim** are identical
    to **1st Dim** except that each references the parameter bearing its name; for
    example, the **2nd Dim** calculated field utilizes `[Parameters].[2nd Dim]`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: These `Case` statements, in conjunction with the associated parameters, will
    allow you to choose which dimensions to view from a dropdown in the view as described
    in *step 5*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Inspect the following calculated fields, which enable you to choose which LODs
    to employ and thus to compare and contrast differences and similarities:![](img/B18435_07_05.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 7.5: Case Fixed'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The **Case Fixed** calculation shows that if the user selects `1` in the **Choose
    Fixed Dims** parameter (which is being displayed as **1st**), **1st Dim** will
    be fixed—no matter what the dashboard setup. That means that **SUM(Sales)** will
    be partitioned over **1st Dim**, no matter if it is part of the dashboard:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B18435_07_06.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 7.6: Case Exclude 1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The **Case** **Exclude 1** calculation shows that if the user selects `1` in
    the **Choose Excluded Dims 1** parameter (which will be displayed as **1st**),
    **1st Dim** will be excluded from the calculation in the view.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'That means that **SUM(Sales)** won’t be partitioned over **1st Dim**, even
    if it is part of the view:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B18435_07_07.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 7.7: Case Exclude 2'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The **Case** **Exclude 2** calculation shows that if the user selects `1` in
    the **Choose Excluded Dims 2** parameter (which will be displayed as **1st**),
    **1st Dim** will be excluded from the calculation in the view. That means that
    **SUM(Sales)** won’t be partitioned over **1st Dim**, even if it is part of the
    view.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now, right-click and open the context filter on **Product Name** for inspection.
    In the resulting dialog box, click the **Wildcard** tab and note the settings,
    as shown in the following screenshot. The filter has been set to show only product
    names that start with `S` (**Match value** is not case-sensitive.):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_08.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.8: Wildcard filter'
  prefs: []
  type: TYPE_NORMAL
- en: 'After clicking **OK**, right-click on the filter and click **Add to Context**.
    Note that context filters are denoted in gray:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_09.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.9: Gray context filter'
  prefs: []
  type: TYPE_NORMAL
- en: 'Place the following dimensions on the **Rows** shelf: **1st Dim**, **2nd Dim**,
    **3rd Dim**, and **4th Dim**.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Drag **Measure Names** onto the **Filters** shelf and select **Sales**, **Case
    Fixed**, **Case Exclude 1**, and **Case Exclude 2**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add **Measure Values** to **Text** and **Measure Names** to **Columns**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_10.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.10: Measure Values'
  prefs: []
  type: TYPE_NORMAL
- en: 'Display every parameter by right-clicking each one and selecting **Show Parameter
    Control**. Order the parameter controls as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_11.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.11: Final playground'
  prefs: []
  type: TYPE_NORMAL
- en: By following the previous steps, we are now ready to build various tables to
    compare the different LODs because the parameters will allow us to select different
    dimensions and the calculated fields that incorporate the `FIXED` and `EXCLUDE`
    functions from Tableau. We will now continue using the playground and explain
    how LODs change calculated fields.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding FIXED
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that the playground environment is complete, let’s build scenarios to better
    understand the `FIXED` and `EXCLUDE` functions. We’ll begin with `FIXED`. The
    `FIXED` LOD considers only the dimensions to which it is directed. Thus, when
    fixed on a dimension, all other (if any) dimensions in the view are ignored. When
    the `FIXED` LOD is used without defining any dimension, the result will be a calculation
    ignoring all (if any) dimensions in the view.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s jump into the exercise and see this for ourselves:'
  prefs: []
  type: TYPE_NORMAL
- en: Using the worksheet described previously, set the parameters as shown here:![](img/B18435_07_12.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 7.12: First example'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: What we achieve with the different parameters is that we show the **SUM(Sales)**
    per **Region** and each **Region** per **Category**, but we also fixed the **SUM(Sales)**
    calculation for the **Category** dimension in the **Case Fixed** column.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The **Case Fixed** column now displays the totals for each **Category** and
    ignores **Region** because we told the calculation to fix the **2nd Dim** (**Region**)
    and ignore the dimensions in the view itself.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The effect of this is visible by comparing the **Sales** column and the **Case
    Fixed** column:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B18435_07_13.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 7.13: Case Fixed I'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Check for yourself and do the math for **Furniture**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 10,072 + 14,249 + 4,494 + 18,564 = 47,379.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Even though the **Region** is visible in the view, the **SUM(Sales)** in the
    **Case Fixed** column ignores the **Region** and shows the results as if the **Category**
    dimension is the only dimension in the view. We manipulated the granularity of
    the data. In the **Case Fixed** column, **Region** is there for informative purposes
    only but does not affect the calculation of **SUM(Sales)**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now change the **Choose Fixed Dims** parameter to **1st** and note that **Case
    Fixed** now displays the totals for each **Region**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_14.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.14: Case Fixed II'
  prefs: []
  type: TYPE_NORMAL
- en: 'This time, we fix the calculation in the **Case Fixed** column to only take
    the **Region** into account but ignore the **Category**. Check for yourself and
    do the math for **Central**: 10,072 + 16,340 + 13,995 = 40,406.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Change the **Choose Fixed Dims** parameter to **Fixed: Nothing** and note that
    the amount reflects the total **SUM(Sales)**:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B18435_07_15.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 7.15: Fixed: Nothing'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This time, we fixed the calculation to nothing, meaning that we ignore every
    dimension in the view. Check for yourself and do the math by summing the **Sales**
    values; the sum will be 194,776.
  prefs: []
  type: TYPE_NORMAL
- en: 'As is evident, the `FIXED` LOD considers only the dimensions to which it is
    directed. Thus, when fixed on **Category**, **Region** is ignored. And, as demonstrated,
    when fixed on **Region**, **Category** is ignored. Lastly, when **Choose Fixed
    Dims** is set to **Fixed: Nothing**, the entire dataset that is not restricted
    by the context filter on **Product Name** is displayed.'
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s look at a couple of new features introduced with Tableau 2021.1
    that pertain to `FIXED` LODs.
  prefs: []
  type: TYPE_NORMAL
- en: Table-scoped expressions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A quick way to write a `FIXED` LOD expression when using a whole table as the
    scope is using code like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If you use this calculation on the `Superstore` dataset, you will achieve the
    exact same as writing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: No matter what you show in the view, this field will always retrieve the latest
    data from the whole table. Cool, right?
  prefs: []
  type: TYPE_NORMAL
- en: Quick LODs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tableau 2021.1 allows us to create `FIXED` LODs faster. Simply drag the desired
    measure on top of a dimension and press *Ctrl* (or *Cmd* on macOS).
  prefs: []
  type: TYPE_NORMAL
- en: Now you will see the dimension highlighted in blue (see **Region** in *Figure
    7.16*). Then drop the measure there and a new measure field (in this case, **Sales
    (Region)**) will be created.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_07_16.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.16: Quick LOD'
  prefs: []
  type: TYPE_NORMAL
- en: 'Right-click on **Sales (Region)** and note that a `FIXED` LOD has been created:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_07_17.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.17: Quick LOD II'
  prefs: []
  type: TYPE_NORMAL
- en: If you’re working with Tableau 2021.1 or higher, you can use this shortcut for
    `FIXED` LODs.
  prefs: []
  type: TYPE_NORMAL
- en: The playground we built was not only meant for `FIXED` but also for `EXCLUDE`.
    Let us have a look at `EXCLUDE` next.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding EXCLUDE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s start understanding the `EXCLUDE` LOD. The `EXCLUDE` LOD will exclude
    any dimension to which it is directed. If your view contains **Region** and **Category**
    and you write an `EXCLUDE` LOD on **Category**, only **Region** will be considered
    in the calculations. The following example will make this clearer—our goal in
    this exercise is to calculate `SUM(Sales)` by using fewer dimensions than in the
    view. We want to exclude visible dimensions only from the calculation but still
    show the dimension values in the dashboard:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Set the parameters as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_18.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.18: Fixed: Nothing'
  prefs: []
  type: TYPE_NORMAL
- en: You can observe the following results:![](img/B18435_07_19.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 7.19: Exclude I'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Case Exclude 1** displays the total of each **Category** and **Segment**
    and ignores **Region**. For example, the total of the segment **Consumer** within
    the category **Furniture** is $26,738\. That total is repeated for each **Region**.
    The relevant code that is generating these results is'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Make the following changes to the parameters:![](img/B18435_07_20.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 7.20: Exclude II'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Any LOD calculation can be used with multiple dimensions in a view. In this
    case, **Case Exclude 2** ignores two dimensions: **1st Dim** and **2nd Dim**,
    which are associated with **Region** and **Category**. The associated code for
    **Case Exclude 2** is therefore:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The associated code for **Case Fixed** is:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Case Exclude 2** and **Case Fixed** now have identical results. This is because
    excluding the first two dimensions is the same as fixing on the third dimension.
    Only the third dimension **Segment** is considered in both cases.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You can observe the results in the following screenshot:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B18435_07_21.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 7.21: Exclude II table'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Make the following changes to the parameters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_22.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.22: Change 4th dimension'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can observe the results as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_23.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.23: Exclude III'
  prefs: []
  type: TYPE_NORMAL
- en: Note that **Case Exclude 2** and **Case Fixed** no longer have identical results.
    This is because **Ship Mode** was introduced and **Case Exclude 2** considers
    **Ship Mode** whereas **Case Fixed** does not.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Experiment with other settings to further enhance your understanding of the
    `FIXED` and `EXCLUDE` LODs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`EXCLUDE` will cause any dimension addressed in the LOD calculation to be removed
    from the calculation. Multiple dimensions can be part of an `EXCLUDE` LOD and
    common use cases include the direct comparison of values at a lower level of aggregation
    (fields that are in the view) to a higher aggregate (as if dimensions would be
    removed from the view). Let us assume you want to visualize the sales of categories
    in different regions as well as the total sales in each region. You might also
    want to calculate the difference from a single category in a region to the region
    overall. Isn’t it so cool that LODs can solve this seemingly impossible scenario?
    I hope that the preceding exercise gave you a better feel for the `EXCLUDE`LOD.'
  prefs: []
  type: TYPE_NORMAL
- en: As a quick interlude after those exercises on `FIXED` and `EXCLUDE`, let us
    take a closer look at Tableau’s order of operations. As you now know, getting
    the same result for `FIXED` and `EXCLUDE` is not always the case – the order of
    operations will help us understand why.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Tableau’s order of operations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The previous exercise led us to believe that the same results for `FIXED` and
    `EXCLUDE` can be achieved by fixing the dimensions that are not excluded and vice
    versa. However, the order in which Tableau executes a `FIXED` and an `EXCLUDE`
    LOD differs and can hence cause unexpected results. To avoid this, I will show
    you what to consider when using either `FIXED` or `EXCLUDE` LODs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us have a look at the order of filtering:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Set the parameters as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_24.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.24: Set parameters'
  prefs: []
  type: TYPE_NORMAL
- en: Observe the results:![](img/B18435_07_25.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 7.25: Same results'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note that, as seen in the previous exercise, **Case Exclude 2** and **Case Fixed**
    are identical.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Right-click on the **Product Name** filter and select **Remove from Context**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_26.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.26: Remove from Context'
  prefs: []
  type: TYPE_NORMAL
- en: 'Observe the results in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_27.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.27: Without context filter'
  prefs: []
  type: TYPE_NORMAL
- en: '**Case Exclude 2** and **Case Fixed** are no longer identical. **Case Fixed**
    is no longer impacted by the **Product Name** filter because the context was removed.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The behavior difference observed between `EXCLUDE` and `FIXED` in the preceding
    exercise reflects the underlying filter order of operations. As shown in *Figure
    7.27*, **Context Filters** will impact `FIXED`, `EXCLUDE`, and `INCLUDE` calculations
    because the **Context** **Filter** is being applied first to the dataset, then
    the LOD. **Dimension Filters**, however, will only impact `EXCLUDE` and `INCLUDE`
    LODs because the `FIXED` LOD will be applied to the dataset first and then the
    dimension filter, followed by the `EXCLUDE` and `INCLUDE` LODs.
  prefs: []
  type: TYPE_NORMAL
- en: 'See the following diagram, a schematic representation of the order of operations
    in Tableau:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_07_28.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.28: Order of operations'
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 7.28* is sourced from Tableau’s help pages, here: [https://help.tableau.com/current/pro/desktop/en-us/order_of_operations.htm](https://help.tableau.com/current/pro/desktop/en-us/order_of_operations.htm).'
  prefs: []
  type: TYPE_NORMAL
- en: This page also contains more information on Tableau’s order of operations.
  prefs: []
  type: TYPE_NORMAL
- en: 'We just saw that when using a context filter, `EXCLUDE` and `FIXED` LODs can
    result in the same numbers, whereas a dimension filter will cause the results
    to differ. This happens because Tableau executes the different requests after
    one another. As can be seen in the preceding diagram, the order of operations
    is:'
  prefs: []
  type: TYPE_NORMAL
- en: Context filters
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`FIXED` LOD'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Dimension filters
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`INCLUDE` and `EXCLUDE` LODs'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is important for you to know to choose the correct filter or LOD for your
    purpose.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will use a new playground, this time to show how `INCLUDE` LODs work.
  prefs: []
  type: TYPE_NORMAL
- en: INCLUDE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The second playground is mostly set up for you when using the accompanying workbook
    ([https://github.com/PacktPublishing/Mastering-Tableau-2023-Fourth-Edition/tree/main/Chapter07](https://github.com/PacktPublishing/Mastering-Tableau-2023-Fourth-Edition/tree/main/Chapter07)).
    We will, however, add some calculated fields for the purpose of effective exploration.
    If you do not have ready access to the workbook, you should be able to construct
    a similar one by referencing the following information.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the workbook
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the following, we will set up a worksheet with which we can practice the
    `INCLUDE` LODs:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the workbook associated with this chapter and navigate to the `Exploring
    Include` worksheet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The parameters and calculated fields named **1st Dim**, **2nd Dim**, **3rd Dim**,
    and **4th Dim** created in the previous exercises are also utilized for this worksheet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the **1st Dim** parameter and choose **Duplicate**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Rename the duplicate `Choose` `Included Dims`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new calculated field named `Case``Include` with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Place **Case Include** on the **Detail** shelf.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Place the following measures and dimensions on their respective shelves:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_29.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.29: Exploring INCLUDE'
  prefs: []
  type: TYPE_NORMAL
- en: 'Display each of the following parameters by right-clicking each one and selecting
    **Show Parameter Control**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_30.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.30: Parameters'
  prefs: []
  type: TYPE_NORMAL
- en: After you have finished the initial setup, we can finally start to investigate
    the `INCLUDE` LOD.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding INCLUDE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that the playground environment is complete, let’s build a scenario to better
    understand `INCLUDE`. By now, you can probably imagine that if the `FIXED` and
    `EXCLUDE` LODs remove dimensions from a calculation, `INCLUDE` adds dimensions.
    Correct! It might happen that you want to include one or more dimensions in a
    calculation even though the view doesn’t show them. The next example will make
    use of this functionality to show an average per sub-category without showing
    the sub-category. One would want to do this because the sub-category has so many
    additional values that the dashboard will be harder to read, and it will take
    longer to draw quick conclusions. Nevertheless, it is of interest to know the
    average per sub-category because the number of sub-categories might differ per
    **Region** and other dimensions, and thus including it will give insights into
    the real average sales.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s see it in action:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Set the parameters on the right-hand side as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_31.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.31: Initial layout'
  prefs: []
  type: TYPE_NORMAL
- en: 'Add two reference linesby clicking on **Analytics** and edit them using the
    following settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_32.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.32: Reference line settings'
  prefs: []
  type: TYPE_NORMAL
- en: 'Look at the following screenshot for the result. Note that both reference lines
    are equal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_33.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.33: Sales per region and reference lines'
  prefs: []
  type: TYPE_NORMAL
- en: 'If the reference lines are overlapping with each other, edit the formatting
    and set **Alignment** to **Top**. To access the formatting, click on the reference
    line in the view:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_34.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.34: Format Reference Line'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, set the parameters as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_35.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.35: Format Reference Line'
  prefs: []
  type: TYPE_NORMAL
- en: 'In Tableau Desktop, you should now see the following. As before, both **Reference
    Lines** are equal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_36.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.36: Reference Lines'
  prefs: []
  type: TYPE_NORMAL
- en: Change the **Choose Included Dims** parameter to **Category**, **Ship Mode**,
    and **Segment**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note that the **Reference Lines** equal one another for each of these settings.
    This is because **Choose Included Dims** is only introducing dimensions already
    represented in the view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Change the **Choose Included Dims** parameter to **Sub-Category** to see the
    additional reference line in its intended place:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_37.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.37: Showing an additional Reference Line'
  prefs: []
  type: TYPE_NORMAL
- en: The **Include Dim Avg** reference line now includes **Sub-Category** in the
    average and therefore differs from the **Overall Avg** reference line. The average
    is smaller because the total **Sales** amount is being divided over more points
    than are visible in the view. Adding **Sub-Category** to the LOD leads to more
    rows, which leads to a smaller average per row. Furthermore, note that the **Sub-Category**
    dimension is not used in the view. LODs do not require a calculation to reside
    in the view.
  prefs: []
  type: TYPE_NORMAL
- en: 'To summarize, the `INCLUDE` LOD can manipulate a visualization in a way that
    partitions can be added that are not used in the view itself. Also, the naming
    convention for all three LODs will be your best mnemonic in understanding them:
    `Fixed` to fix the fields used, `Include` to add “missing” fields, and `Exclude`
    to remove unwanted fields from the calculations that are already present.'
  prefs: []
  type: TYPE_NORMAL
- en: To get more hands-on training, we will continue with a few practical applications.
  prefs: []
  type: TYPE_NORMAL
- en: Building practical applications with LODs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first portion of this chapter was designed to demonstrate how LODs work.
    The remainder will be dedicated to practical applications. Specifically, we will
    consider three typical challenges that previously were solved using other Tableau
    capabilities, such as table calculations and data blending.
  prefs: []
  type: TYPE_NORMAL
- en: This exercise will look at a problem that occurs when mixing a table calculation
    that calculates the percentage of the total with a dimension filter. We will consider
    the problem, a solution using a LOD calculation, and finish with a commentary
    section on the germane points of the solution.
  prefs: []
  type: TYPE_NORMAL
- en: Using the LOD FIXED calculation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Did you ever encounter a situation where you wanted to calculate the **Percent
    of Total** while only showing a subset of the **Total** dimension in your view?
    Well, you are not alone. But thanks to LODs, you will soon know how to solve this
    problem. The following steps will guide you through the exercise:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the workbook associated with this chapter and navigate to the worksheet
    entitled `The Problem`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the `2012_World_Pop` dataset.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a calculated field named `Percent of Total` with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Right-click on **Percent of Total** and select **Default Properties** | **Number
    Format** | **Percentage**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Place **Country** on the **Columns** shelf, **Measure Names** on the **Rows**
    shelf, and **Measure Values** on the **Text** shelf.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Remove **Number of Records** from the **Measure Values** shelf.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on **Percent of Total** and set it to **Compute Using** | **Country**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a filter on **Country** such that only **Afghanistan** displays:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_38.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.38: Population of Afghanistan'
  prefs: []
  type: TYPE_NORMAL
- en: '**Afghanistan** displays the percentage of the total as 100%. Obviously, this
    does not represent Afghanistan’s percentage of the total population of the world.
    Let’s investigate a possible solution—to solve the issue with a LOD, follow along
    with the exercise steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Duplicate the worksheet entitled `The Problem` and rename it `Solution LOD`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a calculated field named `Percent of Total LOD` with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Place **Percent of Total LOD** on the **Measure Values** shelf and note that
    the displayed percentage equals **0.43%**. If **0** displays, change the number
    formatting to percentage:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_39.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.39: Percent of total'
  prefs: []
  type: TYPE_NORMAL
- en: 'Remove the **Percent of Total** table calculation that was previously created
    from the **Measure Values** shelf:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_40.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.40: Percent of total LOD'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, problem solved! To better understand what is happening in the
    background, let’s look at a query that Tableau generates for the worksheet entitled
    `The Problem`. Generated queries can be viewed by clicking **Help** | **Settings
    and Performance** | **Start Performance Recording**. (See *Chapter 11*, *Designing
    Dashboards and Best Practices for Visualizations*, for additional information
    regarding viewing Tableau’s generated queries.)
  prefs: []
  type: TYPE_NORMAL
- en: 'The SQL statement is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Note that the `WHERE` clause in the query is limiting the returned dataset to
    only those rows that have `Afghanistan` as **Country**. This `WHERE` clause was
    generated because of placing **Country** on the **Filters** shelf. By limiting
    the returned data, the processing requirements are shifted from Tableau to the
    underlying data source engine. In other words, the data source engine does the
    work of executing the query, and Tableau thus works with a smaller dataset. The
    reasoning behind this design is that data source engines are specifically engineered
    to efficiently query large datasets and typically have underlying hardware to
    support such activities. Furthermore, limiting the rows of data returned to Tableau
    can reduce inefficiencies due to latency.
  prefs: []
  type: TYPE_NORMAL
- en: Inefficiencies are further reduced because Tableau works from the cache whenever
    possible. Often, a user can perform various operations without generating a call
    to the underlying data source. However, in the preceding case, if a user were
    to select a different **Country** from the filter, Tableau would generate a new
    query to the data source. For example, if a user interacts with the filter and
    deselects `Afghanistan` and selects `Albania`, a new query with a corresponding
    `WHERE` clause is generated. Although the logic of Tableau’s reliance on the data
    source engine is demonstrable, the problem proposed in the preceding example remains.
    What can a Tableau author do to calculate the percent of the whole regardless
    of filtering?
  prefs: []
  type: TYPE_NORMAL
- en: A solution is to create a table calculation that can also be used as a filter.
    The difference is that unlike in the worksheet `The Problem`, the query generated
    by Tableau to the data source returns the entire dataset. When a table calculation
    is used in a filter, the filtering does not take place until the underlying data
    is returned. In other words, Tableau performs the filtering. This preserves a
    percent of the total percentages regardless of which country population totals
    the user chooses to view. But a potential issue with table calculations is that
    the returned dataset may be quite large, which may cause performance challenges.
    Latency may be experienced due to the increased time required to return a large
    dataset, and Tableau may perform more slowly because of additional processing
    responsibilities to filter the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: 'Our proposed solution, an LOD calculation, can address these challenges. Let’s
    look at the SQL queries created by the `Percent of Total LOD` calculated field
    in the `Solution LOD` worksheet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Note the term `CROSS JOIN`; the LOD calculation generates a query that instructs
    the underlying data source engine to return data in such a way as to allow Tableau
    to divide the population values of one or more countries by the world population
    total, thus returning the correct percentage of the total.
  prefs: []
  type: TYPE_NORMAL
- en: Using the LOD INCLUDE calculation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Next, we will practice the `INCLUDE` LOD calculation. In this exercise, we
    will create a worksheet that displays the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Total sales per region
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The average of total sales across all regions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The average of total sales across all states in each region
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Using a LOD calculation to display these values is straightforward. Let’s explore.
    Follow along with the exercise steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Select the `Practical Include` worksheet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the `Superstore` dataset.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a calculated field named `Per State INCLUDE` with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Drag **Region** to the **Columns** shelf, **SUM(Sales)** to the **Rows** shelf,
    and **AVG(Per State INCLUDE)** to the **Details** shelf. Be sure to change **Per
    State INCLUDE** to an average aggregation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add two **Reference Lines** by right-clicking on the **Sales** axis and selecting
    **Add Reference Line**. Use the following settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_41.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.41: Reference lines'
  prefs: []
  type: TYPE_NORMAL
- en: 'Complete the worksheet by formatting it as desired:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_42.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.42: Average per Region and State'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, thanks to the LOD, we can display a line chart per **Region**,
    as well as one for the whole dataset. This is possible because we included the
    **State** dimension in our **Per State INCLUDE** calculation. Using this calculated
    field to create a reference line allows Tableau to show not only the average per
    (visible) **Region** but also the average per **State** (invisible) per **Region**.
  prefs: []
  type: TYPE_NORMAL
- en: Using the LOD EXCLUDE calculation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this exercise, we will create a worksheet using the `Superstore` dataset,
    which will calculate the percentage of sales generated by each city in a region.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow along with the exercise steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Select the `Practical Exclude` worksheet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the `Superstore` dataset.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create the following calculated fields:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_43.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.43: Region Values and % Per Region LODs'
  prefs: []
  type: TYPE_NORMAL
- en: Place **Region** and **City** on the **Rows** shelf.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Place **Measure Names** on the **Columns** shelf and **Measure Values** on the
    **Text** shelf.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Remove all instances of measures from the **Measure Values** shelf except **Sales**,
    **Region Values**, and **% Per Region LOD.**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In order for **% Per Region LOD** to display as a percentage, the number formatting
    must be adjusted. Simply right-click on the calculation in the **Data** pane and
    select **Default Properties** | **Number Format** | **Percentage**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_44.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.44: Change Number Format'
  prefs: []
  type: TYPE_NORMAL
- en: 'Place an instance of **AGG(% Per Region LOD)** on the **Filter** shelf and
    adjust to display at least `0.1` (or 10%):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_45.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.45: % filter'
  prefs: []
  type: TYPE_NORMAL
- en: 'Observe the current view, with **Region** and **City** on the **Rows** shelf:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_46.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.46: Jacksonville still visible'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, place **State** on the **Rows** shelf between **Region** and **City**.
    Note that **Jacksonville** disappears:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_07_47.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.47: Jacksonville disappears when Region is added to Rows'
  prefs: []
  type: TYPE_NORMAL
- en: 'This is happening because **Jacksonville** exists in two states of the **South**
    region, in **Florida** as well as in **North Carolina**. You can see this replacing
    the **% Per Region LOD** filter with **City**: **Jacksonville**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_07_48.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.48: Jacksonville existing within two states'
  prefs: []
  type: TYPE_NORMAL
- en: Our **Region Values** calculation excluded **City** and **State**, and so the
    **% Per Region LOD** will consider the **SUM(Sales)** for whatever is visible
    in the view, divided by the **Region Values**. With **Region** and **City** in
    the view only, the **SUM(Sales)** for Jacksonville is **44,713** (see *Figure
    7.48*). That number divided by the **Region Values** of **391,722** (see *Figure
    7.46*) is > 10%. But then we added **State** to the view, changing the **SUM(Sales)**
    to **39,133** for **Jacksonville** in **Florida** and **5,580** for **Jacksonville**
    in **North Carolina** (see *Figure 7.50*). Neither one of them, when divided by
    **391,722** for the **Region Values**, is above 10% and will therefore drop from
    the view due to our filter.
  prefs: []
  type: TYPE_NORMAL
- en: 'LODs are one of the more advanced topics when using Tableau, but they are very
    powerful and worth spending the time to understand. For more practical examples,
    I would recommend you check out the following website: [https://www.tableau.com/about/blog/LOD-expressions](https://www.tableau.com/about/blog/LOD-expressions).
    I remember that when I first started using Tableau, I did not think that I would
    ever want to show data based on dimensions that were not in my view or that I
    would want to exclude dimensions. But I needed to do that so many times, for example,
    when adding a calculation of the distance to the average of total rows to my dashboard
    or when a dimension had multiple max dates and you wanted to show the measure
    of each individual max date only. I have gone back to the documentation on LODs
    more often than you can imagine, and I can only encourage you to do the same;
    the more you read about LODs, the easier it will be to grasp the concept and use
    them naturally. The added flexibility LODs bring to your dashboard is incredible.'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We began this chapter by exploring why LODs are so impactful and why their inclusion
    in Tableau was so lauded. Next, we built two playgrounds to explore how the three
    LODs—`FIXED`, `EXCLUDE`, and `INCLUDE`—work. Tableau’s default is to base calculations
    on the dimensions visible in the view. For example, if you have states in your
    view, the sales amount will be presented by state. If you are adding cities, the
    sales amount will be adjusted by state, by city. But, if you want to manipulate
    this default logic, you can use LODs. They allow you to calculate measures based
    on any dimension, no matter whether that dimension is represented in the view
    or not. We also saw that `FIXED` LODs are higher in the order of operations in
    Tableau than `EXCLUDE` and `INCLUDE` LODs. This is important to remember so that
    you use the correct LOD and/or filter in your dashboard.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we’ll turn our attention to the visual side of Tableau
    and explore different chart types and less common but very useful visualizations.
  prefs: []
  type: TYPE_NORMAL
- en: Learn more on Discord
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To join the Discord community for this book – where you can share feedback,
    ask questions to the author, and learn about new releases – follow the QR code
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://packt.link/tableau](https://packt.link/tableau)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/QR_Code2044012316175764640.png)'
  prefs: []
  type: TYPE_IMG
