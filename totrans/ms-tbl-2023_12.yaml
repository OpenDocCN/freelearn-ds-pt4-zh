- en: Leveraging Advanced Analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter focuses on advanced self-service analytics. Self-service analytics
    can be seen as a form of business intelligence, where people in a business are
    encouraged to execute queries on datasets themselves, instead of placing requests
    for queries in a backlog with their IT team. Then, query analysis can be done,
    which should lead to more insights and data-driven decision-making. But how do
    you start creating useful self-service dashboards if it’s your first time doing
    so? How do you go from a dataset to a product? Have you ever asked yourself how
    other people start working on a dashboard, how they clean data, and how they come
    up with a dashboard design? If so, this is the right chapter for you! I want to
    share three use cases with you, written as a train of thought in order to give
    you an idea about how I work. Please note that this is just my personal experience;
    there are many different ways to reach your goal.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Visualizing world indices correlations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Geo-spatial analytics with Chicago traffic violations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extending geo-spatial analytics with distance measures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now that we have had this introduction, we are good to go and can start with
    the first use case.
  prefs: []
  type: TYPE_NORMAL
- en: Visualizing world indices correlations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Imagine you are working on the world indices dataset and your line manager
    gives you the following task:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a dashboard for me in which I can easily spot all correlated world indices
    and their distribution. I need it by tomorrow morning.
  prefs: []
  type: TYPE_NORMAL
- en: Now, take a few minutes before you continue reading and think about how you
    would tackle this task. The dataset contains 67 columns with various indices,
    like birth registrations or emission values, exports and imports, and forest areas,
    divided into 188 rows, where each row represents one country.
  prefs: []
  type: TYPE_NORMAL
- en: Write down your planned steps, open the workbook related to this chapter from
    [https://public.tableau.com/profile/marleen.meier](https://public.tableau.com/profile/marleen.meier),
    and follow your steps; time it in order to get a better feel for time estimates
    when working with Tableau. This way, you can make sure that you can deliver on
    time and manage expectations if you are ever asked how long it will take to build
    a certain dashboard.
  prefs: []
  type: TYPE_NORMAL
- en: Plotting a scattergraph
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'And now, I will illustrate one way I could imagine solving this task:'
  prefs: []
  type: TYPE_NORMAL
- en: First, I open the `world-indices` file in Tableau Prep Builder in order to get
    more details on the dataset itself; this will help me to describe the data but
    also to spot obvious data flaws like null values, duplicate entries, and so on:![](img/B18435_12_01.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.1: Tableau Prep Builder'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: With this dataset, I actually didn’t spot any obvious data quality issues in
    Prep Builder, nor a need to further prepare the data. It’s 1 row per country—which
    you can see in the evenly distributed bars in the **ID** column—and 65 columns
    for the different indices per country. Since no data preparation is needed, I
    decide to continue directly with Tableau Desktop. I close Tableau Prep Builder
    and open Tableau Desktop.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'My next thought is, how can I visualize all correlations at once, yet not have
    it be too much information? I have 65 different columns, which makes for 4,225
    possible combinations. No, I decide that displaying everything won’t work. The
    task is very generic; therefore, I decide to go for a two-parameter approach,
    which will enable my end user to select each of the index combinations themselves.
    I start sketching what the dashboard might look like and come up with the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_02.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.2: Sketch'
  prefs: []
  type: TYPE_NORMAL
- en: In order to execute my plan, I first create two parameters, which I name **X-Axis**
    and **Y-Axis**, which will be used to define the respective axes *x* and *y*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'I define both parameters as **String** and paste all field names from the clipboard
    into both of the parameters. To do this, I open the input file in Excel, transpose
    the header row to a column, and press *Ctrl* + *C*. The data can now be pasted
    into the parameter via the **Paste from Clipboard** option. This saves time and
    is less error-prone:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.3: Paste to parameter'
  prefs: []
  type: TYPE_NORMAL
- en: 'I also want the parameters to be visible on the dashboard, so I select **Show
    Parameter**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_04.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.4: Show Parameter'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you were to test the parameter now, nothing would happen. We need a calculated
    field that defines that if a selection from the parameter has been made, Tableau
    will select the appropriate field. I create the following calculated field to
    achieve this (this field has been made part of the `Starter` and `Solution` workbooks
    to make your life easier):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_05.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.5: Calculated field'
  prefs: []
  type: TYPE_NORMAL
- en: Now we will do the same thing for the **Y-Axis** parameter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In order to create the calculated field for **Y-Axis** quicker, copy and paste
    the **X-Axis** calculated field into Excel and find and replace `[Parameters].[X-Axis]`
    with `[Parameters].[Y-Axis]`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Drag the **X-Axis** calculated field to **Columns** and **Y-Axis** to **Rows**.
    Also, put the **ID** field on the **Detail** shelf.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In order to see the correlation analytics from Tableau, drag **Trend Line**
    onto the sheet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.6: Trend Line'
  prefs: []
  type: TYPE_NORMAL
- en: The sheet with the trend line looks as follows. When hovering over the trend
    line, you will see the equation of the line, the **R-Squared** value, and the
    value for **P-value**:![](img/B18435_12_07.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.7: Trend line values'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The **Y-Axis** equation means that, for each point on the *x*-axis, the *y*-axis
    value will increase by 17.9717, starting at point 0 on the *x*-axis and point
    -4.33685 on the *y*-axis. Thus, overall the *y*-term increases faster than the
    (also increasing) *x*-term. The **R-Squared** value explains how much variance
    is explained by the trend line (80.81%), and lastly, **P-value** explains the
    significance of the model. A **P-value** value smaller than 0.05 is considered
    significant and means there is a 5% chance that the data is following the trend
    line randomly. The trend line in the preceding figure has a **P-value** of less
    than 0.01%. We can safely assume, therefore, that there is a real relationship
    between the two variables.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To see more coefficients, right-click on the line and select **Describe Trend
    Line…**:![](img/B18435_12_08.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.8: Describe Trend Line…'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The following window will appear:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B18435_12_09.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 12.9: Trend line information'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Alternatively, you can select the **Describe Trend Model…** option and you will
    see this:![](img/B18435_12_10.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.10: Trend model information'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'If you want to learn more about interpreting trend lines, you can read the
    following article: [https://onlinehelp.tableau.com/current/pro/desktop/en-us/trendlines_add.htm](https://onlinehelp.tableau.com/current/pro/desktop/en-us/trendlines_add.htm).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'I get a bit distracted by the grid lines, so I decide to remove them by right-clicking
    on the screen and selecting **Format…**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_11.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.11: Formatting'
  prefs: []
  type: TYPE_NORMAL
- en: 'I select the fifth option in the **Format** window, the lines, and set the
    **Grid Lines** value to **None**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_12.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.12: Removing grid lines'
  prefs: []
  type: TYPE_NORMAL
- en: I also change **Marks** from **Automatic** to **Circle** and change the color
    to black.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, I think it would be helpful to show on the scatterplot which country each
    point represents, so I change the **ID** field from **Detail** to **Label** in
    the **Marks** card; however, this looks a bit too chaotic:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_13.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.13: ID to text'
  prefs: []
  type: TYPE_NORMAL
- en: 'I click on the undo arrow and add a highlighter function by right-clicking
    on **ID** and selecting **Show Highlighter**. Now, the end user will be able to
    search for a country and that point will be highlighted in the scatterplot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_14.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.14: Show Highlighter'
  prefs: []
  type: TYPE_NORMAL
- en: I also want the country name to be shown clearly in red when hovering over any
    points, and I achieve this by changing the **ID** color in **Edit Tooltip** to
    red and increasing the size:![](img/B18435_12_15.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.15: Tooltip'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The result looks as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B18435_12_16.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 12.16: Hovering over a point'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'I have already added the trend line, and I now want to show the **Pearson R**,
    also called **R-Squared**, value in the view such that the user knows if two indices
    are correlated; however, it is not possible to set the **Describe Trend Line**
    or **Describe Trend Model** option to always be shown. Hence, I will calculate
    the value myself in a new field; I use the `CORR()` function to do this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_17.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.17: Pearson R'
  prefs: []
  type: TYPE_NORMAL
- en: 'But I want to show some text that indicates if two variables are correlated
    or not instead of the value itself because I want to make my dashboard clear.
    Therefore, I create another calculated field called `Correlation yes or no` with
    the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This being done, I create a new sheet and place **Correlation yes or no** on
    the **Text** shelf. The sheet looks very simple, as you can see:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_18.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.18: Correlation on text'
  prefs: []
  type: TYPE_NORMAL
- en: I right-click on the title and choose **Hide Title**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, almost everything is ready to build the dashboard from the sketch at
    the beginning of this section. Only the distributions for each of the two axes
    are still missing.
  prefs: []
  type: TYPE_NORMAL
- en: Adding axis distributions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We have made a start, but now I want to add the distribution plots for the
    *x-* and *y*-axes next to the scatterplot. I take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: I start with the *x*-axis, open another worksheet, and drag **X-Axis** to **Rows**.
    Next, I click on the just-added **green pill X-Axis** andselect **Measure** |
    **Count**. Now right-click on **X-Axis** in the data pane and select **Create**
    | **Bins…**. In the pop-up, hit **OK**. Lastly, I drag the new dimension **X-Axis
    (bin)** to **Columns**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After I close the **Edit Axis [X-Axis]** window, I right-click on **X-Axis**
    and deselect **Show Header** to not show the header anymore.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: I continue with **Y-Axis** on another new worksheet and drag **Y-Axis** to **Columns**.
    Next, I change the **Y-Axis** on **Columns** by clicking on it and selecting **Measure**
    | **Count**. Now, right-click on **Y-Axis** in the data pane and select **Create**
    | **Bins…**. In the pop-up, I hit **OK**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_19.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.19: Bins'
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, I drag the new dimension **Y-Axis (bin)** to **Rows**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: I change the color to gray in the **Marks** card and select **Entire View**
    at the top of the page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The *y*-axis distribution should be aligned with the scatterplot; therefore,
    I click on **Y-Axis (bin)** | **Sort** | **Descending**. Next, I right-click on
    **Y-Axis** and deselect **Show Header** to not show the header anymore.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In order to put everything together, I open a dashboard page and call it `Distribution`,
    then I put the `Scatterplot` worksheet at the bottom of the page and the `Correlation`
    worksheet at the top of the dashboard canvas.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: I add the distribution worksheets to the related sides of the scatterplot (`Y-Axis`
    to the *y*-axis and `X-Axis` to the *x*-axis).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: I also add a blank in the lower left-hand corner to align the distribution with
    the scatterplot edges:![](img/B18435_12_20.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.20: Adding a blank'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The final layout looks like this:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B18435_12_21.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 12.21: Final layout'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'I want to give the distribution more meaning and add an action that will highlight
    the country in both distribution plots. I do this so the user can see where a
    country is located in the range of all countries within one index because it can
    be hard to see in the scatterplot sometimes. The scatterplot, on the other hand,
    can be used to get more insights into the relationship between the two indices.
    For the **Highlight** action, I need to set the parameters as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_22.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.22: Highlight'
  prefs: []
  type: TYPE_NORMAL
- en: And in order for the highlighter to work on the **X-Axis** and **Y-Axis** sheets,
    please add **ID** to the **Detail** shelf in both worksheets.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_23.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.23: Adding ID'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, look at the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_12_24.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.24: Correlation'
  prefs: []
  type: TYPE_NORMAL
- en: I selected `Public health expenditure percentage of GDP 2013` on the **X-Axis**
    and `Mean years of schooling – Years` on the **Y-Axis**. I had to resize the **X-Axis
    bin** in the **Data** pane by right-clicking | **Edit** | **Suggest Bin Size**
    | **OK**. I can see that the overall correlation between these two measures is
    positively moderate at a correlation coefficient of 0.359\. But by hovering over
    the dots, you can now investigate which countries have what effect on this correlation.
    For countries close to the trend line, the correlation coefficient is closer to
    the true factor. For example, the United States in the top-right corner has a
    value of 16.8 for the *x*-axis (health expenditure) and 12.76 for the *y*-axis
    (years of schooling). If you multiply 12.76 by 0.359 (correlation coefficient),
    you get 4.581, which is almost exactly the difference between 12.76 and 16.8\.
    Now, if you search for Sierra Leone (bottom-right), you get *x* and *y* values
    of 11.4 and 2.9\. Here, the multiplication with the correlation coefficient won’t
    explain the relationship as well. This can be easily seen in the scatterplot because
    Sierra Leone is far away from the trend line. I really like this dashboard because
    it simplifies relationships between variables and can help novices as well as
    senior users understand data.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a correlation matrix
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After clicking through the dashboard and testing the functionality, I realize
    that it’s hard to remember which combinations I have already tried, and also,
    I wish I could filter for highly correlated combinations. To address this, I want
    to add one more dashboard to this workbook: a correlation matrix with all combinations,
    color-coded, and with an option to filter:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, I go back to my **Data Source** tab and add the same dataset again,
    but with a new name: `World Indices Correlation Matrix`. I even add it twice because
    I need every index correlated against every other index:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_25.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.25: World Indices Correlation Matrix'
  prefs: []
  type: TYPE_NORMAL
- en: 'The key used is **ID**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_26.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.26: ID as a key'
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, I need to pivot both tables because instead of having one column per
    index, I need one column with all index names and a second column with all values
    in order to create a table with each of them. I select all fields except **ID**
    and use **Pivot**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_27.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.27: Pivoting'
  prefs: []
  type: TYPE_NORMAL
- en: 'This results in three columns. I rename **Pivot Field Values** to **Value Index
    A** and **Pivot Field Names** to **Index A**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_28.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.28: Renaming columns'
  prefs: []
  type: TYPE_NORMAL
- en: Now I do this again with the second table and rename the columns **Index B**
    and **Value Index B**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: I open a new worksheet and place **Index B** on **Columns**, and **Index A**
    on **Rows**. I create a calculated field named **Pearson R** with the code `CORR([Value
    Index B], [Value Index A])` and place it on **Filters**, **Color**, and **Text**.
    After right-clicking on **Pearson R** in the **Filters** shelf, I select **Show
    Filter**:![](img/B18435_12_29.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.29: Correlation matrix'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The colors can be adjusted as you like; I chose a 5-stepped color scheme from
    red to black, indicating that red fields are negatively correlated and black ones
    positively correlated.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'I open a new dashboard tab and place the worksheet on it. Try adjusting the
    filter such that you only see the highly correlated range 0.89–0.99, just to have
    a smaller dataset to work with for now:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_30.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.30: Filter correlation matrix'
  prefs: []
  type: TYPE_NORMAL
- en: This section helped us create a heatmap of all possible combinations, and we
    color-coded the correlation value and added a filter to focus on points of interest.
    In the preceding screenshot, you can see the highly correlated indices.
  prefs: []
  type: TYPE_NORMAL
- en: Finalizing the dashboard
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To avoid any confusion, I want to explain the **Pearson R** filter for the
    user and finalize the dashboard:'
  prefs: []
  type: TYPE_NORMAL
- en: 'I start by adding the text field `Pearson R ranges explained` to the dashboard.
    Given more time, I could make it a drop-down parameter just like the **X-Axis**
    and **Y-Axis** fields:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_31.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.31: Adding text about Pearson R'
  prefs: []
  type: TYPE_NORMAL
- en: To finalize everything, three actions are needed. First, two **Parameter** actions
    are needed to enable clicking on the correlation matrix to change the values for
    the **X-Axis** and **Y-Axis** parameters, the first of which should be customized
    as follows:![](img/B18435_12_32.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.32: Parameter action 1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The action in the preceding screenshot will change the **X-Axis** parameter
    to the value from **Index A**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, I edit the second **Parameter** action as follows:![](img/B18435_12_33.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.33: Parameter action 2'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The action in the preceding figure will change the **Y-Axis** parameter to the
    value from **Index B**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Lastly, I add a **Sheet Navigation** action called **GoToScatterplot**, which
    allows the user to change the dashboard after selecting an index combination:![](img/B18435_12_34.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.34: Sheet Navigation action'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The preceding action will show a menu to go to the trend line dashboard.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The user can now select a value and click on it. In the background, the parameters
    **X-Axis** and **Y-Axis** will be adjusted to the two indices that relate to that
    same field. For example, for **Mean years of schooling** and **Human Development
    Index**, a hyperlink appears:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_35.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.35: Menu'
  prefs: []
  type: TYPE_NORMAL
- en: 'The user will be redirected to the dashboard with a trend line that is now
    prefiltered and shows the same two indices: **Mean years of schooling** and **Human
    Development Index**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_36.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.36: Filtered visualization'
  prefs: []
  type: TYPE_NORMAL
- en: From this, we can see that the two selected indices are positively correlated
    by 89.9%. We can also see the distribution per index on the *x*- and *y*-axes.
  prefs: []
  type: TYPE_NORMAL
- en: 'This was a lengthy exercise, but I wanted to present you with my full thought
    process and look at dashboard creation. With more time, I would definitely add
    some more insights, for instance:'
  prefs: []
  type: TYPE_NORMAL
- en: Add an explanation for each index
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add a more thorough explanation for the correlation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add the p-value or other coefficients to the analysis and change the text accordingly
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And don’t forget to get feedback and check with your stakeholders if you are
    on the right track. Some people use sketches, then work on a draft, and then ask
    for feedback again, until the product is finalized. I tend to ask my stakeholders
    questions to better understand what they need and let them walk me through the
    process they want to replace or change with the Tableau dashboard. Then, I present
    a full version or intermediate version, depending on the complexity and timelines.
    You should avoid spending hours or days on something that is not what the stakeholder
    wants.
  prefs: []
  type: TYPE_NORMAL
- en: But now, let us have a look at a second, shorter use case that incorporates
    geo-spatial data.
  prefs: []
  type: TYPE_NORMAL
- en: Geo-spatial analytics with Chicago traffic violations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It’s Wednesday morning; your manager comes into your office wanting to check
    the red-light violations in the last year in Chicago. They ask if you can build
    a dashboard for that purpose. In particular, you’re asked to highlight where the
    most violations happen and whether there is an overall trend in Chicago traffic
    light violations over the last few years. You are given two datasets, one with
    the camera locations and one with the violations, and are told that the dashboard
    is needed within the next hour. What do you do?
  prefs: []
  type: TYPE_NORMAL
- en: Before you continue reading, think about how you would approach this problem.
    Take five minutes, think about the steps you would take, and sketch a dashboard
    design.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is an overview of how I would do it:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the datasets in Tableau Prep Builder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Join the two datasets.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clean the data if needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the output in Tableau.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use a map to visualize the locations of cameras, if possible.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add the number of violations per camera.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Establish whether there is a monthly trend.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'What follows is a rough sketch of how I would design the dashboard:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_12_37.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.37: Sketch'
  prefs: []
  type: TYPE_NORMAL
- en: 'Up next is a step-by-step description of what I would do. The corresponding
    Tableau dashboard can be downloaded from Tableau Public, the Tableau Prep Builder
    file is available on GitHub ([https://github.com/PacktPublishing/Mastering-Tableau-2023-Fourth-Edition/tree/main/Chapter12](https://github.com/PacktPublishing/Mastering-Tableau-2023-Fourth-Edition/tree/main/Chapter12)),
    and the dataset itself is publicly available here: [https://data.cityofchicago.org/Transportation/Red-Light-Camera-Violations/spqx-js37](https://data.cityofchicago.org/Transportation/Red-Light-Camera-Violations/spqx-js37).'
  prefs: []
  type: TYPE_NORMAL
- en: Preparing the data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After loading both files into Tableau Prep Builder, I see that a join on **LONGITUDE**
    and **LATITUDE** doesn’t get me anywhere because almost all records are mismatches:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_12_38.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.38: Join I'
  prefs: []
  type: TYPE_NORMAL
- en: 'I try a different approach: a join on the intersections. This results, again,
    in **0** joined rows, but this time I see why. In one dataset, the **INTERSECTION**
    values are separated by dashes (**-**), and in the other dataset, it’s **AND**;
    also, one uses capital letters, and the other one doesn’t:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_12_39.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.39: Join II'
  prefs: []
  type: TYPE_NORMAL
- en: 'I could add a cleaning step to make all the letters uppercase and split the
    intersections into two parts. I can execute **Custom Split…** on **-** as well
    as on **AND**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_12_40.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.40: Data prepping'
  prefs: []
  type: TYPE_NORMAL
- en: Then, I notice that the intersection order is different; for example, `Ashland-71st`
    and `71ST AND ASHLAND`. I might consider restructuring the datasets and creating
    a loop that would put the two streets in alphabetical order in the two splits,
    but I don’t have time for this now.
  prefs: []
  type: TYPE_NORMAL
- en: Another solution is to first join split 1 and split 1 as well as split 2 and
    split 2\. In a second join, I could join split 1 and split 2 as well as split
    2 and split 1\. Afterward, I could union the two joins and create an output file
    (or directly load the Prep Builder dataset into Tableau Desktop). With this approach,
    I would still not include all the data, but I would have 380,000 rows out of 444,000\.
    This could be enough to get a rough idea of patterns. If I have any time left,
    I can continue mapping the remaining mismatches.
  prefs: []
  type: TYPE_NORMAL
- en: However, I instead decide to drop the locations dataset altogether and just
    use the violations dataset because I realize that I would only miss locations
    in which no violation has happened yet. The locations of violations are sufficient
    for now. If you were, however, to determine if a traffic light control stopped
    working, you have to use both datasets.
  prefs: []
  type: TYPE_NORMAL
- en: Building a map of intersections
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'I continue by opening the violations dataset in Tableau:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Longitude and latitude values are not automatically recognized, so I have to
    change both to **Number (decimal)** by clicking on the data type icon:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_41.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.41: Change data type'
  prefs: []
  type: TYPE_NORMAL
- en: Then, I change the **Longitude** and **Latitude** fields to **Measure** by clicking
    on the drop-down arrow on the field as shown in the preceding figure and selecting
    **Convert to Measure**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now I can click on the data type icon again and change the two fields to **Latitude**
    and **Longitude**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_42.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.42: Changing the geographic role'
  prefs: []
  type: TYPE_NORMAL
- en: 'By dragging **Longitude** to **Columns**, **Latitude** to **Rows**, and **Intersection**
    to the **Text** shelf, I visualize the red-light locations—at least the ones that
    have ever had a violation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_43.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.43: Intersections in Chicago'
  prefs: []
  type: TYPE_NORMAL
- en: The name of the worksheet will be `Intersection`, and since I am looking at
    violations, I change the color in the **Marks** card to red. Lastly, I don’t need
    to see the intersection name, so I change **Intersection** from **Text** to **Detail**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, I like the map better when it shows a few more details, so I use **Background
    Layers…** to select some more options:![](img/B18435_12_44.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.44: Background Layers…'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Select all the layers you want to see on the map:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B18435_12_45.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 12.45: Map of Chicago'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Another nice functionality of Tableau is that you can add **Data Layer** to
    your view. You can see the option in the bottom-left corner of the preceding screenshot.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: I use the **Population** layer by **Census Tract**, as I hope it will give me
    some details on whether more or fewer violations happen in densely populated areas:![](img/B18435_12_46.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.46: Data layers'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'In the following screenshot, you can see how it looks—note that the darker
    the red, the denser the area is populated:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B18435_12_47.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 12.47: Intersection visualization'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'I add **MONTH(Violation Date)** to **Pages**; that way, my boss can play with
    the months and see where and when the number of violations changes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_48.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.48: Pages'
  prefs: []
  type: TYPE_NORMAL
- en: 'Of course, I need to add the **Violations** field to make **Pages** work properly.
    I decide to use the **Density** feature of Tableau, using red as the color:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_49.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.49: Density visualization'
  prefs: []
  type: TYPE_NORMAL
- en: Adding a corresponding heatmap worksheet
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After clicking on the **Pages** play button, I notice a pattern for some months.
    I want to take a closer look, so I open a new worksheet:'
  prefs: []
  type: TYPE_NORMAL
- en: I call the new worksheet **Heatmap** and place **MONTH(Violation Date)** on
    **Columns** and **YEAR(Violation Date)** on **Rows**. Then, I drag **Violations**
    to the **Color** shelf and select red-gold to get the following:![](img/B18435_12_50.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.50: Heatmap'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: There are definitely more red-light violations in the summertime, and 2016 and
    2020 show the most violations.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Last but not least, I add a new worksheet called `Trend?`. I drag **MONTH(Violation
    Date)** and drop it on the **Columns** shelf. The **Violations** field should
    be placed on **Rows**. I make sure that both measures are **Continuous (green)**.
    From the **Analytics** pane, I drag the linear **Trend Line** onto the worksheet.
    Next, I drag **Forecast** into the view:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_51.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.51: Line chart'
  prefs: []
  type: TYPE_NORMAL
- en: In the preceding figure, you can see that the overall trend of red-light violations
    increases slightly over the years. The forecast shows us that the seasonality
    of there being more red-light violations in the summertime will probably continue
    in 2021.
  prefs: []
  type: TYPE_NORMAL
- en: Feel free to check by the end of 2021 how good Tableau’s forecast model was!
    The City of Chicago datasets are continuously refreshed.
  prefs: []
  type: TYPE_NORMAL
- en: Finalizing the dashboard
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The hour is almost over and I am just placing the three worksheets onto a dashboard,
    calling it **Red-Light Violations**, and formatting it a bit; it looks as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_12_52.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.52: Final dashboard'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can find the final dashboard in the Tableau workbook associated with this
    chapter on Tableau Public, here: [https://public.tableau.com/profile/marleen.meier/](https://public.tableau.com/profile/marleen.meier/).'
  prefs: []
  type: TYPE_NORMAL
- en: Can the dashboard be improved? Yes, it always can. But after this first iteration,
    my boss can let me know if anything needs to be adjusted and I can do so. I am
    sure that I could spend many more hours improving it, but most of the time, dashboarding
    is more about prompt delivery. And a full production model is a different story
    compared to an ad hoc question or a one-off exercise, especially if you work in
    an agile manner, split your work into deliverables, get feedback, and continue
    working on it.
  prefs: []
  type: TYPE_NORMAL
- en: Extending geo-spatial analytics with distance measures
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Our last use case is also geo-spatial analysis on the same Chicago traffic
    dataset, but this time, we will add another component. We will look to rent a
    new place but with the requirement that there are no more than *n* intersections
    in a radius of *x* and Navy Pier should be at most *y* miles away. The variables
    *n*, *x*, and *y* should be interactive in order for us to make changes and have
    a very flexible dashboard experience. The questions to ask about this task are:'
  prefs: []
  type: TYPE_NORMAL
- en: How can we add any given location in Chicago to our dataset? It is currently
    only showing intersections and violations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How can we make the *n*, *x*, and *y* variables?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How can we add a radius indicator to any given point on the map?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How can we measure the distance between two variable points?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'All those questions will be answered in the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go back to the workbook related to this chapter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the worksheet called **Intersection** and click on **Duplicate**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Rename the new worksheet `Rental`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Remove **MONTH(Violation Date)** from **Pages** and **SUM(Violations)** from
    the **Color** shelf and the red text (sub-heading) from the title to make the
    worksheet look like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_53.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.53: Intersections'
  prefs: []
  type: TYPE_NORMAL
- en: Change the **Marks** type to **Map**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on **Map** | **Map Layer** and change **Data Layer** to **No Data Layer**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_54.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.54: Map layer'
  prefs: []
  type: TYPE_NORMAL
- en: Place **Violation Date** on the **Filters** shelf and select the year **2020**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Drag **Violations** onto the **Color** shelf and select the **Red** color palette:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_55.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.55: Edit colors'
  prefs: []
  type: TYPE_NORMAL
- en: We now have a map of Chicago in front of us, on which each point represents
    an intersection at which violations have happened in 2020\. The darker the dot,
    the more violations there are that were registered at that intersection.
  prefs: []
  type: TYPE_NORMAL
- en: Adding measure points to the map
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Next, we have to add functionality that will allow us to set a mark on the
    map and start measuring from there. This can be achieved by creating longitude
    and latitude parameters and using them in a calculated field:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Create the following parameters, `Lat` and `Long`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**![](img/B18435_12_56.png)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 12.56: Parameters'
  prefs: []
  type: TYPE_NORMAL
- en: Right-click each of the parameters and select **Show Parameter**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a calculated field called `Address manual`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Drag **Address manual** onto the map, on top of the **Add a Marks Layer** pop-up:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_57.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.57: Add a layer'
  prefs: []
  type: TYPE_NORMAL
- en: Change the **Marks** type of the new layer to **Map**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After these steps, we have a map with intersections, color-coded numbers of
    violations, and a point that we can change by using the `Lat` and `Long` parameters.
    The user can use, for example, Google Maps to find the latitude and longitude;
    simply select a point on Google Maps that represents a rental home location:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_58.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.58: Google Maps'
  prefs: []
  type: TYPE_NORMAL
- en: 'The latitude and longitude will show in the URL and at the bottom of the page.
    Type them into the `Lat` and `Long` parameters and the same points will appear
    on our Tableau map:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_59.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.59: Latitude and longitude'
  prefs: []
  type: TYPE_NORMAL
- en: Adding the distance line
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the next steps, we will add a radius and a distance line starting at Navy
    Pier:'
  prefs: []
  type: TYPE_NORMAL
- en: Create another parameter called `Radius in miles` and set the current value
    to `1.1`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the `Radius in miles` parameter and select **Show Parameter**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a calculated field called `Buffer`, which will be used as our radius
    around the **Address manual** point:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Drag the **Buffer** field onto the map just like we did with the **Address manual**
    field, on top of the **Add a Marks Layer** pop-up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Marks** type of this new layer to **Map**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Color**, change the opacity to **50%**, and choose a gray color:![](img/B18435_12_60.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 12.60: Map with radius'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The **Navy Pier** coordinates are shown in the URL in the following figure
    (41.8859088,-87.6064094):'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B18435_12_61.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 12.61: Navy Pier'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Create a calculated field as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Drag the **Navy Pier** field onto the map on top of the **Add a Marks Layer**
    pop-up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Marks** type to **Map**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In order to connect **Navy Pier** to our **Address manual** point and measure
    the distance, create another calculated field called `Line`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To measure the distance between the two, create a `Distance` field with the
    following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Place the **Line** field onto the map on top of the **Add a Marks Layer** pop-up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Marks** type in the new layer to **Map**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Place **Distance** on the **Label** shelf, change the measure to **Average**,
    and click on **Label** to add the text `miles`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B18435_12_62.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.62: Edit label'
  prefs: []
  type: TYPE_NORMAL
- en: 'Our dashboard now looks as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18435_12_63.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.63: Final dashboard'
  prefs: []
  type: TYPE_NORMAL
- en: And this makes it complete. The radius clearly shows how many intersections
    are within a certain distance; you can see the number of intersection violations
    by hovering over the points. The line from Navy Pier to our current location **Address
    manual** tells us how far away those two points are from each other.
  prefs: []
  type: TYPE_NORMAL
- en: 'To answer our questions from the beginning:'
  prefs: []
  type: TYPE_NORMAL
- en: '*How can we add any given location in Chicago to our dataset?* *It is currently
    only showing intersections and violations*. By using the `Makepoint()` function
    in a calculated field.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*How can we make the n, x, and y variables?* By using parameters.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*How can we add a radius to any given point on the map?* By using the `Buffer()`
    function.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*How can we measure the distance between two variable points?* By using the
    `Distance()` function; by adding the `MakeLine()` function, a line will be drawn.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This use case can be recreated for the number of supermarkets in an area, schools,
    public transport points, and so on. Be creative and feel free to upload your dashboards
    to Tableau Public, and don’t forget to add the **#MasteringTableau** tag!
  prefs: []
  type: TYPE_NORMAL
- en: 'If you work a lot with spatial data, I would also recommend that you check
    out these links:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.tableau.com/about/blog/2019/6/geospatial-analysis-made-easy-two-new-spatial-functions-makepoint-and-makeline](https://www.tableau.com/about/blog/2019/6/geospatial-analysis-made-easy-two-new-spatial-functions-makepoint-and-makeline)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.tableau.com/about/blog/2020/3/seeing-and-understanding-proximity-made-easy-buffer-calculations](https://www.tableau.com/about/blog/2020/3/seeing-and-understanding-proximity-made-easy-buffer-calculations)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we explored the fascinating world of advanced self-service
    analytics. We began by understanding the concept of self-service analytics as
    a form of business intelligence, empowering individuals to directly query datasets
    and unlock valuable insights. Throughout our journey, we uncovered three captivating
    use cases that showcased the power of self-service analytics. We unraveled the
    intricate correlations between world indices, gaining a deeper understanding of
    global market dynamics. We then delved into the realm of Chicago traffic violations,
    using geo-spatial analytics to uncover patterns and potential areas for improvement.
    Lastly, we extended our geo-spatial analysis, utilizing distance measures to determine
    the optimal radius for housing locations based on key variables.
  prefs: []
  type: TYPE_NORMAL
- en: 'Amidst these diverse scenarios, one key lesson resonated throughout: a well-structured
    approach is paramount when embarking on a self-service analytics project. By carefully
    planning our work, familiarizing ourselves with the data, employing descriptive
    statistics, and adapting our plans based on intermediate results, we paved the
    way for success.'
  prefs: []
  type: TYPE_NORMAL
- en: 'And remember, a dashboard is never really finished: you can always change things;
    your audience might change; and stakeholder wishes might differ. Deliver a working
    visualization with basic functionality and continue to develop after you get feedback.
    Depending on your backlog or other circumstances, the minimum viable product might
    be just what you need.'
  prefs: []
  type: TYPE_NORMAL
- en: As we conclude this chapter, I urge you to reflect on the insights gained and
    consider how these principles can be applied to your own self-service analytics
    endeavors. Remember, while my experiences have served as a guide, there are various
    paths that can lead you to your goals. Embrace the power of self-service analytics,
    empower yourself with data, and unlock a world of possibilities in your quest
    for informed decision-making. While doing this, give your IT team a rest and let
    them focus on the heavier implementations that are out of scope for you.
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter will be all about improving performance. With more and more
    data, performance is key and could mean the difference between success and failure.
  prefs: []
  type: TYPE_NORMAL
- en: Learn more on Discord
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To join the Discord community for this book – where you can share feedback,
    ask questions to the author, and learn about new releases – follow the QR code
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://packt.link/tableau](https://packt.link/tableau)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/QR_Code2044012316175764640.png)'
  prefs: []
  type: TYPE_IMG
