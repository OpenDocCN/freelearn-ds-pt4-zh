["```py\npip install <library name>\n```", "```py\npip install networkx\n```", "```py\nimport networkx as nx\nG = nx.les_miserables_graph()\n```", "```py\ndf = nx.to_pandas_edgelist(G)[['source', 'target']]\nG = nx.from_pandas_edgelist(df)\n```", "```py\nnx.info(G)\n'Graph with 77 nodes and 254 edges'\n```", "```py\ndraw_graph(G, font_size=12, show_names=True, node_size=4, edge_width=1)\n```", "```py\ndraw_graph(nx.k_core(G, 2), font_size=12, show_names=True, node_size=4, edge_width=1)\n```", "```py\nimport pandas as pd\npagerank = nx.pagerank(G)\npagerank_df = pd.DataFrame(pagerank, index=[0]).T\npagerank_df.columns = ['pagerank']\npagerank_df.sort_values('pagerank', inplace=True, ascending=False)\npagerank_df.head(20)\n```", "```py\npagerank_df.head(20).plot.barh(figsize=(12,8)).invert_yaxis()\n```", "```py\nego_1 = nx.ego_graph(G, 'Valjean')\n```", "```py\ndraw_graph(ego_1, font_size=12, show_names=True, node_size=4, edge_width=1)\n```", "```py\nego_1 = nx.ego_graph(G, 'Valjean', center=False)\n```", "```py\ndraw_graph(ego_1, font_size=12, show_names=True, node_size=4, edge_width=1)\n```", "```py\ndraw_graph(nx.k_core(ego_1, 1), font_size=12, show_names=True, node_size=4, edge_width=1)\n```", "```py\nsorted(ego_1.nodes)\n['Babet', 'Bamatabois', 'Bossuet', 'Brevet', 'Champmathieu', 'Chenildieu', 'Claquesous', 'Cochepaille', 'Cosette', 'Enjolras', 'Fantine', 'Fauchelevent', 'Gavroche', 'Gervais', 'Gillenormand', 'Gueulemer', 'Isabeau', 'Javert', 'Judge', 'Labarre', 'Marguerite', 'Marius', 'MlleBaptistine', 'MlleGillenormand', 'MmeDeR', 'MmeMagloire', 'MmeThenardier', 'Montparnasse', 'MotherInnocent', 'Myriel', 'Scaufflaire', 'Simplice', 'Thenardier', 'Toussaint', 'Woman1', 'Woman2']\n```", "```py\n    len(ego_1.nodes)\n    ```", "```py\n    36\n    ```", "```py\n    nx.info(ego_1)\n    ```", "```py\n    Graph with 36 nodes and 76 edges'\n    ```", "```py\ndegcent = nx.degree_centrality(ego_1)\ndegcent_df = pd.DataFrame(degcent, index=[0]).T\ndegcent_df.columns = ['degree_centrality']\ndegcent_df.sort_values('degree_centrality', inplace=True, ascending=False)\ndegcent_df.head(10)\n```", "```py\nnx.density(ego_1)\n0.12063492063492064\n```", "```py\nego_2 = nx.ego_graph(G, 'Marius')\ndraw_graph(ego_2, font_size=12, show_names=True, node_size=4, edge_width=1)\n```", "```py\nego_2 = nx.ego_graph(G, 'Marius', center=False)\ndraw_graph(ego_2, font_size=12, show_names=True, node_size=4, edge_width=1)\n```", "```py\nsorted(ego_2.nodes)\n['Bahorel', 'BaronessT', 'Bossuet', 'Combeferre', 'Cosette', 'Courfeyrac', 'Enjolras', 'Eponine', 'Feuilly', 'Gavroche', 'Gillenormand', 'Joly', 'LtGillenormand', 'Mabeuf', 'MlleGillenormand', 'Pontmercy', 'Thenardier', 'Tholomyes', 'Valjean']\n```", "```py\nnx.info(ego_2)\n'Graph with 19 nodes and 57 edges'\n```", "```py\ndegcent = nx.degree_centrality(ego_2)\ndegcent_df = pd.DataFrame(degcent, index=[0]).T\ndegcent_df.columns = ['degree_centrality']\ndegcent_df.sort_values('degree_centrality', inplace=True, ascending=False)\ndegcent_df.head(10)\n```", "```py\nnx.density(ego_2)\n0.3333333333333333\n```", "```py\nego_3 = nx.ego_graph(G, 'Gavroche')\ndraw_graph(ego_3, font_size=12, show_names=True, node_size=4, edge_width=1)\n```", "```py\nego_3 = nx.ego_graph(G, 'Gavroche', center=False)\ndraw_graph(ego_3, font_size=12, show_names=True, node_size=4, edge_width=1)\n```", "```py\n    sorted(ego_3.nodes)\n    ```", "```py\n['Babet', 'Bahorel', 'Bossuet', 'Brujon', 'Child1', 'Child2', 'Combeferre', 'Courfeyrac', 'Enjolras', 'Feuilly', 'Grantaire', 'Gueulemer', 'Javert', 'Joly', 'Mabeuf', 'Marius', 'MmeBurgon', 'MmeHucheloup', 'Montparnasse', 'Prouvaire', 'Thenardier', 'Valjean']\n```", "```py\n    nx.info(ego_3)\n    ```", "```py\n'Graph with 22 nodes and 82 edges'\n```", "```py\ndegcent = nx.degree_centrality(ego_3)\ndegcent_df = pd.DataFrame(degcent, index=[0]).T\ndegcent_df.columns = ['degree_centrality']\ndegcent_df.sort_values('degree_centrality', inplace=True, ascending=False)\ndegcent_df.head(10)\n```", "```py\nnx.density(ego_3)\n0.354978354978355\n```", "```py\nego_4 = nx.ego_graph(G, 'Joly')\ndraw_graph(ego_4, font_size=12, show_names=True, node_size=4, edge_width=1)\n```", "```py\nego_4 = nx.ego_graph(G, 'Joly', center=False)\ndraw_graph(ego_4, font_size=12, show_names=True, node_size=4, edge_width=1)\n```", "```py\nsorted(ego_4.nodes)\n```", "```py\n['Bahorel', 'Bossuet', 'Combeferre', 'Courfeyrac', 'Enjolras', 'Feuilly', 'Gavroche', 'Grantaire', 'Mabeuf', 'Marius', 'MmeHucheloup', 'Prouvaire']\n```", "```py\nnx.info(ego_4)\n```", "```py\n'Graph with 12 nodes and 57 edges'\n```", "```py\ndegcent = nx.degree_centrality(ego_4)\ndegcent_df = pd.DataFrame(degcent, index=[0]).T\ndegcent_df.columns = ['degree_centrality']\ndegcent_df.sort_values( 'degree_centrality', inplace=True, ascending=False)\ndegcent_df.head(10)\n```", "```py\nnx.density(ego_4)\n0.8636363636363636\n```"]