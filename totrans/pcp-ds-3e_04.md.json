["```py\nimport numpy as np\nx = np.array([3, 6, 8])\n```", "```py\ns = set()\ns = set([1, 2, 2, 3, 2, 1, 2, 2, 3, 2])\n# will remove duplicates from a list\ns == {1, 2, 3}\n```", "```py\ndict = {\"dog\": \"human's best friend\", \"cat\": \"destroyer of world\"} dict[\"dog\"]# == \"human's best friend\"\nlen(dict[\"cat\"]) # == 18\nbut if we try to create a pair with the same key as an existing key dict[\"dog\"] = \"Arf\"\ndict\n{\"dog\": \"Arf\", \"cat\": \"destroyer of world\"}\nIt will override the previous value\ndictionaries cannot have two values for one key.\n```", "```py\n# s == {1,2,3}\nlen(s) == 3 # magnitude of s\n```", "```py\nuser1 = {\"Target\",\"Banana Republic\",\"Old Navy\"}\nnote that we use {} notation to create a set\ncompare that to using [] to make a list\n```", "```py\nuser2 = {\"Banana Republic\",\"Gap\",\"Kohl's\"}\n```", "```py\nuser1 = {\"Target\", \"Banana Republic\", \"Old Navy\"} user2 = {\"Banana Republic\", \"Gap\", \"Kohl's\"}\ndef jaccard(user1, user2):\nstores_in_common = len(user1 & user2)\nstores_all_together = len(user1 | user2)\nreturn stores / stores_all_together\n   # using our new jaccard function\njaccard(user1, user2) == # 0.2 or 1/5\n```", "```py\nimport numpy as np\n# create user preferences\nuser_pref = np.array([5, 1, 3])\ncreate a random movie matrix of 10,000 movies movies = np.random.randint(5,size=(3,1000))+1\nNote that the randint will make random integers from 0-4\nso I added a 1 at the end to increase the scale from 1-5\n```", "```py\nprint(user_pref.shape) # (1, 3)\nprint(movies.shape) # (3, 1000)\n```", "```py\nnp.dot does both dot products and matrix multiplication np.dot(user_pref, movies)\n```", "```py\nimport numpy as np\nimport time\nfor num_movies in (10000, 100000, 1000000, 10000000, 100000000):\nmovies = np.random.randint(5,size=(3, num_movies))+1\nnow = time.time()\nnp.dot(user_pref, movies)\nprint((time.time() - now), \"seconds to run\", num_movies, \"movies\")\n0.000160932540894 seconds to run 10000 movies\n0.00121188163757 seconds to run 100000 movies\n0.0105860233307 seconds to run 1000000 movies\n0.096577167511 seconds to run 10000000 movies\n4.16197991371 seconds to run 100000000 movies\n```"]