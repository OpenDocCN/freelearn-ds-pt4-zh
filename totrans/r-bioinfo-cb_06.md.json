["```py\nif (!requireNamespace(\"BiocManager\"))\n   install.packages(\"BiocManager\")\n```", "```py\nBiocManager::install(\"package_name\")\n```", "```py\nlibrary(mzR)\nlibrary(MSnbase)\n```", "```py\nmzxml_file <- file.path(getwd(), \"datasets\", \"ch6\", \"threonine_i2_e35_pH_tree.mzXML\")\nms1 <- openMSfile(mzxml_file)\n\nmzdata_file <- file.path(getwd(), \"datasets\", \"ch6\", \"HAM004_641fE_14-11-07--Exp1.extracted.mzdata\")\nms2 <- openMSfile(mzdata_file)\n\nmzml_file <-  file.path(getwd(), \"datasets\", \"ch6\", \"MM8.mzML\")\nms3 <- openMSfile(mzml_file)\n```", "```py\nrunInfo(ms3)\n\n## $scanCount\n## [1] 198\n## \n## $lowMz\n## [1] 95.51765\n## \n## $highMz\n## [1] 1005.043\n## \n## $dStartTime\n## [1] 0.486\n## \n## $dEndTime\n## [1] 66.7818\n## \n## $msLevels\n## [1] 1\n## \n## $startTimeStamp\n## [1] \"2008-09-01T09:48:37.296+01:00\"\n\nsampleInfo(ms1)\n\n## [1] \"\"\n```", "```py\nmsn_exp <- MSnbase::readMSData(mzxml_file)\nMSnbase::plot(msn_exp, full = TRUE)\nMSnbase::plot(msn_exp[5], full = TRUE)\n```", "```py\nlibrary(MSnID)\nlibrary(EnsDb.Hsapiens.v86)\nlibrary(rtracklayer)\n```", "```py\nmsnid <- MSnID() \nmsnid <- read_mzIDs(msnid, file.path(getwd(), \"datasets\", \"ch6\", \"HeLa_180123_m43_r2_CAM.mzid.gz\")) \n```", "```py\nreal_hits <- msnid@psms[! msnid@psms$isDecoy, ]\nrequired_info <- real_hits[, c(\"spectrumID\", \"pepSeq\", \"accession\", \"start\", \"end\")]\n```", "```py\nuniprot_ids <- unlist(lapply(strsplit(required_info$accession, \"\\\\|\"), function(x){x[2]}) )\nuniprot_ids <- uniprot_ids[!is.na(uniprot_ids)]\n```", "```py\nedb <- EnsDb.Hsapiens.v86\ngenes_for_prots <- genes(edb, \n    filter = UniprotFilter(uniprot_ids), \n    columns = c(\"gene_name\", \"gene_seq_start\", \"gene_seq_end\", \"seq_name\"))\n```", "```py\ntrack <- GRangesForUCSCGenome(\"hg38\", \n    paste0(\"chr\",seqnames(genes_for_prots)), \n    ranges(genes_for_prots), \n    strand(genes_for_prots), \n    genes_for_prots$gene_name, \n    genes_for_prots$uniprot_id )\n```", "```py\nsession <- browserSession(\"UCSC\")\ntrack(session, \"my_peptides\") <- track\n\nfirst_peptide <- track[1] \nview <- browserView(session, first_peptide * -5, pack = \"my_peptides\") \n```", "```py\nlibrary(MSnID)\nlibrary(data.table)\nlibrary(dplyr)\nlibrary(ggplot2)\nmsnid <- MSnID() \nmsnid <- read_mzIDs(msnid, file.path(getwd(), \"datasets\", \"ch6\", \"HeLa_180123_m43_r2_CAM.mzid.gz\")) \npeptide_info <- as(msnid, \"data.table\")\n```", "```py\nper_peptide_counts <- peptide_info %>% \n filter(isDecoy == FALSE) %>%\n group_by(pepSeq) %>%\n summarise(count = n() ) %>% \n mutate(sample = rep(\"peptide_counts\", length(counts) ) )\n```", "```py\nper_peptide_counts %>% \n ggplot() + aes( sample, count) + geom_jitter() + geom_violin() + scale_y_log10()\n```", "```py\nper_peptide_counts %>%\n arrange(count) %>%\n mutate(cumulative_hits = cumsum(count), peptide = 1:length(count)) %>%\n ggplot() + aes(peptide, cumulative_hits) + geom_line()\n```", "```py\nfiltered_per_peptide_counts <- per_peptide_counts %>%\n  filter(count >= 5, count <= 2500) \n\nfiltered_per_peptide_counts %>% \n ggplot() + aes( sample, count) + geom_jitter() + geom_violin() + scale_y_log10()\n```", "```py\nlibrary(mzR)\nmzxml_file <- file.path(getwd(), \"datasets\", \"ch6\", \"threonine_i2_e35_pH_tree.mzXML\")\nmzdata <- openMSfile(mzxml_file)\n```", "```py\nheader_info <- header(mzdata)\npeak_data_list <- spectra(mzdata)\n```", "```py\nwriteMSData(peak_data_list, \n file.path(getwd(), \"datasets\", \"ch6\", \"out.mz\"), \n header = header_info, \n outformat = \"mzml\", \n rtime_seconds = TRUE \n)\n```", "```py\nlibrary(mzR)\nlibrary(protViz)\nmzml_file <- file.path(getwd(), \"datasets\", \"ch6\", \"MM8.mzML\")\nms <- openMSfile(mzml_file)\n```", "```py\np <- peaks(ms,2)\nspec <- list(mZ = p[,1], intensity = p[,2])\n```", "```py\nm <- psm(\"PEPTIDESEQ\", spec, plot=TRUE)\n```", "```py\nlibrary(proteoQC) \nonline_file <- \"ftp://ftp.pride.ebi.ac.uk/pride/data/archive/2017/11/PXD006247/CS_130530_ORBI_EMCP2156_b2469_narQ_DDM_AmH_X_5.mzXML\"\n\nmzxml_file <- file.path(getwd(), \"datasets\", \"ch6\", \"PXD006247_mz.xml.gz\" )\n\ndownload.file(online_file, mzxml_file, \"internal\")\n```", "```py\ndesign_df <- data.frame(\n file = c(mzxml_file),\n sample = c(1),\n bioRep = c(1),\n techRep = c(1),\n fraction = c(1)\n )\ndesign_file <- file.path(getwd(), \"datasets\", \"ch6\", \"design_file.txt\")\nwrite.table(design_df, file = design_file, quote = FALSE, row.names = FALSE)\n```", "```py\nqc <- msQCpipe(\n spectralist = design_file,\n fasta = file.path(getwd(), \"datasets\", \"ch6\", \"Escherichia_coli.pep.all.fa\"),\n outdir = file.path(getwd(), \"qc_result\"),\n enzyme = 1, varmod = 2, fixmod =1,\n tol = 10, itol = 0.6, cpu = 2,\n mode = \"identification\"\n)\n```", "```py\nlibrary(MSnID)\nlibrary(dplyr)\nlibrary(Biostrings)\n\nmsnid <- MSnID() # create object\nmsnid <- read_mzIDs(msnid, file.path(getwd(), \"datasets\", \"ch6\", \"PXD006247.mzXML.mzid\")) \n\npeptide_info <- as(msnid, \"data.table\") %>%\n filter(isDecoy == FALSE) %>%\n select(spectrumID, pepSeq, ) %>%\n mutate(fasta_id = paste0( spectrumID, \":\", 1:length(spectrumID)) )\n```", "```py\nstring_set <- AAStringSet(peptide_info$pepSeq )\nnames(string_set) <- peptide_info$fasta_id\nwriteXStringSet(string_set[1], file.path(getwd(), \"datasets\", \"ch6\", \"peptides.fa\"))\n```", "```py\ninput_seqs <- file.path(getwd(), \"datasets\", \"ch6\", \"peptides.fa\")\ngenome_seqs <- file.path(getwd(), \"datasets\", \"ch6\", \"ecoli_genome.fasta\")\noutput_blast <- file.path(getwd(), \"datasets\", \"ch6\", \"out.blast\")\n```", "```py\ncommand <- paste0(\n \"tblastn\", \n \" -query \", input_seqs ,\n \" -subject \", genome_seqs, \n \" -out \", output_blast,\n \" -word_size 2 -evalue 20000 -seg no -matrix PAM30 -comp_based_stats F -outfmt 6 -max_hsps 1\"\n )\n```", "```py\nlibrary(withr)\nwith_path(\"/Users/macleand/miniconda2/bin\", system(command, wait = TRUE) )\n```", "```py\nresults <- read.table(output_blast)\n\nblast_to_gff <- function(blst_res){\n blst_res %>% \n mutate(\n seqid = V2,\n source = rep(\"tblastn\", length(V1)),\n type = rep(\".\", length(V1)),\n start = V9,\n end = V10,\n score = V3,\n strand = rep(\".\", length(V1)),\n phase = rep(\".\", length(V1)),\n attributes = paste(\"Name=\",V1)\n ) %>%\n select( - starts_with(\"V\") )\n}\n\ngff_df <- blast_to_gff(results)\n\nlibrary(GenomicRanges)\ngranges<-makeGRangesFromDataFrame(gff_df)\n```"]