- en: '*Chapter 5*: Installing Pachyderm on a Cloud Platform'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, you learned the process for installing Pachyderm locally
    to get started quickly and test Pachyderm on your computer.
  prefs: []
  type: TYPE_NORMAL
- en: Production use cases require additional compute resources and scalability that
    can be efficiently achieved using cloud platforms and managed Kubernetes platform
    services provided by the popular cloud vendors. Pachyderm can run on a Kubernetes
    cluster, irrespective of whether it is deployed manually on cloud instances or
    as a managed Kubernetes service. We will discuss the most popular and easy-to-configure
    methods on cloud providers.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter walks you through the cloud-based installation of Pachyderm and
    explains the software requirements needed to run a Pachyderm cluster in production.
    This chapter will cover the installation on the following most popular cloud platforms:
    Amazon **Elastic Kubernetes Service** (**EKS**), **Google Kubernetes Engine**
    (**GKE**), and Microsoft **Azure Kubernetes Service** (**AKS**).'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Installing the required tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying Pachyderm on Amazon EKS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying Pachyderm on GKE
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying Pachyderm on Microsoft AKS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing the Pachyderm console
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you are on macOS, verify that you have an up-to-date version of macOS. If
    you are using Linux, you must be on 64-bit versions of recent distributions of
    CentOS, Fedora, or Ubuntu. If you are on Windows, run all the commands described
    in this section from **Windows Subsystem for Linux** (**WSL**). You should have
    the following tools installed from the previous chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: Homebrew (macOS only)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Kubernetes `kubectl`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Helm
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pachyderm CLI – `pachctl`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WSL (Windows only)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We will need to install the following tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '`aws`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Amazon Identity and Access Management** (**AWS IAM**) authenticator for
    Kubernetes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The EKS command-line tool – `eksctl`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Google Cloud SDK – `gcloud`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Azure CLI – `az`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A JSON processor – `jq`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will go into the specifics regarding the installation and configuration of
    these tools as we go through this chapter. If you already know how to do this,
    you can go ahead and set them up now.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the required tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will cover the installation of the system tools that we
    will use to prepare our environment before deploying a Kubernetes cluster and
    installing Pachyderm on cloud platforms.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the AWS Command Line Interface to manage AWS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The AWS Command Line Interface, `aws-cli`, is required to execute commands
    in your AWS account. For additional information, you can refer to the AWS Command
    Line Interface official documentation at [https://docs.aws.amazon.com/cli/latest/userguide/](https://docs.aws.amazon.com/cli/latest/userguide/).
    Let''s install `aws-cli` on your computer:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following commands to install `aws-cli` version 2 on your computer:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you are using macOS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If you are on Linux (x86) or WSL on Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command to verify the successful installation of the
    AWS CLI:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command to configure the AWS CLI and enter your `~/.aws/credentials`
    to be used when you run the command later:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'To use a different account than what you have configured in the credentials
    file, you can set the environment variable, which will be used until the end of
    your current shell session. Use the following variables temporarily to set a user
    configuration if needed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Now that you have installed the AWS Command Line Interface on your computer,
    let's install the AWS IAM authenticator for Kubernetes.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the AWS IAM authenticator for Kubernetes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Amazon EKS leverages AWS IAM to provide access to the Kubernetes clusters created
    through EKS. To be able to make the `kubectl` command work with Amazon EKS IAM
    roles, the Amazon IAM authenticator for Kubernetes needs to be installed. Let''s
    install the IAM authenticator on your computer:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following commands to install `aws-iam-authenticator`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you are using macOS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'If you are using Linux (x86) or WSL on Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Verify its version and make sure that `aws-iam-authenticator` is installed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows. To be able to perform
    the following recipes, the `aws-iam-authenticator` version should be `0.5.0` or
    later:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Now you have installed `aws-iam-authenticator` on your computer.
  prefs: []
  type: TYPE_NORMAL
- en: Installing eksctl to manage Amazon EKS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Amazon EKS is a managed Kubernetes service on Amazon EC2\. To manage Amazon
    EKS over the terminal and execute commands, the official CLI for Amazon EKS, `eksctl`,
    is used. For additional information, you can refer to the AWS `eksctl` official
    documentation at [https://docs.aws.amazon.com/eks/latest/userguide/getting-started-eksctl.html](https://docs.aws.amazon.com/eks/latest/userguide/getting-started-eksctl.html).
    Let''s install `eksctl` on your computer:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following commands to install `eksctl` on your computer:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you are using macOS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'If you are using Linux (x86) or WSL on Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Verify its version and make sure that `eksctl` is installed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: To be able to perform the following steps, the `eksctl` version should be `0.77.0`
    or later. Now you have installed `eksctl` to manage Amazon EKS on your computer.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Google Cloud SDK to manage Google Cloud
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Google Cloud SDK, `gcloud`, is required to execute commands in your Google
    Cloud account. The following instructions assume that you have an active GCP account
    with billing enabled. If you don''t have an account already, go to [https://console.cloud.google.com](https://console.cloud.google.com)
    and create an account. Let''s install `gcloud` on your computer:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following commands to install `gcloud` on your computer:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you are using macOS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'If you are using Linux (x86) or WSL on Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Restart your shell by executing the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Verify its version and make sure `gcloud` is installed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows. To be able to perform
    the following recipes, the Google Cloud SDK version should be `339.0.0` or later:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command to initialize the SDK and follow the instructions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the following command to set a default zone for future deployments.
    In our example, the compute zone is set to `us-central1-a`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Now you have installed `gcloud` to manage GKE on your computer.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Azure CLI to manage Microsoft Azure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Azure CLI, `az`, is required to execute commands in your Microsoft Azure
    account. The following instructions assume that you have an active Azure account
    with billing enabled. If you don''t have an account already, go to [https://portal.azure.com](https://portal.azure.com)
    and create an account. Let''s install the Azure CLI on your computer:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following commands to install `gcloud` on your computer:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you are using macOS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'If you are using Linux (x86) or WSL on Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Verify its version and make sure the Azure CLI is installed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows. To be able to perform
    the following steps, the Azure CLI version should be `2.0.1` or later:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command to initialize the Azure CLI and follow the instructions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the following command to create a resource group with a unique name
    and set a default zone for future deployments. In our example, the compute zone
    is set to `centralus`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Now you have installed the Azure CLI to manage AKS on your computer.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying Pachyderm on Amazon EKS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kubernetes is an open source container orchestration platform and, by itself,
    is a large topic to cover. In this section, we take the topic of containerization
    from a data scientist's perspective and will only focus on running our workload,
    Pachyderm, on the most common managed platforms available in the market. There
    are various ways and tools to provision and manage the life cycle of production-grade
    Kubernetes clusters on the AWS cloud platform, such as `kOps`, `kubespray`, `k3s`,
    Terraform, and others. For additional configuration details, you can refer to
    Kubernetes' official documentation at [https://kubernetes.io/docs/setup/production-environment/](https://kubernetes.io/docs/setup/production-environment/).
    Let's learn the simplest way to get the services required by Pachyderm up and
    running on AWS's managed Kubernetes service, Amazon EKS.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing an Amazon EKS cluster to run Pachyderm
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to provision an Amazon EKS cluster using `eksctl`. Initially
    developed as a third-party open source tool, `eksctl` is now the official tool
    for deploying and managing EKS clusters via a CLI. You will need to have the AWS
    CLI and the AWS IAM authenticator for Kubernetes installed and their credentials
    configured. If you have a cluster, you can skip these instructions and jump to
    the *Deploying Pachyderm on Amazon EKS* section. Also, you can refer to the Amazon
    EKS official documentation at [https://eksctl.io/introduction/](https://eksctl.io/introduction/):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following command to simply deploy an EKS cluster with default
    parameters. This command will generate a cluster with two `m5.large` worker nodes
    using the official AWS EKS **Amazon Machine Image** (**AMI**):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should return output similar to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: 'To customize the EKS cluster configuration, you can pass additional parameters
    to `eksctl` as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`eksctl create cluster --name <name> --version <version> \`'
  prefs: []
  type: TYPE_NORMAL
- en: '`--nodegroup-name <name> --node-type <vm-flavor> \`'
  prefs: []
  type: TYPE_NORMAL
- en: '`--nodes <number-of-nodes> --nodes-min <min-number-nodes> \`'
  prefs: []
  type: TYPE_NORMAL
- en: '`--nodes-max <max-number-nodes> --node-ami auto`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Verify the cluster deployment by executing the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Now, your Amazon EKS cluster is provisioned and ready to deploy Pachyderm.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an S3 object storage bucket
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Pachyderm uses S3-compliant object storage to store data. Follow these steps
    to create an S3 object storage bucket:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Generate variables that will be used to create your S3 bucket and pass it to
    `pachctl` to store your Pachyderm data later. Make sure to use a unique bucket
    name. In our example, we will use `s3.pachyderm` as our bucket name with a capacity
    of 200 GB and located in the same region as our EKS cluster, `us-east-1`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'In order for Pachyderm to store pipeline data, a dedicated S3 bucket is required.
    Execute the following command to create an S3 bucket with the parameters defined
    by your variables:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the following command to confirm the creation of the bucket:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: Now that we have an S3 bucket created, we are ready to deploy Pachyderm on Amazon
    EKS.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying the cluster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you start learning Pachyderm, it is recommended to run experiments in a
    small local cluster. We have previously covered the local deployment of Pachyderm
    in [*Chapter 4*](B17085_04_Final_SB_Epub.xhtml#_idTextAnchor096), *Installing
    Pachyderm Locally*. In this chapter, we focus on a scalable production-grade deployment
    of Pachyderm using IAM roles on Amazon EKS clusters.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to install Pachyderm on your Amazon EKS cluster:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The AWS IAM role assigned to your EKS cluster needs to have access to the S3
    bucket you created during the *Creating an S3 object storage bucket* section.
    As shown in the following screenshot, log in to your AWS Management Console and
    go to the EKS dashboard as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 5.1 – Amazon EKS Clusters dashboard'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17085_05_001.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 5.1 – Amazon EKS Clusters dashboard
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the cluster. Locate the EC2 instance in the cluster. Find the IAM
    role on the **Instance** description page. Click on **IAM Role**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 5.2 – IAM role assigned to EC2 instances'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17085_05_002.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 5.2 – IAM role assigned to EC2 instances
  prefs: []
  type: TYPE_NORMAL
- en: 'Replace the `<s3-bucket>` placeholder below with your bucket name. Click on
    **Add inline policy** to create a new inline policy similar to the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Switch to the **Trust relationships** tab and click on the **Edit trust relationship**
    button. Confirm that the trust relationship is similar to the following, otherwise,
    make the changes and click on the **Update Trust Policy** button to update:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, execute the following command to add the Pachyderm Helm Chart repos to
    your local repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the following command to get the latest Chart information from the
    Chart repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'For a quick deployment, replace the Amazon S3 bucket name, access key ID, and
    secret key below and execute the command to deploy the latest version of Pachyderm
    on your cluster without the console:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you have an enterprise key and would like to deploy it with Pachyderm''s
    console user interface, execute the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: Once the console is deployed successfully, follow the instructions under the
    *Accessing the Pachyderm console* section to access the console.
  prefs: []
  type: TYPE_NORMAL
- en: 'The commands return the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.3 – Pachyderm Helm Chart getting deployed on Kubernetes'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17085_05_003.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 5.3 – Pachyderm Helm Chart getting deployed on Kubernetes
  prefs: []
  type: TYPE_NORMAL
- en: 'Optional: Customizing Installation Parameters'
  prefs: []
  type: TYPE_NORMAL
- en: You can also download and customize the `values.yaml` file in the Helm Chart
    repository, [https://github.com/pachyderm/pachyderm/tree/master/etc/helm/pachyderm](https://github.com/pachyderm/pachyderm/tree/master/etc/helm/pachyderm),
    to further optimize the components needed to run Pachyderm.
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following command to create a local copy of the `values.yaml` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '`$ wget https://raw.githubusercontent.com/pachyderm/pachyderm/master/etc/helm/pachyderm/values.yaml`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once customized, you can use the same YAML file and install your Helm Chart
    by executing the following command instead:'
  prefs: []
  type: TYPE_NORMAL
- en: '`$ helm install pachyderm -f values.yaml pach/pachyderm`'
  prefs: []
  type: TYPE_NORMAL
- en: 'A Kubernetes Deployment is a controller that rolls out a ReplicaSet of Pods
    based on the requirements defined in your `manifest` file. A ReplicaSet is a group
    of instances of the same service. Execute the following command to verify the
    state of Deployments created during the installation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.4 – List of Pachyderm Deployment objects'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17085_05_004.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 5.4 – List of Pachyderm Deployment objects
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following command to verify a successful installation and see the
    Pods created as part of the Deployments:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.5 – List of Pachyderm Pods'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17085_05_005.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 5.5 – List of Pachyderm Pods
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following command to verify the persistent volumes created as part
    of the Deployment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: When Pachyderm is deployed using the `--dynamic-etcd-nodes` flag, it creates
    an `etcd` deployment to manage administrative metadata. Block storage used by
    `etcd` Pods is provisioned using the default AWS StorageClass, `gp2`. To use a
    different StorageClass during deployment, you will need to deploy an Amazon EBS
    CSI driver to your cluster and update the `etcd.storageclass` parameter to `gp3`
    during the Helm Chart deployment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following command to verify the successful installation of Pachyderm:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: Now that we have installed Pachyderm on our AWS EKS cluster, we are ready to
    create our first pipeline.
  prefs: []
  type: TYPE_NORMAL
- en: Deleting a Pachyderm deployment on Amazon EKS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you need to delete your Pachyderm deployment or start afresh, you can wipe
    out your environment and start over again from the *Preparing an EKS cluster to
    run Pachyderm* instructions. Let''s perform the following steps to delete your
    existing Pachyderm deployment:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have used a different name for your Helm instance, execute the following
    command to find the Pachyderm instance name deployed using the Helm Chart:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command using your Pachyderm instance name to remove
    Pachyderm components from your cluster:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the following command to retrieve the list of EKS clusters deployed
    and identify the name of your cluster:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 'If you would like to remove the cluster completely, copy the name of your cluster
    from the preceding output and execute the following command after replacing the
    name to delete the Amazon EKS cluster. Note that all the other workloads on this
    cluster will also be destroyed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should complete similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: Now you have completely removed Pachyderm and your EKS cluster from your AWS
    account.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying Pachyderm on GKE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you use Google Cloud, a managed Kubernetes service can be deployed on `kOps`,
    `kubespray`, Terraform, and others. For additional configuration details, you
    can refer to Kubernetes' official documentation at [https://kubernetes.io/docs/setup/production-environment/](https://kubernetes.io/docs/setup/production-environment/).
    Let's learn the simplest way to get the services required by Pachyderm up and
    running on Google Cloud's managed Kubernetes service, GKE.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing a GKE cluster to run Pachyderm
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to provision a GKE cluster using the Google Cloud SDK. You
    will need to have the Google Cloud SDK installed and its credentials configured.
    If you have a cluster, you can skip these instructions and jump to the *Deploying
    the cluster section*. Also, you can refer to the Google Cloud SDK official documentation
    at [https://cloud.google.com/sdk/docs/install](https://cloud.google.com/sdk/docs/install):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following command to deploy a GKE cluster with default parameters.
    This command will generate a three-node cluster with the recommended `n2-standard-4`
    instance type using a **Container-Optimized OS** (**COS**) with Docker in your
    default compute zone:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should complete similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: To simply customize the GKE cluster parameters, you can use the GCP console
    and the Kubernetes Engine creation wizard. After you configure the parameters
    on the wizard, click on the command-line button in the wizard to convert the configuration
    into a CLI command to use with the `gcloud` command.
  prefs: []
  type: TYPE_NORMAL
- en: 'Verify deployment of the cluster by executing the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: Now, your GKE cluster is provisioned and ready to deploy Pachyderm.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a Google Cloud object storage bucket
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Pachyderm uses object storage to store data. Follow these steps to create a
    Google Cloud object storage bucket:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Generate variables that will be used to create your `pachctl` to store your
    Pachyderm data later. Make sure to use a unique bucket name. In our example, we
    will use `pachyderm-bucket` as our bucket name with a capacity of 200 GB and located
    in the same region as our GKE cluster, `us-central1`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'In order for Pachyderm to store pipeline data, a dedicated GCS bucket is required.
    Execute the following command to create a GCS bucket with the parameters defined
    by your variables:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the following command to confirm the creation of the bucket:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: Now, you have a GCS bucket created to store Pachyderm data. We are ready to
    deploy Pachyderm on GKE.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying the cluster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you start learning Pachyderm, it is suggested to run experiments in a small
    local cluster. We have previously covered the local deployment of Pachyderm in
    [*Chapter 4*](B17085_04_Final_SB_Epub.xhtml#_idTextAnchor096), *Installing Pachyderm
    Locally*. In this chapter, we are going to focus on a scalable production-grade
    deployment of Pachyderm using IAM roles on GKE clusters.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to install Pachyderm on your GKE cluster:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you don''t already have a service account, execute the following command
    to create a service account:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Replace the following `pachyderm-book` in both places with your project name
    and add a storage admin role that is binding to your service account:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, execute the following command to add Pachyderm Helm Chart repos to your
    local repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the following command to get the latest Chart information from the
    Chart repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'For a quick deployment, replace the Google Cloud bucket name, and Google Cloud
    credentials, and execute the following command to deploy the latest version of
    Pachyderm on your cluster without the console:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you have an enterprise key and would like to deploy it with Pachyderm''s
    console user interface, execute the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: Once the console is deployed successfully, follow the instructions under the
    *Accessing the Pachyderm console* section to access the console.
  prefs: []
  type: TYPE_NORMAL
- en: 'A Kubernetes Deployment is a controller that rolls out a ReplicaSet of Pods
    based on the requirements defined in your manifest file. Execute the following
    command to verify the state of Deployments created during installation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command to verify a successful installation and see the
    Pods created as part of the Deployments:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command to verify the persistent volumes created as part
    of the Deployment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command to verify the successful installation of Pachyderm:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: Now we have installed Pachyderm on your GKE cluster, you are ready to create
    your first pipeline.
  prefs: []
  type: TYPE_NORMAL
- en: Deleting a Pachyderm deployment on GKE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you need to delete your deployment and start afresh, you can wipe out your
    environment and start over again using the *Preparing a GKE cluster to run Pachyderm*
    instructions. Let''s perform the following steps to delete your existing Pachyderm
    deployment:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have used a different name for your Helm instance, execute the following
    command to find the Pachyderm instance name deployed using the Helm Chart:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command using your Pachyderm instance name to remove
    the Pachyderm components from your cluster:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the following command to retrieve the list of GKE clusters deployed
    and identify the name of your cluster:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: 'If you would like to remove the cluster completely, copy the name of your cluster
    from the preceding output and execute the following command after replacing the
    name to delete the GKE cluster. Note that all the other workloads on this cluster
    will also be destroyed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should complete similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: Now you have completely removed Pachyderm and your Kubernetes cluster from your
    GCP account.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying Pachyderm on Microsoft AKS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you use Microsoft Azure, a managed Kubernetes service can be deployed on
    the Azure platform using automation and command-line tools with the help of `kOps`,
    `kubespray`, Terraform, and others. For additional configuration details, you
    can refer to Kubernetes' official documentation at [https://kubernetes.io/docs/setup/production-environment/](https://kubernetes.io/docs/setup/production-environment/).
    Let's learn the simplest way to get the services required by Pachyderm up and
    running on AKS.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing an AKS cluster to run Pachyderm
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to provision an AKS cluster using the Azure CLI. You will
    need to have the Azure CLI installed and its credentials configured. If you have
    a cluster, you can skip these instructions and jump to the *Deploying Pachyderm
    on Microsoft AKS* section. Also, you can refer to the Azure CLI official documentation
    at [https://docs.microsoft.com/en-us/cli/azure/](https://docs.microsoft.com/en-us/cli/azure/):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following command in your previously specified `resource-group`
    to deploy an AKS cluster with default parameters. This command will generate a
    three-node cluster with the recommended `Standard_DS4_v2` instance type in your
    default compute zone:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should complete similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: If you don't remember your resource group name, you can use the `az group list`
    command to list the previously created resource groups.
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following command to connect to your cluster:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Verify the cluster deployment by executing the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: Now your AKS cluster is provisioned and ready to deploy Pachyderm.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an Azure storage container
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Pachyderm uses blob storage to store data and block storage for metadata. It
    is recommended to use SSDs rather than the Standard HDD-based slower storage option.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to create a Premium LRS Block blobs storage container:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Generate variables that will be used to create your Azure Block blobs storage
    and pass to `pachctl` to store your Pachyderm data later. Make sure to use a unique
    storage account and container name. In our example, we will use `pachydermstorageaccount`
    as our `STORAGE_ACCOUNT`, `pachydermblobcontainer` as our `CONTAINER_NAME`, and
    it will be located in the `centralus` region:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the following command to your Azure storage account with the parameters
    defined by your variables:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the following command to confirm the creation of the bucket:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: 'The deployment of Pachyderm will require a storage account key. Execute the
    following command to store the storage keys in a variable:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the following command to create a data storage container in your storage
    account:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: Now, you have an Azure data storage container created in your Azure storage
    account to store Pachyderm data.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying the cluster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you start learning Pachyderm, it is suggested to run experiments in a small
    local cluster. We have previously covered the local deployment of Pachyderm in
    [*Chapter 4*](B17085_04_Final_SB_Epub.xhtml#_idTextAnchor096), *Installing Pachyderm
    Locally*. In this chapter, we are going to focus on a scalable production-grade
    deployment of Pachyderm on an AKS cluster.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to install Pachyderm on your AKS cluster:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have not connected to your Kubernetes cluster, execute the following
    command to connect to your cluster:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'For a quick deployment, replace the Azure storage container name, Azure storage
    account name, and AKS account key, and execute the following command to deploy
    the latest version of Pachyderm on your cluster without the console:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you have an enterprise key and you would like to deploy it with Pachyderm''s
    console user interface, execute the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: Once the console is deployed successfully, follow the instructions under the
    *Accessing the Pachyderm console* section to access the console.
  prefs: []
  type: TYPE_NORMAL
- en: 'A Kubernetes Deployment is a controller that rolls out a ReplicaSet of Pods
    based on the requirements defined in your manifest file. Execute the following
    command to verify the state of Deployments created during the installation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command to verify a successful installation and see the
    Pods created as part of the Deployments:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command to verify the persistent volumes created as part
    of the Deployment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: When Pachyderm is deployed using the `--dynamic-etcd-nodes` flag, it creates
    an `etcd` deployment to manage administrative metadata. In Azure, block storage
    used by `etcd` Pods is provisioned using the `default` StorageClass. This Storage
    Class uses the `azure-disk` provisioner with `StandardSSD_LRS` volumes. To use
    a different StorageClass during the deployment, you can customize the `values.yaml`
    file and update the `etcd.storageClass` parameter prior to the deployment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following command to verify the successful installation of Pachyderm:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: Now that we have installed Pachyderm on your AKS cluster, you are ready to create
    your first pipeline.
  prefs: []
  type: TYPE_NORMAL
- en: Deleting a Pachyderm deployment on AKS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you need to delete your deployment or start afresh, you can wipe out your
    environment and start over again using the *Preparing an AKS cluster to run Pachyderm*
    instructions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s perform the following steps to delete your existing Pachyderm deployment:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have used a different name for your Helm instance, execute the following
    command to find the Pachyderm instance name deployed using the Helm Chart:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: 'Execute the following command using your Pachyderm instance name to remove
    Pachyderm components from your cluster:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the following command to retrieve the list of AKS clusters deployed
    and identify the name of your cluster:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: 'If you would like to remove the cluster completely, copy the name of your cluster
    from the preceding output and execute the following command after replacing the
    name to delete the AKS cluster. Note that all the other workloads on this cluster
    will also be destroyed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The output of the preceding command should complete similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: Now you have completely removed Pachyderm and your Kubernetes cluster from your
    AKS account.
  prefs: []
  type: TYPE_NORMAL
- en: Accessing the Pachyderm console
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pachyderm Enterprise Edition offers a graphical user interface where you can
    see pipelines and repositories. Accessing the Pachyderm console using port forwarding
    was covered in [*Chapter 4*](B17085_04_Final_SB_Epub.xhtml#_idTextAnchor096),
    *Installing Pachyderm Locally*.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, for cloud deployments, you can deploy a Kubernetes ingress to access
    the Pachyderm console securely. For more information, refer to the official Pachyderm
    documentation.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned the software prerequisites for getting Pachyderm
    up and running on managed Kubernetes services from major cloud providers including
    AWS, Google Cloud, and Microsoft Azure.
  prefs: []
  type: TYPE_NORMAL
- en: We acquired basic knowledge of cloud providers' command-line tools and learned
    how to install and operate them on your local machine to provide production-grade
    Kubernetes clusters.
  prefs: []
  type: TYPE_NORMAL
- en: We created an object storage bucket and also deployed highly available multi-node
    managed Kubernetes clusters using the most common configuration options. And finally,
    we deployed a Pachyderm instance.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn in detail about creating your first pipeline.
    You will learn a simple data science example and a pipeline creation workflow.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can refer to the following links for more information on the topics covered
    in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Using the AWS CLI official documentation*: [https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-using.html](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-using.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Getting started with the Google Cloud SDK official documentation*: [https://cloud.google.com/sdk/docs/quickstart](https://cloud.google.com/sdk/docs/quickstart)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Using the Azure CLI official documentation*: [https://docs.microsoft.com/en-us/cli/azure/](https://docs.microsoft.com/en-us/cli/azure/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*eksctl documentation*: [https://eksctl.io/introduction/](https://eksctl.io/introduction/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*eksctl advanced cluster deployment examples*: [https://github.com/weaveworks/eksctl/tree/main/examples](https://github.com/weaveworks/eksctl/tree/main/examples)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*kOps documentation*: [https://kubernetes.io/docs/setup/production-environment/tools/kops/](https://kubernetes.io/docs/setup/production-environment/tools/kops/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Kubespray documentation*: [https://kubernetes.io/docs/setup/production-environment/tools/kubespray/](https://kubernetes.io/docs/setup/production-environment/tools/kubespray/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Kubernetes in production best practices*: [https://www.packtpub.com/product/kubernetes-in-production-best-practices/9781800202450](https://www.packtpub.com/product/kubernetes-in-production-best-practices/9781800202450)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Mastering Kubernetes – Third Edition*: [https://www.packtpub.com/product/mastering-kubernetes-third-edition/9781839211256](https://www.packtpub.com/product/mastering-kubernetes-third-edition/9781839211256)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
