["```py\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\nfrom skimage.io import imread, imsave\nfrom skimage import measure\nimport logging\nlogging.basicConfig(level=logging.INFO)\ndef create_contours(photo):\n     image = imread(photo, as_gray=True)\n     t = os.path.split(photo)[1]\n     c = measure.find_contours(image, 0.9)\n     fig, ax = plt.subplots()\n     ax.imshow(image, vmin=-1, vmax=1, cmap='gray')\n     for contour in c:\n         ax.plot(contour[:, 1], contour[:, 0], linewidth=2)\n     ax.axis('image')\n     ax.set_xticks([])\n     ax.set_yticks([])\n     plt.savefig(os.path.join(\"/pfs/out\", os.path.splitext(t)[0]+'.png'))\nfor dirpath, dirnames, filenames in os.walk(\"/pfs/photos\"):\n     for f in filenames:\n         create_contours(os.path.join(dirpath, f))\n```", "```py\n    % pachctl version\n    ```", "```py\nCOMPONENT           VERSION\npachctl             2.0.0\npachd               2.0.0\n```", "```py\n    % pachctl create repo photos\n    ```", "```py\n    % pachctl list repo\n    ```", "```py\nNAME   CREATED        SIZE (MASTER) ACCESS LEVEL\nphotos 11 seconds ago ≤ 0B          [repoOwner]\n```", "```py\n    % pachctl put file -r photos@master:/ -f data\n    ```", "```py\ndata/brown_vase.png 25.82 KB / 25.82 KB [=====] 0s 0.00 b/s\ndata/hand.png 33.21 KB / 33.21 KB [======] 0s 0.00 b/s\ndata/landscape.png 54.01 KB / 54.01 KB [=========] 0s\n```", "```py\n    % pachctl list file photos@master\n    ```", "```py\nNAME           TYPE SIZE\n/brown_vase.png file 25.21KiB\n/hand.png       file 32.43KiB\n/landscape.png  file 52.74KiB \n```", "```py\n    % pachctl put file photos@master -f landscape.jpg\n    ```", "```py\ndata/landscape.jpg 54.01KB / 54.01 KB [=] 0s 0.00 b/s/ \n```", "```py\n---\n pipeline:\n   name: contour\n description: A pipeline that identifies contours on an image.\n transform:\n   cmd:\n   - python3\n   - \"/contour.py\"\n   image: svekars/contour-histogram:1.0\ninput:\n   pfs:\n     repo: photos\n     glob: \"/\"\n```", "```py\n    % pachctl create pipeline -f contour.yaml\n    ```", "```py\n    % pachctl list pipeline\n    ```", "```py\nNAME    VERSION INPUT    CREATED       STATE / LAST JOB   DESC\ncontour 1       photos:/* 5 seconds ago running / - A pipeline that identifies contours on an image.\n```", "```py\n    pachctl list job\n    ```", "```py\nID       SUBJOBS PROGRESS CREATED       MODIFIED\n71169d…  1                      2 minutes ago 2 minutes ago\n```", "```py\n    % pachctl list repo\n    ```", "```py\n% pachctl list repo\nNAME    CREATED            SIZE (MASTER) ACCESS LEVEL\ncontour About a minute ago ≤ 117.6KiB    [repoOwner]  Output repo for pipeline contour.\nphotos  5 minutes ago      ≤ 110.4KiB    [repoOwner] B\n```", "```py\n    % pachctl list file contour@master\n    ```", "```py\nNAME             TYPE SIZE\n/brown_vase.png file 23.78KiB\n/hand.png       file 29.79KiB\n/landscape.png  file 64.08Kib \n```", "```py\n    % pachctl get file contour@master:hand.png | open -f -a Preview.app\n    ```", "```py\n    % pachctl port-forward\n    ```", "```py\nForwarding the pachd (Pachyderm daemon) port...\nlistening on port 30650\nForwarding the pachd (Pachyderm daemon) port...\nlistening on port 30650\nForwarding the OIDC callback port...\nlistening on port 30657\nForwarding the s3gateway port...\nlistening on port 30600\nForwarding the identity service port...\nlistening on port 30658\nForwarding the dash service port...\n...\n```", "```py\nfrom skimage import io\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os\ndef create_histogram(photo):\n    image = io.imread(photo)\n    t = os.path.split(photo)[1]\n    plt.hist(image.ravel(), bins=np.arange(10, 70),  color='blue', alpha=0.5, rwidth=0.7)\n    plt.yscale('log')\n    plt.margins(x=0.03, y=-0.05)\n    plt.xlabel('Intensity')\n    plt.ylabel('Count')\n    plt.savefig(os.path.join(\"/pfs/out\", os.path.splitext(t)[0]+'.png'))\nfor dirpath, dirnames, filenames in os.walk(\"/pfs/contour\"):\n    for f in filenames:\n        create_histogram(os.path.join(dirpath, f))\n```", "```py\n---\n pipeline:\n   name: histogram\n description: A pipeline that creates histograms for images stored in the contour repository.\n transform:\n   cmd:\n   - python3\n   - \"/histogram.py\"\n   image: svekars/contour-histogram:1.0\n input:\n   pfs:\n     repo: contour\n     glob: \"/\"\n```", "```py\n    % pachctl version\n    ```", "```py\nCOMPONENT           VERSION\npachctl             2.0.0\npachd               2.0.0\n```", "```py\n    % pachctl create pipeline -f histogram.yaml\n    ```", "```py\n    % pachctl list pipeline\n    ```", "```py\nNAME      VERSION INPUT     CREATED        STATE / LAST JOB  DESCRIPTION\ncontour   1       photos:/* 12 minutes ago running / success A pipeline that identifies contours on an image.\nhistogram 1       contour:/ 12 seconds ago running / success A pipeline that creates histograms for images stored in the contour repository.\n```", "```py\n    % pachctl list repo\n    ```", "```py\nNAME      CREATED            SIZE (MASTER) DESCRIPTION\nhistogram 23 seconds ago ≤ 27.48KiB    [repoOwner]  Output repo for pipeline histogram.\ncontour   24 minutes ago ≤ 117.6KiB    [repoOwner]  Output repo for pipeline contour.\nphotos    29 minutes ago ≤ 110.4KiB    [repoOwner]   \n```", "```py\n    % pachctl list file histogram@master\n    ```", "```py\nNAME           TYPE     SIZE\n/hand.png      file 9.361KiB\n/landscape.png file 9.588KiB\n/brown_vase.png  file 8.526KiB\n```", "```py\n    pachctl get file histogram@master:landscape.png | open -f -a Preview.app\n    ```", "```py\n    pachctl delete pipeline –all && pachctl delete repo --all\n    ```", "```py\n    pachctl list repo && pachctl list pipeline\n    ```", "```py\nNAME CREATED SIZE (MASTER) DESCRIPTION\nNAME VERSION INPUT CREATED STATE / LAST JOB DESCRIPTION\n```"]