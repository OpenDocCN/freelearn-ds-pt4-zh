["```py\ngo version\n```", "```py\ngo version go1.16.4 darwin/amd64\n```", "```py\n    go version go1.16.4 darwin/amd64\n    ```", "```py\n    export GOPATH=\"$HOME/go\"\n    PATH=\"$GOPATH/bin:$PATH\"\n    ```", "```py\n    source ~/.<shell-profile>\n    ```", "```py\n    go env\n    ```", "```py\n    mkdir $GOPATH/src\n    ```", "```py\n    mkdir $GOPATH/src/github.com\n    ```", "```py\n    go get google.golang.org/grpc\n    ```", "```py\n    git clone git@github.com:pachyderm/pachyderm.git\n    ```", "```py\nCloning into 'pachyderm'...\nremote: Enumerating objects: 226153, done.\nremote: Counting objects: 100% (171/171), done.\n...\n```", "```py\n    cd pachyderm\n    ```", "```py\n    git branch\n    ```", "```py\n    git fetch –tags\n    ```", "```py\n    pachctl version\n    ```", "```py\n    COMPONENT           VERSION\n    pachctl             2.0.1\n    pachd               2.0.1\n    ```", "```py\n    git checkout tags/v2.0.1\n    ```", "```py\n    git branch\n    ```", "```py\n* (HEAD detached at v2.0.1)\n  master\n```", "```py\npackage main\n import (\n     \"fmt\"\n     \"log\"\n     \"github.com/gogo/protobuf/types\"\n     \"github.com/pachyderm/pachyderm/v2/src/client\"\n)\n```", "```py\n func main() {\n      c, err := client.NewFromURI(\"grpc://localhost:30650\")\n      if err != nil {\n          log.Fatal(err)\n      }\n```", "```py\n     version, err := c.VersionAPIClient.GetVersion(c.Ctx(), &types.Empty{})\n     if err != nil {\n         panic(err)\n     }\n     fmt.Println(version)\n}\n```", "```py\n    pachctl port-forward\n    ```", "```py\n    go run access.go\n    ```", "```py\nmajor:2 micro:1\n```", "```py\npackage main\n import (\n     \"fmt\"\n     \"log\"\n     \"github.com/pachyderm/pachyderm/v2/src/client\"\n     \"github.com/pachyderm/pachyderm/v2/src/pfs\"\n)\n```", "```py\nfunc main() {\n     c, err := client.NewOnUserMachine(\"user\")\n     if err != nil {\n         log.Fatal(err)\n     }\n     if _, err := c.PfsAPIClient.CreateRepo(\n         c.Ctx(),\n         &pfs.CreateRepoRequest{\n             Repo:        client.NewRepo(\"photos\"),\n             Description: \"A repository that stores images.\",\n             Update:      true,\n         },\n     ); err != nil {\n         panic(err)\n     }\n     repos, err := c.ListRepo()\n     if err != nil {\n         log.Fatal(err)\n     }\n     fmt.Println(repos)\n }\n```", "```py\n    go run create-repo.go\n    ```", "```py\n[repo:<name:\"photos\" type:\"user\" > created:<seconds:1637264349 nanos:440180000 > description:\"A repository that stores images.\" auth_info:<permissions:REPO_READ permissions:REPO_INSPECT_COMMIT permissions:REPO_LIST_COMMIT permissions:REPO_LIST_BRANCH permissions:REPO_LIST_FILE permissions:REPO_INSPECT_FILE permissions:REPO_ADD_PIPELINE_READER permissions:REPO_REMOVE_PIPELINE_READER permissions:PIPELINE_LIST_JOB permissions:REPO_WRITE permissions:REPO_DELETE_COMMIT permissions:REPO_CREATE_BRANCH permissions:REPO_DELETE_BRANCH permissions:REPO_ADD_PIPELINE_WRITER permissions:REPO_MODIFY_BINDINGS permissions:REPO_DELETE roles:\"repoOwner\" > ]\n```", "```py\npackage main\n import (\n     \"fmt\"\n     \"log\"\n     \"os\"\n     \"github.com/pachyderm/pachyderm/v2/src/client\"\n)\n```", "```py\nfunc main() {\n     c, err := client.NewOnUserMachine(\"user\")\n     if err != nil {\n         log.Fatal(err)\n     }\n```", "```py\n     myCommit := client.NewCommit(\"photos\",\"master\", \"\")\n     f1, err := os.Open(\"landscape.png\")\n     if err != nil {\n         panic(err)\n     }\n     if err := c.PutFile(myCommit, \"landscape.png\", f1); err != nil {\n         panic(err)}\n     f2, err := os.Open(\"brown_vase.png\")\n     if err != nil {\n         panic(err)\n     }\n     if err := c.PutFile(myCommit, \"brown_vase.png\", f2); err != nil {\n         panic(err)\n     }\n     f3, err := os.Open(\"hand.png\")\n     if err != nil {\n         panic(err)\n     }\n     if err := c.PutFile(myCommit, \"hand.png\", f3); err != nil {\n         panic(err)\n     }\n```", "```py\n    files, err := c.ListFileAll(myCommit, \"/\")\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(files)\n}\n```", "```py\ngo run put-files.go\n```", "```py\n[file:<commit:<branch:<repo:<name:\"photos\" type:\"user\" > name:\"master\" > id:\"2c15226b838f48cabd2ae13b43c26517\" > path:\"/brown_vase.png\" datum:\"default\" > file_type:FILE committed:<seconds:1637299733 nanos:503150000 > size_bytes:93481 hash:\"\\2061\\023\\026\\376O&\\323\\313\\212\\215\\226Ra\\346\\245=Er\\r_@E\\023\\360\\352\\240\\275}\\204\\235\\346\"  file:<commit:<branch:<repo:<name:\"photos\" type:\"user\" > name:\"master\" > id:\"2c15226b838f48cabd2ae13b43c26517\" > path:\"/hand.png\" datum:\"default\" > file_type:FILE committed:<seconds:1637299733 nanos:503150000 > size_bytes:856063 hash:\"\\014X\\224\\032\\0251\\260(\\263\\267\\234\\345{\\016\\353a\\0310\\3579\\354\\323\\372\\013\\357yFg\\274\\256\\000}\"  file:<commit:<branch:<repo:<name:\"photos\" type:\"user\" > name:\"master\" > id:\"2c15226b838f48cabd2ae13b43c26517\" > path:\"/landscape.png\" datum:\"default\" > file_type:FILE committed:<seconds:1637299733 nanos:503150000 > size_bytes:54009 hash:\"\\320:\\265\\036\\3363z&\\264\\324]\\364unfv\\243\\300\\001[\\206\\347\\344b\\257\\274\\366\\220JnR\\004\" ]\n```", "```py\npackage main\n import (\n     \"fmt\"\n     \"log\"\n\n     \"github.com/pachyderm/pachyderm/v2/src/client\"\n     \"github.com/pachyderm/pachyderm/v2/src/pps\"\"\n )\n```", "```py\nfunc main() {\n     c, err := client.NewFromAddress(\"127.0.0.1:30650\")\n     if err != nil {\n         log.Fatal(err)\n     }\n```", "```py\nif err := c.CreatePipeline(\n         \"contour\",\n         \"svekars/contour-histogram:1.0 \",\n         []string{\"python3\", \"/contour.py\"},\n         []string{},\n         &pps.ParallelismSpec{\n             Constant: 1,\n         },\n         client.NewPFSInput(\"photos\", \"/\"),\n         \"\",\n         false,\n     ); err != nil {\n         panic(err)\n     }\n```", "```py\nif err := c.CreatePipeline(\n         \"histogram\",\n         \"svekars/contour-histogram:1.0\",\n         []string{\"python3\", \"/histogram.py\"},\n         []string{},\n         &pps.ParallelismSpec{\n             Constant: 1,\n         },\n         client.NewPFSInput(\"contour\", \"/\"),\n         \"\",\n         false,\n     ); err != nil {\n         panic(err)\n     }\n```", "```py\n     pipelines, err := c.ListPipeline(true)\n     if err != nil {\n         panic(err)\n     }\n     fmt.Println(pipelines)\n }\n```", "```py\ngo run create-pipeline.go\n```", "```py\n[pipeline:<name:\"histogram\" > version:1 spec_commit:<branch:<repo:<name:\"histogram\" type:\"spec\" > name:\"master\" > id:\"44945b0d0e2944e3b1015617e224e3e3\" > state:PIPELINE_STARTING job_counts:<key:1 value:1 > last_job_state:JOB_CREATED parallelism:1 type:PIPELINE_TYPE_TRANSFORM details:<transform:<image:\"svekars/contour-histogram:1.0\" cmd:\"python3\" cmd:\"/histogram.py\" > parallelism_spec:<constant:1 > created_at:<seconds:1637300756 nanos:806783300 > output_branch:\"master\" input:<pfs:<name:\"contour\" repo:\"contour\" repo_type:\"user\" branch:\"master\" glob:\"/\" > > salt:\"0715a02027ba4489a79bd8a400f349ad\" datum_tries:3 reprocess_spec:\"until_success\" >  \npipeline:<name:\"contour\" > version:1 spec_commit:<branch:<repo:<name:\"contour\" type:\"spec\" > name:\"master\" > id:\"f3f8bf226e5a4dda8a9f27da10b7fd87\" > state:PIPELINE_STARTING job_counts:<key:1 value:1 > last_job_state:JOB_CREATED parallelism:1 type:PIPELINE_TYPE_TRANSFORM details:<transform:<image:\"svekars/contour-histogram:1.0 \" cmd:\"python3\" cmd:\"/contour.py\" > parallelism_spec:<constant:1 > created_at:<seconds:1637300756 nanos:592992600 > output_branch:\"master\" input:<pfs:<name:\"photos\" repo:\"photos\" repo_type:\"user\" branch:\"master\" glob:\"/\" > > salt:\"98c0a867ea56439eb1f2466fbf1aa838\" datum_tries:3 reprocess_spec:\"until_success\" > ]\n```", "```py\npackage main\n import (\n     \"fmt\"\n     \"log\"\n     \"github.com/pachyderm/pachyderm/v2/src/client\"\n )\n```", "```py\n     if err := c.DeleteRepo(\"contour\", true); err != nil {\n         panic(err)\n     }\n     if err := c.DeleteRepo(\"photos\", true); err != nil {\n          panic(err)\n     }\n     if err := c.DeleteRepo(\"histogram\", true); err != nil {\n           panic(err)\n     }\n     if err := c.DeletePipeline(\"contour\", true); err != nil {\n           panic(err)\n     }\n     if err := c.DeletePipeline(\"histogram\", true); err != nil {\n           panic(err)\n     }\n```", "```py\npipelines, err := c.ListPipeline(true)\n     if err != nil {\n         panic(err)\n     }\n     fmt.Println(pipelines)\n     repos, err := c.ListRepo()\n     if err != nil {\n         log.Fatal(err)\n     }\n     fmt.Println(repos)\n }\n```", "```py\ngo run cleanup.go\n```", "```py\n[]\n[]\n```", "```py\n    pip install python-pachyderm\n    ```", "```py\nCollecting python-pachyderm\n  Downloading python-pachyderm-6.2.0.tar.gz (409 kB)\n  ...\nSuccessfully installed grpcio-1.38.0 protobuf-3.17.0 python-pachyderm-6.2.0\n```", "```py\nimport python_pachyderm\nclient = python_pachyderm.Client()\nprint(client.get_remote_version())\n```", "```py\npython access.py\n```", "```py\nmajor: 2\nmicro: 1\n```", "```py\nimport python_pachyderm\nclient = python_pachyderm.Client()\nclient.create_repo(\"photos\")\nprint(list(client.list_repo()))\n```", "```py\npython create-repo.py\n```", "```py\n[repo {\n  name: \"photos\"\n  type: \"user\"\n}\ncreated {\n  seconds: 1637207890\n  nanos: 80987000\n}\nauth_info {\n  permissions: REPO_READ\n  permissions: REPO_INSPECT_COMMIT\n...\n```", "```py\nimport python_pachyderm\nclient = python_pachyderm.Client()\nwith client.commit('photos', 'master') as i:\n     client.put_file_url(i, 'landscape.png', 'https://i.imgur.com/zKo9Mdl.jpg')\n     client.put_file_url(i, 'hand.png', 'https://i.imgur.com/HtZ8FyG.png')\n     client.put_file_url(i, 'red_vase.png', 'https://i.imgur.com/d45jop9.jpg') print(list(client.list_file((\"photos\",\"master\"), \"/\")))\n```", "```py\npython put-files.py\n```", "```py\n[file {\n  commit {\n    branch {\n      repo {\n        name: \"photos\"\n        type: \"user\"\n      }\n      name: \"master\"\n    }\n    id: \"e29c6f5c49244ce193fe5f86c9df0297\"\n  }\n  path: \"/hand.png\"\n  datum: \"default\"\n}\nfile_type: FILE\ncommitted {\n  seconds: 1637208291\n  nanos: 161527000\n}\nsize_bytes: 856063\nhash: \"\\014X\\224\\032\\0251\\260(\\263\\267\\234\\345{\\016\\353a\\0310\\3579\\354\\323\\372\\013\\357yFg\\274\\256\\000}\"  \n...\n]\n```", "```py\nimport python_pachyderm\nfrom python_pachyderm.service import pps_proto\nclient = python_pachyderm.Client()\n client.create_pipeline(\n     pipeline_name=\"contour\",\n     transform=pps_proto.Transform(\n         cmd=[\"python3\", \"contour.py\"],\n         image=\"svekars/contour-histogram:1.0\",\n     ),\n     input=pps_proto.Input(\n         pfs=pps_proto.PFSInput(glob=\"/\", repo=\"photos\")\n     ),\n )\n```", "```py\nclient.create_pipeline(\n     pipeline_name=\"histogram\",\n     transform=pps_proto.Transform(\n         cmd=[\"python3\", \"histogram.py\"],\n         image=\"svekars/contour-histogram:1.0\",\n     ),\n     input=pps_proto.Input(\n         pfs=pps_proto.PFSInput(glob=\"/\", repo=\"contour\")\n     ),\n )\n```", "```py\n Print(list(client.list_pipeline()))\n```", "```py\npython create-pipeline.py\n```", "```py\n[pipeline {\n  name: \"histogram\"\n}\nversion: 1\nspec_commit {\n  branch {\n    repo {\n      name: \"histogram\"\n      type: \"spec\"\n    }\n    name: \"master\"\n  }\n  id: \"94286ef36318425c8177bd4e0f959c57\"\n}\nstate: PIPELINE_STARTING\njob_counts {\n  key: 1\n  value: 1\n}...\n```", "```py\nimport python_pachyderm\nclient.delete_repo(\"photos\", force=True)\nclient.delete_pipeline(pipeline_name=\"contour\", force=True, keep_repo=False)\nclient.delete_pipeline(pipeline_name=\"histogram\", force=True, keep_repo=False)\nprint(list(client.list_repo()))\nprint(list(client.list_pipeline()))\n```", "```py\npython cleanup.py\n```", "```py\n[]\n[]\n```"]