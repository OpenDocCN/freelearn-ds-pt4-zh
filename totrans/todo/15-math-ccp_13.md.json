["```py\n import pandas as pd\nimport kernel_fda\n# Read in the data\ndf_LDA_ex1 = pd.read_csv('../Data/lda_ex1.csv')\n```", "```py\n # Take a quick look at the dataframe\ndf_LDA_ex1\n```", "```py\n x1           x2     class\n0    -0.297128   0.477975  2\n1    -0.575548  -0.274354  1\n2    -0.793637  -0.681858  1\n3     0.842911  -0.766655  2\n4    -0.566261   0.621195  2\n...   ...   ...   ... 995  -0.797437   0.922392  2\n996  -0.247480   0.526261  2\n997  -0.562740  -0.328817  1\n998  -0.376398   0.211520  1\n999   0.799909   0.486870  2\n```", "```py\n # Create the linear classifier\nlinear_classifier_ex1 = kernel_fda.KFDA_Poly(degree=1)\n```", "```py\n # Fit the linear classifier\nlinear_classifier_ex1.fit(X=df_LDA_ex1[['x1','x2']], \n                          y=df_LDA_ex1['class'])\n```", "```py\n linear_classifier_ex1.score(X=df_LDA_ex1[['x1','x2']], \n                            y_true=df_LDA_ex1['class'])\n```", "```py\n # Read in the data\ndf_LDA_ex2 = pd.read_csv('../Data/lda_ex2.csv')\n```", "```py\n # Create the linear classifier\nlinear_classifier_ex2 = kernel_fda.KFDA_Poly(degree=1)\n```", "```py\n # Fit the linear classifier\nlinear_classifier_ex2.fit(X=df_LDA_ex2[['x1','x2']], \n                          y=df_LDA_ex2['class'])\n```", "```py\n linear_classifier_ex2.score(X=df_LDA_ex2[['x1','x2']], \n                            y_true=df_LDA_ex2['class'])\n```", "```py\n # Create a quadratic dot-product kernel Fisher Discriminant\nkernel_classifier = kernel_fda.KFDA_Poly(degree=2)\n```", "```py\n # Fit the kernel classifier to the training data\nkernel_classifier.fit(X=df_LDA_ex2[['x1','x2']], \n                      y=df_LDA_ex2['class'])\n```", "```py\n # Score the trained classifier on the training data\nkernel_classifier.score(X=df_LDA_ex2[['x1','x2']], \n                        y_true=df_LDA_ex2['class'])\n```"]